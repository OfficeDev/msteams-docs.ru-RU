### YamlMime:Tutorial
title: Пузырь контента для собраний
metadata:
  title: Пузырь контента для собраний
  description: В этом руководстве вы узнаете, как отправить ответ на собрание контента в Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/03/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: Дополнительные возможности для запуска и настройки приложений для собраний
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: dc058a03103cd7e71879a3fa485e2f8400fd65e8
  ms.sourcegitcommit: a2d7d2bdf4b056b35f29c6fdb315bc7dc28b6f6f
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 12/20/2021
  ms.locfileid: "61569852"
items:
- durationInMinutes: 1
  content: >
    Microsoft Teams помогает взаимодействовать с ботом пузырьков контента в Teams собрании.


    **Основные функции пузыря контента собраний**


    * Вы увидите пункты повестки дня, перечисленные в адаптивной карте.

    * Вы можете выбрать любой вариант в данной повестке дня.

    * Вы можете отправить отзывы о пузыре контента или адаптивной карте, отправленной в чате.


    Это пошаговая руководство помогает отправлять отзывы боту пузырьков контента во время собраний в Teams с участниками. Вы увидите следующий вывод:

       ![Введение пузырька контента для собраний](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- title: Предварительные требования
  durationInMinutes: 1
  content: "Убедитесь, что вы установите следующие средства и настроите среду разработки:  \n\n* Microsoft Teams с допустимой учетной записью\n* [.NET Core SDK](https://dotnet.microsoft.com/download) версии 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) последняя версия (только для тестирования devbox) или любое эквивалентное решение для туннелей\n\nУбедитесь, что у вас есть [рабочие знания C#](https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments).\n"
- title: Настройка локальной среды
  durationInMinutes: 1
  content: "`Microsoft-Teams-Samples`Репозиторий клонов в локальное GitHub:  \n\n 1. Откройте [Microsoft Teams примеры](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Выберите **код**.\n 1. Из выпадаемом меню выберите **Open с GitHub Desktop.**\n\n    ![Репозиторий клонов](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository1.png)\n\n 1. Выберите **клон**. \n"
- title: Создание и регистрация бота на AAD портале
  durationInMinutes: 5
  content: "Чтобы создать и зарегистрировать бота в Azure Active Directory (AAD), создайте туннель с помощью ngrok и добавьте конечную точку обмена сообщениями выполните следующие действия:\n\n* Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n* Создание секрета клиента, который позволяет SSO-проверку подлинности бота.\n* Добавьте Microsoft Teams канал, чтобы развернуть бот в Teams канал.\n* Для создания туннеля к конечным точкам веб-сервера используйте ngrok.\n* Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\n**Создание ресурса Azure Bot**\n\n1. Перейдите на [портал Azure](https://portal.azure.com/).\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **Azure Bot**.\n1. Выберите **Ввод**.\n1. Выберите **Azure Bot**.\n\n     ![Создание карты-бота Azure](~/assets/images/bots/createazurebot.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя ручки бота в **ручке Bot.**\n1. Из списка **выпаданий** подписки выберите **msteams.nonprod.pub.msft.aplt**.\n1. Из списка **выпаданий** группы Ресурсов выберите существующую группу ресурсов. Вы также можете создать новую группу ресурсов (выберите **Создание** новых > введите имя ресурса > выберите **ОК).**\n\n1. Выберите необходимое расположение из **списка выпаданий** группы новых ресурсов.\n\n    ![Создание бота Azure ресурса](~/assets/images/meeting-content-bubble/meeting-token-generator-review-plus-create.png)\n\n1. В разделе **Microsoft App ID** по умолчанию **выбирается новый ID** приложения Майкрософт. \n\n   Вы можете выбрать **использование** существующей регистрации приложений и **ввести** существующий код приложения и существующий пароль **приложения,** или выбрать Создать новый код **Приложения Microsoft**.\n\n   > [!NOTE]\n   > Вы не можете создать несколько ботов с одним и тем же **microsoft App ID**.\n\n1. Выберите **Проверить и создать**.\n\n    ![Создание ID приложения Майкрософт](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. Если проверка проходит, выберите **Создать**.\n\n    Подготовка службы бота занимает несколько минут.\n\n1. Выберите пункт **Перейти к ресурсу**. \n\n    ![Развертывание приложения](~/assets/images/meeting-content-bubble/meeting-token-generator-botdeployment.png)\n\n    Создан бот Azure.\n\n    ![Созданный ресурс бота Azure](~/assets/images/meeting-content-bubble/meeting-content-bubble-creating-resource-group.png)\n\n**Создание секрета клиента**\n\n  Выполните следующие действия, если вы создали новый **microsoft App ID:**\n\n1. В левой панели выберите **Конфигурация**. \n\n   > [!TIP]\n   > Сохраните **microsoft App ID** или **client ID** для будущих ссылок.\n\n1. Рядом с **Microsoft App ID** выберите **Управление**.\n\n    ![Microsoft App ID](~/assets/images/meeting-content-bubble/meeting-content-bubble-view-configuration.png)\n\n1. В разделе **Секреты клиента** выберите новый **секрет клиента.** \n\n    ![Секрет нового клиента](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   Появится **окно \"Добавление секрета клиента\".**  \n\n1. Введите **Описание**.\n\n1. Нажмите **Добавить**.\n\n    ![Добавление секрета клиента в приложение](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)\n\n1. В **столбце Значение** выберите **Копию в буфер обмена.**\n\n     ![Значение секрета клиента](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-secret.png)\n   \n   > [!TIP]\n   > Сохраните **значение \"Секреты клиента\"** или пароль приложения для будущей ссылки.\n\n**Добавление канала Microsoft Teams**\n\n1. Выбор **дома**.\n\n1. Выберите бот из **последних ресурсов.**\n\n1. Выберите **Каналы в** левой области. \n\n1. Выберите **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Выберите почтовый ящик, чтобы принять **Условия службы.**\n\n1. Выберите **Согласование**.\n\n      ![Условия обслуживания](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Нажмите **Сохранить**.\n\n      ![Выберите Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Создание туннеля для локального веб-сервера**\n\nИспользуйте ngrok для создания туннеля для общедоступных конечных точек HTTPS локального запуска веб-сервера. Запустите следующую команду в ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Добавление конечной точки обмена сообщениями**\n\n1. Из ngrok скопируйте URL-адрес HTTPS (https to io).\n\n    ![URL-адрес https ngrok](~/assets/images/meeting-content-bubble/meeting-content-bubble-messaging-end-point.png)\n\n    > [!NOTE]\n    > URL-адрес HTTPS в ngrok — это ваше полное доменное имя.\n    > Это `WebAppDomain` полностью квалифицированное доменное имя, которое не входит `https://` в него.\n\n1. В **Параметры** для созданного вами бота Azure выберите **Конфигурация.**\n\n1. В **конечной точке** обмена сообщениями используйте URL-адрес HTTPS, доступный в ngrok и в конце **URL-адреса добавить /api/messages.**\n\n    ![Конечная точка обмена сообщениями](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-messaging-end-point.png)\n\n1. Нажмите **Применить**.\n\n    Вы успешно создали бот в службе Azure Bot.\n"
- title: Обновление регистрации AAD приложения
  durationInMinutes: 1
  content: "**Регистрация приложения на портале AAD**  \n\n1. Перейдите на [портал Azure](https://portal.azure.com/).\n\n1. Выберите **Azure Active Directory**.\n\n1. В левой панели навигации выберите **регистрация приложений.**\n\n1. Выберите бот.\n\n1. В разделе **Управление** выберите **Предоставление API**.\n\n1. Выберите **набор**.\n\n1. Установите **URI ID приложения** в виде `api://{AppID}` .\n\n   ![Настройка ссылки](~/assets/images/meeting-content-bubble/meeting-content-bubble-set-api.png)\n\n1. Вставьте `WebAppDomain` значение между и `api://` `/{AppID}` .</br>\n    `api://****.ngrok.io/{AppID}`</br>\n    \n    ![URI кода надстройки](~/assets/images/meeting-content-bubble/meeting-content-bubble-expose-api.png)\n\n    > [!NOTE]\n    > Если вы используете службу тоннелей, например ngrok, убедитесь, что вы обновляете значение всякий раз, когда изменяется поддомен ngrok.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, где `f631****.ngrok.io` новое имя поддомена ngrok.\n\n1. Нажмите **Добавить область**. \n\n    ![Добавление области](~/assets/images/meeting-content-bubble/selectscope.png)\n\n1. На панели, которая появится, `access_as_user` введите в качестве **имени Область**.\n\n1. Установите **Кто может согласиться?** `Admins and users` .\n\n1. Чтобы настроить запросы на согласие администратора и пользователя с соответствующими значениями для области, в полях необходимо предоставить следующие `access_as_user` сведения:</br>\n\n     * Введите `Teams can access the user’s profile` в качестве имени отображения согласия **администратора**.\n\n     * Введите `Allows Teams to call the app’s web APIs as the current user` в качестве описания согласия **администратора**.\n\n     * Введите `Teams can access the user profile and make requests on the user’s behalf` имя отображения **согласия пользователя.**\n\n     * Введите `Enable Teams to call this app’s APIs with the same rights as the user` в качестве описания согласия **пользователя**.\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n1. Выберите **Добавить область** для сохранения.\n\n    ![Добавление области](~/assets/images/meeting-content-bubble/meeting-content-bubble-access-as-user.png)\n\n   > [!NOTE]\n   > Имя **Scope должно** совпадать с **URI ID** приложения с приложением в `/access_as_user` конце.</br>\n       `api://****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Область](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-scope.png)\n\n1. В разделе **Авторизованные клиентские приложения** определите приложения, которые необходимо авторизировать для веб-приложения вашего приложения. \n\n1. Выберите **Добавление клиентского приложения.** \n\n    ![Добавление клиентского приложения](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) \n\n1. Введите **client ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` для Teams или настольного приложения. \n\n    ![Добавление клиентского приложения 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) \n\n   Вы можете **ввести client ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` для Teams веб-приложения.\n\n    ![Добавление клиентского приложения 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) \n\n1. Выберите **разрешенные области.**\n\n     ![Добавление клиентского приложения](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-client-app.png)\n\n   На следующем изображении отображаются клиентские ИД:\n\n     ![Клиентские приложения](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-applications.png) \n\n1. В левой панели выберите **API Permissions**. \n\n   > [!NOTE]\n   > Пользователи должны согласиться на эти разрешения только в том случае, AAD приложение будет зарегистрировано в другом клиенте.\n\n1. Выберите **Добавить разрешение**.\n\n1. Выберите **Microsoft Graph**.\n\n1. Выберите **Делегированные разрешения**.\n\n    По умолчанию **выбирается User.Read.**\n\n     ![User](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. Добавьте указанные ниже разрешения.</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. Выберите **Добавить разрешения**.\n\n     ![Другие разрешения](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)\n\n1. На левой панели выберите **проверку подлинности,** чтобы установить URI перенаправления. \n\n   > [!NOTE]\n   > Если приложению не предоставлено согласие ИТ-администратора, пользователи должны предоставить согласие при первом использовании приложения.\n           \n     1. Выберите **Добавить платформу.**\n     1. Выберите платформу **Веб**.\n\n        ![Web](~/assets/images/meeting-content-bubble/meeting-content-bubble-platform-web.png)\n\n     1. Введите URI перенаправления для приложения, примыкая к `auth-end` полностью квалифицированному доменному имени:</br> \n       `https://****.ngrok.io/auth-end`. </br>\n\n     1. Включить **неявные грантовые и гибридные** потоки, выбрав следующие почтовые ящики:\n         * **Маркеры ID**\n         * **Маркеры доступа**\n\n     1. Выберите **Configure**.\n\n        ![Auth-end](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-web.png)\n"
- title: Настройка параметров приложения
  durationInMinutes: 1
  content: "1. Перейдите **к appsettings.json в** клонированном репозитории.\n\n    ![Расположение параметров приложения](~/assets/images/meeting-content-bubble/navigate-to-meeting-content-bubble-repo.png)\n\n1. Откройте **appsettings.json** **в Visual Studio 2019** г. и обновив следующие сведения:  \n\n     * Установите `\"MicrosoftAppId\"` для вашего бота Microsoft App **ID**.\n     * `\"MicrosoftAppPassword\"`Задайте значение секретного ИД клиента вашего бота.\n     * Установите `\"BaseURL\"` для `webAppDomain` вашего .\n\n    ![Параметры приложения](~/assets/images/meeting-content-bubble/appsettings-json.png)\n"
- title: Настройка файла манифеста
  durationInMinutes: 1
  content: >
    1. Перейдите **к manifest.json в** клонированном репозитории.


    1. Откройте **manifest.json** **в Visual Studio 2019** г. и внести следующие изменения:

         * `id`Установлено, что`[MicrosoftAppId]`
         * `botId`Установлено, что`[MicrosoftAppId]`
         * `validDomains`Установлено, что`[WebAppDomainName]`

          > [!NOTE]
          > `WebAppDomain` является доменом ngrok.

          ![Manifest image1](~/assets/images/meeting-content-bubble/manifest-set.png)
- title: Создание и запуск службы
  durationInMinutes: 1
  content: "**Создание и запуск службы с Visual Studio 2019 г.**\n\n   1. Запуск **Visual Studio 2019**.\n   1. Перейдите к  >  **файлу**  >  **Open Project/Solution**.\n\n      ![Открытый файл](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. Откройте `ContentBubbleBot.sln` файл.\n\n      ![Открытый файл](~/assets/images/meeting-content-bubble/proj-sln.png)\n\n   1. Нажмите **fn+F5 для** запуска проекта.\n\n      Откроется веб-сайт с сообщением о том, **что ваш бот готов!**.\n\n      ![Готовое приложение](~/assets/images/meeting-content-bubble/your-bot-is-ready.png) \n"
- title: Добавление приложения для пузырьков контента собрания в Teams
  durationInMinutes: 1
  content: "**Создание собрания Teams и добавление пузыря контента meeting**\n\n1. В клонированном репозитории перейдите к **csharp > Resources > Manifest**.\n\n1. Создайте .zip со следующими файлами, присутствующими в папке **Манифест:** \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip-файл](~/assets/images/meeting-content-bubble/create-manifest-zip.png) \n\n1. Создайте собрание с несколькими участниками и участниками.\n\n1. После создания собрания выберите **+** добавить **приложение.**\n\n   ![Добавление приложения](~/assets/images/meeting-content-bubble/add-an-app.png) \n\n1. В открываемом всплываемом всплывающее окно выберите **Управление приложениями.**\n\n   ![Управление приложениями](~/assets/images/meeting-content-bubble/manage-apps.png)\n\n1. Выберите **Upload настраиваемом приложении.** \n\n   ![Upload настраиваемом приложении](~/assets/images/meeting-content-bubble/upload-custom-app.png)\n\n1. Выберите **Открыть,** чтобы загрузить .zip файл, созданный в **папке Манифест.**\n\n   ![Upload почтовый индекс](~/assets/images/meeting-content-bubble/zip.png)\n\n1. Нажмите **Добавить**.\n\n   ![Добавление приложения](~/assets/images/meeting-content-bubble/content-bubble-demo.png)\n\n1. В **разделе Управление приложениями** отображается список приложений.\n\n   ![Управление приложениями](~/assets/images/meeting-content-bubble/Manage.png)\n\n1. Перейдите в чат собраний.\n\n1. **Демо-приложение Content Bubble** отправляет автоматический ответ в чат собрания.\n\n   ![Демонстрационный ответ пузырь контента](~/assets/images/meeting-content-bubble/content-bubble-demo-first-reply.png)\n\n1. Отправьте **сообщение привета** боту.\n\n   ![Упоминание бота](~/assets/images/meeting-content-bubble/content-bubble-demo-second-reply.png)\n\n1. Бот отправляет вам пункты повестки дня, перечисленные в адаптивной карте.\n\n1. Выберите любой параметр и выберите **Push Agenda для** отправки ответа.\n\n   ![Бот отправляет вам адаптивную карту](~/assets/images/meeting-content-bubble/push-agenda.png)\n\n1. Бот отправляет **адаптивную карточку обратной** связи.\n\n1. Выберите **Да** или **Нет**.\n\n1. Выберите **Отправить**.\n\n   ![Бот отправляет вам карточку обратной связи](~/assets/images/meeting-content-bubble/content-bubble-feedback.png)\n\n    Бот отправляет сообщение обратной связи.\n  \n"
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?


    ![Демо-версии контента и мобильный](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- content: Вы завершили руководство по началу работы с приложением для пузырьков контента собраний.
