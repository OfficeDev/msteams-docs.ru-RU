### YamlMime:Tutorial
title: Отправка упреждающих сообщений
metadata:
  title: Отправка упреждающих сообщений
  description: В этой статье вы узнаете, как отправлять упреждающие сообщения, такие как приветственные сообщения, запланированные сообщения и уведомления от бота.
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: Дополнительные сведения об упреждающих сообщениях
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c0f640b4e51c2f40763edfed72571b8458b8aa19
  ms.sourcegitcommit: ac59d469b823b80e65ee6f7be11ec5c365977a1c
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 10/06/2022
  ms.locfileid: "68489935"
items:
- durationInMinutes: 1
  content: "Упреждающее сообщение — это любое сообщение, отправленное ботом, которое не является ответом на запрос пользователя, который содержит такие сообщения, как:\n - Приветствия\n - Уведомления\n - Запланированные сообщения\n \nЭто пошаговое руководство поможет отправить упреждающее сообщение от бота. Вы увидите следующие выходные данные:\n\n* Упреждающее привет-сообщение в чате.     \n![Упреждающее привет в чате](~/assets/images/proactive-scenario/proactive-helo.png)\n\n* Упреждающее привет-сообщение в виде адаптивной карточки.\n![упреждающее привет в адаптивной карточке](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png) \n"
- title: Предварительные требования
  durationInMinutes: 2
  content: "Убедитесь, что вы установите следующее:    \n\n| &nbsp; | Установка | Для использования... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Visual Studio 2022 версии 17.3](https://visualstudio.microsoft.com)<br> Установите одну из следующих двух рабочих нагрузок:<br> • **ASP.NET и веб-разработки** <br> • **Кроссплатформенная разработка .NET Core** | Вы можете установить корпоративную версию в Visual Studio 2022 и установить рабочие нагрузки. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Функции приложений Teams (боты для общения, расширения сообщений и входящие веб-перехватчики) требуют входящих подключений. Туннель подключает систему разработки к Teams. Он не требуется для приложений, которые включают только вкладки. Этот пакет устанавливается в каталоге проекта (с помощью npm `devDependencies`). |\n | &nbsp; | [Учетная запись разработчика Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Доступ к учетной записи Teams с соответствующими разрешениями на установку приложения. |\n | &nbsp; | [Visual Studio 2022 версии 17.3](https://visualstudio.microsoft.com)<br> Установите одну из следующих двух рабочих нагрузок:<br> • **ASP.NET и веб-разработки** <br> • **Кроссплатформенная разработка .NET Core** | Вы можете установить корпоративную версию в Visual Studio 2022 и установить рабочие нагрузки. |\n | &nbsp; | [ASP.NET веб-разработки](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-5.0.301-windows-x64-installer) или [.NET Core](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.410-windows-x64-installer) | Вы можете установить кроссплатформенные рабочие нагрузки разработки для .NET Core. |\n"
- title: Настройка локальной среды
  durationInMinutes: 3
  content: "1.  Скачайте [пример кода](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (ZIP-файл) и извлеките файлы.\n1.  Перейдите к извлеченным файлам и дважды щелкните **ProactiveBot.csproj**. Решение откроется в Visual Studio.\n1.  В Visual Studio щелкните правой кнопкой мыши проект (**ProactiveBot**) и **выберите \"** Сборка\", чтобы создать решение.\n\n    ![Проект Proactivebot](~/assets/images/proactive-scenario/proactivebot-project.png)\n\n    <br>\n\n    <details>\n\n    <summary><b>Устранение неполадок</b></summary>\n\n    Если вы получаете сообщение **об ошибке \"Не удается найти пакет** \", выполните следующие действия.\n\n    1.  Перейдите к **параметрам диспетчера** >  пакетов **Диспетчера пакетов NuGet** > **tools.**\n    1.  В **отобразимом** окне \"Параметры\" выберите источники пакетов **диспетчера пакетов** >  **NuGet**.\n    1.  Нажмите **Добавить**.\n    1.  Введите `nuget.org` имя **и** поля `https://api.nuget.org/v3/index.json` **\"Источник** \".\n    1.  Нажмите **кнопку \"Обновить** \" и \" **ОК\"**.\n    1.  Перестройте проект.\n    <br>\n\n    </details>\n    \n1. Распакуйте, чтобы установить ngrok.\n   * Windows: дважды щелкните `ngrok.zip`.\n   * Linux или OS X: распакуйте ngrok из терминала и выполните команду `unzip /path/to/ngrok.zip` .\n1. Запустите ngrok из командной строки со следующими аргументами:\n\n    `ngrok http 3978 --host-header=localhost`  \n    \n1. Скопируйте URL-адрес ngrok (как показано на изображении) для дальнейшей ссылки в качестве базового URL-адреса ngrok на следующих шагах. \n\n    ![базовый URL-адрес ngrok](~/assets/images/proactive-scenario/ngrok-base-url.png)   \n"
- title: Создание и установка приложения Teams
  durationInMinutes: 5
  content: "1. Перейдите в Teams > **App Studio** и импортируйте `AppManifest.zip` файл, доступный в скачанный пример кода (ZIP-файл).\n\n    ![App Studio import App](~/assets/images/proactive-scenario/app-studio-import-app.png) \n\n1. Выберите **\"Настроить ботов** > **\"**.\n\n    ![Настройка бота](~/assets/images/proactive-scenario/bot-setup.png)  \n\n1. В **окне \"Настройка бота** \" **введите имя** (например, **\"Демонстрация упреждающего сообщения\"**).\n1. Выберите **\"Личные** \", а **затем выберите \"Создать бота** \", чтобы создать бота.\n\n    ![Создание идентификатора бота](~/assets/images/proactive-scenario/create-bot-id.png)   \n\n1. Добавьте **/api/messages** в базовый URL-адрес ngrok (который вы скопировали) и задайте его в качестве адреса конечной точки **бота**. URL-адрес будет выглядеть следующим образом. `https://yourngrokdomain.ngrok.io/api/messages`\n\n    ![Адрес конечной точки бота](~/assets/images/proactive-scenario/bot-endpoint-address.png)\n\n1. Подождите несколько секунд, чтобы изменения вступили в силу.     \n\n    > Если это занимает больше времени, **выберите \"** Вкладки\", а затем раздел **\"Боты** \" для принудительного обновления.\n    \n1. Выберите **\"Создать новый пароль\"** , чтобы создать новый пароль приложения и скопировать его. \n\n    ![Создание пароля приложения](~/assets/images/proactive-scenario/generate-app-password.png)\n\n1. Перейдите в Visual Studio и откройте **файл appsettings.json** . Вставьте пароль в качестве значения для `MicrosoftAppPassword`.    \n1. Перейдите **в App Studio** и скопируйте идентификатор приложения. \n\n    ![Создание идентификатора приложения](~/assets/images/proactive-scenario/generate-app-id.png)\n\n1. Перейдите в Visual Studio и откройте **файл appsettings.json** . Вставьте идентификатор приложения в качестве значения для `MicrosoftAppId`. У `appsettings.json` вас будут следующие значения параметров:    \n\n    ![Значения appsetting](~/assets/images/proactive-scenario/app-setting-values.png)\n\n1. Нажмите **клавишу F5** или **выберите IIS Express** , чтобы выполнить код.\n\n    ![Выполнение кода](~/assets/images/proactive-scenario/run-code.png)\n\n    Появится соответствующий пример упреждающего сообщения:  \n\n    ![Пример упреждающего сообщения](~/assets/images/proactive-scenario/proactive-message-sample.png)\n\n1. Перейдите **к разделу \"Тестирование и распространение** > **установки\"** , чтобы снова установить то же приложение.\n\n    ![Установка приложения](~/assets/images/proactive-scenario/install-app.png)   \n\n1. Выберите URL-адрес `http://localhost:3978/api/notify` , чтобы получить упреждающее привет-сообщение в чате.\n\n    ![Упреждающее сообщение отправлено](~/assets/images/proactive-scenario/result.png)\n\n1. Перейдите в Teams. При успешной установке бот получает упреждающее сообщение hello.          \n\n    ![Упреждающее привет в чате](~/assets/images/proactive-scenario/proactive-helo.png)    \n"
- title: Добавление адаптивной карточки в упреждающее сообщение
  durationInMinutes: 10
  content: "1. В Visual Studio остановите процесс отладки.\n\n    ![Остановка отладки](~/assets/images/proactive-scenario/stop-debug.png)\n\n1. Щелкните правой **кнопкой мыши \"Зависимости**\" и выберите **\"Управление пакетами NuGet\"**.\n\n    ![Добавление пакета адаптивной карточки1](~/assets/images/proactive-scenario/add-adaptive-card-package1.png)\n\n1. В **NuGet ProactiveBot выберите** \" **Обзор** \" и найдите **adaptiveCards**. \n1. Нажмите кнопку **Установить**. \n\n    ![Добавление пакета адаптивной карточки2](~/assets/images/proactive-scenario/add-adaptive-card-package2.png)\n\n1. Откройте файл **NotifyController.cs** `BotCallback` и замените существующий код следующим кодом для отправки сообщения адаптивной карточки:     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```\n\n1. Наведите указатель мыши на волнистую красную линию и выберите команду **AdaptiveCards** для устранения ошибок. \n\n    ![Устранение ошибки](~/assets/images/proactive-scenario/resolve-error.png)  \n\n1. Нажмите **клавишу F5** , чтобы выполнить код. \n1. Перейдите в Teams и удалите приложение. \n    \n    ![Удаление приложения](~/assets/images/proactive-scenario/uninstall-app.png) \n\n1. Переустановите то же приложение, чтобы получить `conversationUpdate` событие.   \n\n1. Выберите URL-адрес [api/notify] `(http://localhost:3978/api/notify)` , чтобы получить упреждающее привет-сообщение в адаптивной карточке.     \n"
- title: Полный запрос
  durationInMinutes: 3
  content: >
    У вас возникла такая проблема? Так отображается упреждающее сообщение привета в адаптивной карточке:


    ![упреждающее привет в адаптивной карточке](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png)
- content: >-
    Вы завершили сценарий.

    * Вы можете отправлять уведомления на ежедневной основе или периодически запрашивать отзывы у пользователя.

    * Обработайте ограничения регулирования, чтобы избежать нескольких уведомлений.
