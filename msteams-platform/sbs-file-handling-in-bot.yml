### YamlMime:Tutorial
title: Teams бота загрузки файлов
metadata:
  title: Teams файл Upload Bot
  description: В этом руководстве вы узнаете, как загружать файлы Teams с бота и как получать файл, отправленный боту в качестве вложения.
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: Дополнительные данные о отправке и приеме файлов через бот
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 9906e3e445e73f1e53ebe713e46cffcf342965a2
  ms.sourcegitcommit: bfa9d24f736fb8915a9e3ef09c47dbe29a950cb5
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 02/14/2022
  ms.locfileid: "62801530"
items:
- durationInMinutes: 1
  content: "Бот создается с помощью Bot Framework. В нем показано, как загружать файлы Teams с бота и как получать файл, отправленный боту в качестве вложения. В нем также показано, как получать изображения, отправленные в сообщении.\n \nЭто пошаговая руководство помогает загружать файлы из бота в Microsoft Teams. Вы увидите следующий вывод:\n\n:::image type=\"content\" source=\"assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"выход sbs\" lightbox=\"assets/images/teams-file-upload-bot/output-sbs.png\":::\n"
- title: Предварительные требования
  durationInMinutes: 1
  content: >
    Чтобы настроить среду разработки, установите следующие средства:


    * Microsoft Teams и Teams учетной записи.

    * [.NET Core SDK версии 3.1](https://dotnet.microsoft.com/download).

    * [ngrok](https://ngrok.com/) или эквивалентное решение для туннелей.

    * Visual Studio 2019 или более поздней версии.
- title: Создание регистрации бота на портале Azure
  durationInMinutes: 5
  content: "Чтобы проверить подлинность бота, можно настроить бот в службе Azure Bot. Зарегистрируйте бота в службе Azure Bot Service при разработке и его хозяйской службе в Azure. Выполните следующие действия:\n\n1. Настройте и запустите Teams бот-приложение.\n1. Создание ресурса Azure Bot.\n1. Создание секрета клиента.\n1. Добавление Microsoft Teams канала.\n1. Добавление конечной точки обмена сообщениями.\n\n**Настройка и запуск приложения Teams-бота:**\n\n1. Откройте командную подсказку и клонировать репозиторий в https://github.com/Microsoft/botbuilder-samples.git. Обратите внимание на путь клонирования репозитория.\n\n1. В Visual Studio:\n\n    * Откройте Visual Studio.\n    * Выберите **FileOpen** >  >  **Project/Solution**.\n    * Папка `botbuilder-samples\\samples\\csharp_dotnetcore\\56.teams-file-upload` доступа.\n    * Откройте файл `Teamsfileupload.csproj`.\n\n1. Откройте терминал ngrok и запустите туннель ngrok с этой командой `ngrok http -host-header=rewrite 3978`.\n\n**Создание ресурса Azure Bot:**\n\n1. Доступ к [порталу Azure](https://portal.azure.com/).\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **бот Azure и** выберите ключ Enter.\n1. Выберите **Azure Bot**.\n\n     ![Создание карты-бота Azure](~/assets/images/teams-file-upload-bot/azure-new.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя ручки бота в **ручке Bot**.\n1. Из списка **выпаданий** подписки выберите подписку.\n1. Из списка **выпаданий** группы Ресурсов выберите группу ресурсов.\n    \n    Чтобы создать новый ресурс, выберите **Создание** нового, введите имя ресурса, выберите **ОК и выберите** необходимое расположение из списка  выпаданий расположения группы новых ресурсов.\n\n    > [!NOTE]\n    > В разделе Microsoft App ID уже выбран **новый ID** приложения Майкрософт. Вы можете выбрать **использование существующей регистрации приложений**, ввести **существующий код приложения** и ввести **пароль существующего приложения**.\n\n1. Выберите **Проверить и создать**.\n\n     ![Обзор и создание](~/assets/images/teams-file-upload-bot/reg-azure-1.png)\n\n1. Если проверка пройдет, выберите **Создать**. Подготовка службы бота занимает несколько минут.\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы перечислены в группе ресурсов.\n\n   Теперь создан бот Azure.\n\n     ![Созданный ресурс бота Azure](~/assets/images/teams-file-upload-bot/resource-group.png)\n\n**Создание секрета клиента:**\n\n1. В **Параметры** выберите **Конфигурация**. Сохраните **для будущей ссылки ID** приложения Майкрософт (клиентский ID).\n1. Рядом с **microsoft App ID** выберите **Управление**.\n\n     ![Microsoft App ID](~/assets/images/teams-file-upload-bot/manage-sec.png)\n\n1. В разделе **Секреты клиента** выберите **новый секрет клиента**. **Появится окно \"Добавление секрета клиента**\".  \n\n1. **Введите Описание** и выберите **Добавить**.\n\n     ![Секрет клиента](~/assets/images/teams-file-upload-bot/add-client-secret.png)\n\n1. В **столбце Значение** выберите **Копию для буфера обмена** данными и сохраните значение секретного ИД клиента для будущей ссылки.\n\n     ![Значение секрета клиента](~/assets/images/teams-file-upload-bot/copy-value.png)\n   \n**Чтобы добавить Microsoft Teams канал:**\n\n1. Перейдите к **дому**.\n\n     ![Домашняя](~/assets/images/teams-file-upload-bot/home-png.png)\n\n1. Откройте бот из раздела **Последние ресурсы** .\n1. Выберите **каналы в** левой области и выберите **Microsoft Teams** \n\n      ![Открытие Teams каналов](~/assets/images/teams-file-upload-bot/chanels-teams.png)  \n\n      ![Выберите Teams](~/assets/images/teams-file-upload-bot/configure-microsoft-teams.png)  \n\n1. Нажмите **Сохранить**.\n1. Выберите почтовый ящик, чтобы принять условия службы и выбрать **Согласование**.</br>\n\n      ![Условия обслуживания](~/assets/images/teams-file-upload-bot/terms-service.png)\n\n**Добавление конечной точки обмена сообщениями:**\n\n1. В **Параметры** для созданного вами бота Azure выберите **конфигурацию**.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io).\n\n    ![URL-адрес https ngrok](~/assets/images/teams-file-upload-bot/ngrok-url.png)\n\n1. В **конечной точке** обмена сообщениями используйте URL-адрес HTTPS, доступный в ngrok, а в конце **URL-адреса добавьте /api/messages**.\n\n     ![Конечный пункт обмена сообщениями](~/assets/images/teams-file-upload-bot/messaging-endpoint.png)\n\n1. Нажмите **Применить**.\n\n   Вы успешно создали бот в службе Azure Bot Service, и теперь необходимо настроить подключение к службе ботов.\n"
- title: Настройка подключения к службе ботов
  durationInMinutes: 5
  content: "Чтобы служба ботов позволила пользователю войти и получить доступ к боту, настройте SSO для вашего бота.\nЧтобы настроить подключение к службе ботов, выполните следующее:\n\n1. Добавьте URI перенаправления в ресурс бота Azure.\n1. Обналичить конечную точку API.\n1. Авторизировать клиентские приложения.\n1. Добавьте все необходимые разрешения API для вызовов вниз по течению.\n1. Включить неявный грант.\n1. Манифест обновления.\n1. Настройка подключения к службе bot.\n\n**Добавление URI перенаправления в ресурс бота Azure:**\n\n1. Выберите **параметр Manage** , примыкает **к Microsoft App ID**.\n\n     ![Управление ботом](~/assets/images/teams-file-upload-bot/manage-sec.png)\n\n1. Выберите **проверку подлинности** с левой области ресурса бота.\n1. В **конфигурациях платформы** выберите **Добавить платформу**.\n1. Выберите платформу **Веб**.\n1. **Введите URL-адреса перенаправления** как `https://token.botframework.com/.auth/web/redirect` и выберите **Настройка**.\n\n    ![Настройка URL-адреса веб-перенаправления](~/assets/images/teams-file-upload-bot/authentication.png)\n\n    URI перенаправления добавляется в ресурс бота Azure.\n\n    ![Отображение URL-адреса веб-перенаправления](~/assets/images/bots/redirectURIadded.png)\n    \n**Чтобы выставить конечную точку API:**\n\n1. Выберите **Expose API** с левой области.\n1. Выберите **set** for the Application ID URI.\n1. Вместо **URL-адреса** **ngrok** используйте URL-адрес ID `api://` `https://` приложения, показанный и приложение, и добавьте его в начале URL-адреса App ID.\n\n    ![URI кода надстройки](~/assets/images/teams-file-upload-bot/expose-api.png)\n\n1. Нажмите **Сохранить**.\n1. Нажмите **Добавить область**.\n1. В **имя Scope введите**`access_as_user` .\n1. В **Кто можете согласиться?**, переключиться на **администраторов и пользователей**.\n1. Введите следующие значения в полях:\n\n    | Поле | Значение |\n    | ----- | ----- |\n    | Имя отображения согласия администратора | Teams может получить доступ к профилю пользователя |\n    | Описание согласия администратора | Позволяет Teams вызов веб-API приложения в качестве текущего пользователя. |\n    | Имя отображения согласия пользователя | Teams получить доступ к профиле пользователя и сделать запросы от вашего имени |\n    | Описание согласия пользователя | Включить Teams для вызова API этого приложения с тех же разрешений, которые у вас есть. |\n\n1. Установите **состояние** **включено**, если еще не установлено.\n\n    ![Добавление области](~/assets/images/teams-file-upload-bot/expo.png)\n\n1. Нажмите **Добавить область**. Имя области автоматически совпадает с URI ID приложения и добавляется `/access_as_user` до конца.\n\n**Для авторизации клиентских приложений:**\n\nНапример, добавьте следующие ID в качестве авторизованного клиентского **приложения, выберите** поле для разрешенных областей и выберите **приложение добавить**.      \n* `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams мобильное или настольное приложение)            \n* `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams веб-приложение)</br>\n\n    ![Добавление клиентского приложения](~/assets/images/teams-file-upload-bot/client-application.png)      \n\n**Чтобы добавить все необходимые разрешения API для вызовов ниже по течению:**\n\n1. Выберите **разрешения API с** левой области.\n1. Выберите **Добавить разрешение**. **Отображается окно разрешений API** запроса.\n1. Выберите **API Майкрософт**. Затем выберите **microsoft Graph** и выберите **делегирование разрешений**.\n1. Добавьте все разрешения **, делегированные** пользователем, необходимые приложению для API вниз по течению, например User.Read.</br>\n\n     ![Разрешения API](~/assets/images/teams-file-upload-bot/delegated-permission-1.png)\n\n**Чтобы включить неявный грант:**\n\n1. Выберите **проверку подлинности** с левой области.\n1. Выберите **контрольные ящики** маркеров доступа и маркеров **ID** .\n\n     ![Маркеры проверки подлинности](~/assets/images/teams-file-upload-bot/access-tokens.png)\n\n1. Нажмите **Сохранить**.\n\n**Обновление манифеста**\n\n1. Выберите **Манифест** с левой области.\n1. Установите элемент конфигурации **на \"accessTokenAcceptedVersion\": 2**. Если не установлено, измените его значение на \"2\" и выберите **Сохранить**.\n    \n    > [!NOTE]\n    > Если вы уже тестируете бот в Teams, выпишитесь из этого приложения и выпишитесь из Teams. Чтобы увидеть это изменение, впишитесь снова.\n\n    ![Манифест обновления](~/assets/images/teams-file-upload-bot/access-version-manifest-2.png)\n\n**Настройка подключения к службе ботов:**\n\n1. Откройте **страницу Главная** бота и выберите **конфигурацию** **Параметры** с левой области.\n1. Выберите **Добавить подключение OAuth Параметры**.\n1. В **новом параметре подключения** укаймы ниже:\n\n    | Поле | Значение или описание |\n    | ----- | ----- |\n    | Имя | Укайте имя для нового параметра подключения. Имя можно использовать в настройках кода службы бота. |\n    | Service Provider | Выберите **Azure Active Directory V2**. |\n    | ID клиента | Предоставление **ID приложения Майкрософт**. |\n    | Секрет клиента | Предоставление **значения** секретного ID клиента. |\n    | URL Exchange маркера | Используйте **URL-адрес ID приложения,** полученный ранее при разоблачении конечной точки API. |\n    | Идентификатор клиента | Предоставление **ID клиента**. |\n    | Scopes | **Предокажите User.Read** и добавьте все необходимые **области,** указав разрешения на API ниже по течению. |\n\n    :::image type=\"content\" source=\"./assets/images/teams-file-upload-bot/oauth-settings.png\" alt-text=\"Подключение к службе bot\":::\n\n1. Нажмите **Сохранить**.\n"
- title: Тестирование приложения
  durationInMinutes: 2
  content: >
    Наиболее полный способ тестирования приложения — создание пакета приложений и его загрузка в Teams. Этот метод — единственный способ проверить всю функциональность, доступную вашему приложению, во всех сферах. Вы можете настроить и запустить приложение Teams, загрузив `manifest.zip` файл.


    Чтобы выполнить Teams файл бота, загрузите `manifest.zip` файл в Teams. Выполните следующие действия:


    1. В **обозревателе файлов** перейдите к **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **56.teams-file-uploadappsettings** > .


    1. Откройте appsettings в Visual Studio Code и обновить `appsettings.json` файл конфигурации для бота, чтобы использовать , `MicrosoftAppPassword(Value of the client secret ID)`и `MicrosoftAppType``MicrosoftAppTenantID`.`MicrosoftAppId (Bot Id)`

       ![Параметры приложения](~/assets/images/teams-file-upload-bot/app-settings.png)

    1. Откройте файл `manifest.json` в Visual Studio Code.


    1. В файле `manifest.json` найдите и `YOUR-MICROSOFT-APP-ID` замените его с помощью app Id. Ваш ID приложения создается при регистрации бота. Сохраните файл.

       ![манифест json](~/assets/images/teams-file-upload-bot/manifest-json.png)

    1. Zip up the contents of the `TeamsAppManifest' folder to create a `manifest.zip` archive. Open the manifest file in Visual Studio Code and replace with your MicrosoftAppID (depending on the scenario the Microsoft App Id may occur multiple times in the `manifest.json' file.)


    1. Upload для Teams `manifest.zip` (в представлении Приложения нажмите кнопку "Upload настраиваемом приложении")


    1. Чтобы загрузить`manifest.zip`, выберите **StoreManage** >  >  **приложения Upload настраиваемом приложении и** откройте `manifest.zip`.


    1. Выберите **Добавить** , чтобы добавить бот в чат.


    1. Перед отправкой сообщения боту перейдите в **File Explorer**, перейдите к **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **56.teams-file-upload**


    1. Откройте `TeamsFileUpload.csproj` файл в Visual Studio Code и убедитесь, что вы находитесь в 'Teams файл'

        ![Визуальный код](~/assets/images/teams-file-upload-bot/visual-studio-teams-file-upload-bot.png)

    1. Запустите бот из Visual Studio или `F5` с помощью `dotnet run` в соответствующей папке


    1. Отправьте сообщение боту `Hi` и подождите несколько секунд, чтобы он ответил карточкой.
- title: Взаимодействие с ботом в Teams
  durationInMinutes: 2
  content: "> [!NOTE]\n>  После установки бота в личной области пользователь вступает в беседу с ботом в одном чате.\n\nВ этом руководстве показано, как взаимодействовать с ботом различными способами. Ниже показано, какие действия бота демонстрируются:\n\n1. Отправьте сообщение боту. Он отвечает карточкой за разрешение на отправку файла.\n   \n     ![prompt1](~/assets/images/teams-file-upload-bot/sbs-1.png)\n\n1. Выберите **Разрешить**. Файл `teams-logo.png` загружается в каталог файлов, который готов к загрузке.\n\n     ![подсказка сообщения](~/assets/images/teams-file-upload-bot/sbs-2.png)\n\n1. Отправьте файл боту в качестве вложения в Teams. Он отвечает сообщением `Received and Saved`. Вложение можно просмотреть со вкладки **Files** .\n\n     ![запрос файла](~/assets/images/teams-file-upload-bot/sbs-3.png)\n\n1. Отправка изображения в виде вложения. Он отвечает сообщением `Received and saved`. Изображение можно просмотреть в окне чата и на **вкладке Files** .\n   \n     ![Подсказка изображения](~/assets/images/teams-file-upload-bot/sbs-4.png)\n"
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?


    :::image type="content" source="assets/images/teams-file-upload-bot/output-sbs.png" alt-text="Ожидаемый выход из руководства, который подтверждает, что вы можете загружать файлы из бота в Teams." lightbox="assets/images/teams-file-upload-bot/output-sbs.png":::
- content: Вы завершили руководство. Теперь вы можете загружать файлы из бота в Microsoft Teams.
