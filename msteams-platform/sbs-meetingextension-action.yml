### YamlMime:Tutorial
title: Создание расширения обмена сообщениями на основе действий
metadata:
  title: Создание расширения обмена сообщениями на основе действий
  description: В этом руководстве вы узнаете, как настроить расширение обмена сообщениями действий для Teams.
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: Дополнительные возможности для обеспечения команд действий по расширению обмена сообщениями
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c1e5dfbcd307787d0b92a0b849e95a4968703cb1
  ms.sourcegitcommit: 2fdca6fb0ade3f6b460eb9a4dfea0a8e2ab8d3b9
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/08/2022
  ms.locfileid: "63360943"
items:
- durationInMinutes: 1
  content: "Расширения обмена сообщениями позволяют пользователям взаимодействовать с веб-службами в Microsoft Teams клиенте. Они помогают инициировать действия во внешней системе из области композитного сообщения, командного окна или непосредственно из сообщения.\n\n**Основные функции расширения обмена сообщениями на основе действий**\n\n* Представляет пользователю модальные всплывающие данные для сбора или отображения сведений.\n* Вызывает команды действий из области составить сообщение, поле команды или из сообщения. \n\nЭто пошаговая руководство по созданию расширения Teams на основе действий для инициации действий из области создания сообщений и сообщений. Вы увидите следующий вывод:\n   \n  ![выход](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)\n"
- title: Предварительные требования
  durationInMinutes: 1
  content: "Убедитесь, что вы установите следующие средства и настроите среду разработки:  \n\n* [Microsoft Teams с](https://teams.microsoft.com/) допустимой учетной записью\n* [.NET Core SDK](https://dotnet.microsoft.com/download) версии 3.1\n* [Последняя версия Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) последняя версия (только для тестирования devbox) или любое эквивалентное решение для туннелей\n\n  > [!NOTE]\n  > После скачивания ngrok зарегистриройте и установите [authtoken](https://ngrok.com/download).\n"
- title: Настройка локальной среды
  durationInMinutes: 1
  content: "Репозиторий `BotBuilder-Samples` клонов в локальный GitHub:  \n\n 1. Откройте [botBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n 1. Выберите **код**.\n 1. В меню dropdown выберите **Open с GitHub Desktop**.\n\n    ![Репозиторий клонов](~/assets/images/sbs-messagingextension-action/botbuilder-sample.png)\n\n 1. Выберите **клон**. \n"
- title: Создание и регистрация бота на портале Azure AD
  durationInMinutes: 5
  content: "Чтобы создать и зарегистрировать бота в Microsoft Azure Active Directory (Azure AD), создайте туннель с помощью ngrok и добавьте конечную точку обмена сообщениями выполните следующие действия:\n\n* Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n* Создание секрета клиента, чтобы включить проверку подлинности SSO бота.\n* Добавьте Teams канал, чтобы развернуть бот в Teams канал.\n* Для создания туннеля к конечным точкам веб-сервера используйте ngrok.\n* Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\n**Создание ресурса Azure Bot**\n\n1. Перейдите [на Microsoft Azure портал.](https://portal.azure.com/)\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **Azure Bot**.\n1. Выберите **Ввод**.\n1. Выберите **Azure Bot**.\n\n     ![Создание карты-бота Azure](~/assets/images/sbs-messagingextension-action/azure-bot.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя ручки бота в **ручке Bot**.\n1. В **списке выпаданий** подписки выберите **msteams.nonprod.pub.msft.aplt**.\n1. Из списка **выпаданий** группы Ресурсов выберите существующую группу ресурсов. \n\n    ![Выберите ресурс Azure bot](~/assets/images/sbs-messagingextension-action/create-azurebot.png) \n\n   Можно также создать новую группу ресурсов (выберите **Создание** новых > введите имя ресурса > выберите **ОК**).\n\n1. В разделе **Microsoft App ID** по умолчанию **выбирается новый ID** приложения Майкрософт. \n \n   Вы можете выбрать использование **существующей** регистрации приложений и **ввести** существующий код приложения и существующий пароль **приложения, или** создать **новый код Приложения Майкрософт**.\n\n   > [!NOTE]\n   > Вы не можете создать несколько ботов с одним и тем же **microsoft App ID**.\n\n1. Выберите **multiTenant под** **типом бота**.\n\n    ![Тип](~/assets/images/sbs-messagingextension-action/bot-type.png)\n\n1. Выберите **Проверить и создать**.\n\n    ![Создание ID приложения Майкрософт](~/assets/images/sbs-messagingextension-action/review-create.png)\n\n1. Если проверка пройдет, выберите **Создать**. \n\n    Подготовка службы бота занимает несколько минут. \n\n1. Выберите пункт **Перейти к ресурсу**. \n\n    ![Развертывание приложения](~/assets/images/sbs-messagingextension-action/resource-file.png)\n\n    Создан бот Azure.\n\n    ![Созданный ресурс бота Azure](assets/images/sbs-messagingextension-action/created-azure-bot.png)\n\n**Создание секрета клиента**\n\n  Выполните следующие действия, если вы создали новый **microsoft App ID**:\n\n1. В левой панели выберите **Конфигурация**. \n\n   > [!TIP]\n   > Сохраните **microsoft App ID** или **client ID** для будущих ссылок.\n\n1. Рядом с **microsoft App ID** выберите **Управление**.\n\n    ![Microsoft App ID](~/assets/images/sbs-messagingextension-action/manage.png)\n\n1. В разделе **Секреты клиента** выберите **новый секрет клиента**. \n\n    ![Секрет нового клиента](~/assets/images/sbs-messagingextension-action/adding-client-secret.png)\n\n   **Появится окно \"Добавление секрета клиента**\".  \n\n1. **Введите Описание**.\n\n1. Нажмите **Добавить**.\n\n    ![Добавление секрета клиента в приложение](~/assets/images/sbs-messagingextension-action/add-a-clientsecret.png)\n\n1. В **столбце Значение** выберите **Копию в буфер обмена.**\n\n     ![Значение секрета клиента](~/assets/images/sbs-messagingextension-action/client-secret.png)\n   \n   > [!TIP]\n   > Сохраните **значение \"Секреты клиента** \" или пароль приложения для будущей ссылки.\n\n**Добавление канала Teams**\n\n1. Нажмите **Главная**.\n\n    ![Домашняя страница](~/assets/images/sbs-messagingextension-action/select-home.png)\n\n1. Выберите бот из **последних ресурсов**.\n\n1. Выберите **Каналы в** левой области. \n\n1. Выберите **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Выберите почтовый ящик, чтобы принять **Условия службы**.\n\n1. Выберите **Согласование**.\n\n      ![Условия обслуживания](~/assets/images/sbs-messagingextension-action/agree.png)\n\n1. Выберите **Сохранить**.\n\n      ![Выберите Teams](~/assets/images/sbs-messagingextension-action/configure-msteams.png)   \n\n**Создание туннеля для локального веб-сервера**\n\nИспользуйте ngrok для создания туннеля для общедоступных конечных точек HTTPS локального запуска веб-сервера. Запустите следующую команду в ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> Если **вы ERR_NGROK_4018,** выполните действия, предусмотренные в командной подсказке для регистрации и проверки подлинности ngrok. Затем запустите `ngrok http -host-header=localhost 3978` команду.\n\n**Добавление конечной точки обмена сообщениями**\n\n1. Из ngrok скопируйте URL-адрес HTTPS (https to io).\n\n    ![URL-адрес https ngrok](~/assets/images/sbs-messagingextension-action/ngrok.png)\n\n    > [!NOTE]\n    > URL-адрес HTTPS в ngrok — это ваше полное доменное имя.\n    > Это `WebAppDomain` полностью квалифицированное доменное имя, которое не входит `https://` в него.\n\n1. В **Параметры** для созданного вами бота Azure выберите **Конфигурация**.\n\n1. В **конечной точке** обмена сообщениями используйте URL-адрес HTTPS, доступный в ngrok, а в конце **URL-адреса добавьте /api/messages**.\n\n    ![URI приложения](~/assets/images/sbs-messagingextension-action/appuri.png)\n\n1. Нажмите **Применить**.\n\n    Вы успешно создали бот в службе Azure Bot.\n"
- title: Обновление регистрации приложения Azure AD
  durationInMinutes: 1
  content: "1. Перейдите на [портал Azure](https://portal.azure.com/).\n\n1. Выберите **Azure Active Directory**.\n\n1. В левой панели навигации выберите **регистрация приложений**.\n\n1. Выберите бот.\n\n   ![Регистрация приложения](~/assets/images/sbs-messagingextension-action/app.-registerations.png)\n\n1. В разделе **Управление** выберите **Предоставление API**.\n\n1. Выберите **набор**.\n\n   ![Предоставление API](~/assets/images/sbs-messagingextension-action/set-exposeanapi.png)\n\n1. Установите **URI ID приложения** в виде `api://{AppID}`.\n\n   ![Настройка ссылки](~/assets/images/sbs-messagingextension-action/set-link.png)\n\n1. Вставьте значение `WebAppDomain` между и `/{AppID}``api://` .</br>\n    `api://2bb1****.ngrok.io/{AppID}`</br>\n    \n   На следующем изображении показано имя домена:\n    \n    ![Expose](~/assets/images/sbs-messagingextension-action/exposeanapi.png)\n\n    > [!NOTE]\n    > Если вы используете службу тоннелей, например ngrok, убедитесь, что вы обновляете значение всякий раз, когда изменяется поддомен ngrok.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, где `f631****.ngrok.io` новое имя поддомена ngrok.\n\n1. Нажмите **Добавить область**. \n\n   ![Выбор области](~/assets/images/sbs-messagingextension-action/addascope.png)\n\n1. На панели, которая отображается, введите `access_as_user` имя **Область**.\n\n1. Установите **Кто может согласиться?** .`Admins and users`\n\n1. Чтобы настроить запросы на `access_as_user` согласие администратора и пользователя с соответствующими значениями для области, в полях необходимо предоставить следующие сведения:</br>\n\n     * Введите `Teams can access the user’s profile` **имя отображения согласия администратора**.\n\n     * Введите `Allows Teams to call the app’s web APIs as the current user` в **качестве описания согласия администратора**.\n\n     * Введите `Teams can access the user profile and make requests on the user’s behalf` имя **отображения согласия пользователя**.\n\n     * Введите `Enable Teams to call this app’s APIs with the same rights as the user` в **качестве описания согласия пользователя**.\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n1. Выберите **Добавить область** для сохранения.\n\n    ![Добавление области](~/assets/images/sbs-messagingextension-action/addascopeuser.png)\n\n    > [!NOTE]\n    > Имя **Scope должно** совпадать с URI `/access_as_user` **ID** приложения с приложением в конце.</br>\n       `api://2bb1****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/sbs-messagingextension-action/scopes.png) \n\n1. В разделе **Авторизованные клиентские приложения** укажите приложения, которые необходимо авторизовать для веб-приложения вашего приложения. \n\n1. Выберите **Добавить клиентское приложение**. \n\n    ![Выбор клиентского приложения](~/assets/images/sbs-messagingextension-action/clientapps.png) \n\n1. **Введите client ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` для Teams мобильного или настольного приложения. \n\n    ![Добавление клиентского приложения 1](~/assets/images/sbs-messagingextension-action/addclientapplication1.png) \n\n   Вы можете **ввести client ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` для Teams веб-приложения.\n\n    ![Добавление клиентского приложения 2](~/assets/images/sbs-messagingextension-action/addclientapplication2.png) \n\n1. Выберите **разрешенные области**.\n\n    ![Добавление клиентского приложения 2](~/assets/images/sbs-messagingextension-action/authorizedscope.png) \n\n   На следующем изображении отображаются клиентские ИД:\n\n    ![Клиентские приложения](~/assets/images/sbs-messagingextension-action/clientapp.png) \n\n1. На левой панели выберите **разрешения API**. \n\n   > [!NOTE]\n   > Пользователи должны согласиться на эти разрешения только в том случае, если приложение Azure AD зарегистрировано в другом клиенте.\n\n1. Выберите **Добавить разрешение**.\n\n    ![Добавление разрешений](~/assets/images/sbs-messagingextension-action/addpermission.png)\n\n1. Выберите **Microsoft Graph**.\n\n1. Выберите **Делегированные разрешения**.\n\n1. Добавьте указанные ниже разрешения.</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n     * **User.Read**\n\n1. Выберите **Добавить разрешения**.\n\n     ![Другие разрешения](~/assets/images/sbs-messagingextension-action/other-permissions.png)\n\n1. На левой панели выберите **проверку подлинности,** чтобы установить URI перенаправления. \n\n   > [!NOTE]\n   > Если приложению не предоставлено согласие ИТ-администратора, пользователи должны предоставить согласие при первом использовании приложения.\n           \n     1. Выберите **Добавить платформу**.\n     1. Выберите платформу **Веб**.\n\n        ![Веб](~/assets/images/sbs-messagingextension-action/web.png)\n\n     1. Введите URI перенаправления для приложения, примыкая `auth-end` к полностью квалифицированному доменному имени:</br> \n       `https://2bb1****.ngrok.io/auth-end`. </br>\n\n     1. Включить **неявные грантовые и гибридные** потоки, выбрав следующие почтовые ящики:\n         * **Маркеры ID**\n         * **Маркеры доступа**\n\n     1. Нажмите **Настроить**.\n\n        ![Auth-end](~/assets/images/sbs-messagingextension-action/authend.png)\n"
- title: Настройка параметров приложения и файлов манифеста
  durationInMinutes: 1
  content: "1. Перейдите **к appsettings.json в** клонированном репозитории.\n\n    ![Расположение параметров приложения](~/assets/images/sbs-messagingextension-action/appsettingslocation.png)\n\n1. Откройте **appsettings.json** в последней версии Visual Studio и обновив следующую информацию:  \n\n     * Настройка `\"MicrosoftAppType\"` **multiTenant**.\n     * Установите `\"MicrosoftAppId\"` для вашего бота **microsoft App ID**.\n     * Задайте `\"MicrosoftAppPassword\"` значение вашего **бота** для ИД **секрета клиента** .\n     * Оставьте `\"MicrosoftAppTenantId\"` пустой для бота MultiTenant.\n     * Установите `\"BaseUrl\"` полное доменное имя.\n\n    ![Параметры приложения](~/assets/images/sbs-messagingextension-action/json-file.png)\n\n1. Перейдите **к manifest.json в** клонированном репозитории.\n\n    ![Расположение файла Manifest](~/assets/images/sbs-messagingextension-action/manifestlocation.png)\n\n1. Откройте **manifest.json** в последней версии Visual Studio и внести следующие изменения:\n\n     * Замените `<<validDomains>>` полностью квалифицированным доменным именем.\n     * Замените все случаи с `<<Microsoft-App-ID>>` помощью microsoft **App ID вашего бота**.\n\n    ![Manifest image2](~/assets/images/sbs-messagingextension-action/botid1.png)\n"
- title: Создание и запуск службы
  durationInMinutes: 1
  content: "**Создание и запуск службы с использованием последней версии Visual Studio или командной строки**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Последняя версия Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Запуск последней версии Visual Studio.\n   1. Перейдите к **файлу FileOpen** >  >  **Project/Solution**.\n\n      ![Открытый файл](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n   1. Выберите **файл TeamsMessagingExtensionsAction.csproj** из **csharp_dotnet папки** .\n\n      ![Файл решения](~/assets/images/sbs-messagingextension-action/openproject.png)\n\n   1. Нажмите **кнопку F5** для запуска проекта.\n\n   1. Выберите **Да** , если появится следующий диалог:\n\n      ![Сертификат доверия](~/assets/images/sbs-messagingextension-action/certificate.png)\n\n      Откроется веб-сайт с сообщением о том, **что бот готов!**.\n\n      ![Готовое приложение](~/assets/images/sbs-messagingextension-action/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nПерейдите **к примерам > csharp_dotnetcore > 51.teams-messaging-extensions-action** в окне Командная подсказка и введите следующую команду:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: Добавление приложения расширения обмена сообщениями действий в Teams
  durationInMinutes: 1
  content: "1. В клонированном репозитории **перейдите csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**.\n\n1. Создайте .zip со следующими файлами, присутствующими в **папке Манифест** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip-файл](~/assets/images/sbs-messagingextension-action/zipfile.png) \n\n1. Перейдите **Microsoft Teams**.\n\n1. Выберите **Приложения**.\n\n1. Выберите **Управление приложениями**.\n\n1. Выберите **Upload настраиваемом приложении**.\n\n   ![Отправить](~/assets/images/sbs-messagingextension-action/uploadacustomapp1.png)\n\n1. Выберите **Открыть** , чтобы загрузить .zip файл, созданный в **папке Манифест** .\n\n   ![Выберите почтовый файл](~/assets/images/sbs-messagingextension-action/openzipfile.png)\n\n1. Нажмите **Добавить**.\n\n   ![Добавление приложения](~/assets/images/sbs-messagingextension-action/add.png)\n\n                \n"
- title: Взаимодействие с приложением в Teams
  durationInMinutes: 1
  content: "1. Выберите **команду Create Card** из списка командных окне составить.\n\n   ![карточка](~/assets/images/sbs-messagingextension-action/create-card.png)\n\n1. Введите сведения в всплывающее в моду.\n\n   ![сведения](~/assets/images/sbs-messagingextension-action/output-card.png)\n\n1. Выберите **Отправить**.\n\n   ![submit](~/assets/images/sbs-messagingextension-action/submit.png)\n\n1. Выберите (...) из меню переполнения.\n   \n1. Перейдите к **дополнительным действиям**.\n\n1. Выберите **сообщение Share**.\n\n   ![Карта Share](~/assets/images/sbs-messagingextension-action/sharemessage.png)\n\n1. Выберите почтовый ящик, если необходимо включить изображение и отправить.\n\n   ![выход](~/assets/images/sbs-messagingextension-action/sharemessageoutput.png)\n"
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?

       ![Выходные данные](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)
- content: Вы завершили учебный курс, чтобы начать работу с приложением **расширения обмена сообщениями** действий!
