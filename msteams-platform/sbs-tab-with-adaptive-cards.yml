### YamlMime:Tutorial
title: Создание вкладки с адаптивными картами
metadata:
  title: Создание вкладки с адаптивными картами
  description: В этом руководстве вы узнаете, как настроить адаптивные карты на вкладке для Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Дополнительные публикации о проверке подлинности вкладок
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: ce55f44b5adf485408a48af3a50d07b51d612cad
  ms.sourcegitcommit: 05cce11f412af64f85afc7ebbfa485c307f2d95e
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/18/2022
  ms.locfileid: "62064069"
items:
- durationInMinutes: 1
  content: >
    Адаптивные вкладки карты — это новый способ создания вкладок в Teams. Вместо встраив веб-контент в IFrame, вы можете отрисовки адаптивных карт на вкладку. В то время как передняя часть отрисовывана с помощью адаптивных карт, задний задаток будет работать с помощью бота. Бот отвечает за прием запросов и соответствующий ответ с помощью отрисовки адаптивной карты.


    Вы можете создавать вкладки с помощью соответствующих пользовательских интерфейсов (пользовательского интерфейса) строительных блоков на рабочем столе, в Интернете и на мобильных устройствах.


    В этой статье вы можете понять:


    * Изменения, необходимые для манифеста приложения.

    * Определяет, как вызывает запросы на действия и отправляет сведения на вкладке с помощью адаптивных карт.

    * Влияние на рабочий процесс модуля задач.


    Это пошаговое руководство по созданию вкладок с адаптивными картами на рабочем столе и мобильном телефоне. Вы увидите следующий вывод:


    ![Снимок экрана Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Предварительные условия
  durationInMinutes: 1
  content: >
    Убедитесь, что вы установите следующие средства и настроите среду разработки


    * Microsoft Teams с учетной записью (а не гостевой учетной записью).

    * [Visual Studio Code](https://code.visualstudio.com/)

    * [.NET Core SDK](https://dotnet.microsoft.com/download) версии 3.1

    * [ngrok](https://ngrok.com/) или [Tunnel Relay](https://github.com/OfficeDev/microsoft-teams-tunnelrelay)

    * [Microsoft 365 учетной](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) записи разработчика или доступа Teams учетной записи с соответствующими разрешениями на установку приложения.
- title: Создание реестра ботов на портале Azure
  durationInMinutes: 2
  content: "Для создания вкладок в командах для вкладок адаптивной карты потребуется служба ботов Azure. Зарегистрируйте бота в службе Azure Bot Service при разработке и его хозяйской службе в Azure. Выполните следующее:\n1. Для создания туннеля к конечным точкам веб-сервера используйте ngrok.\n1. Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n1. Создание секрета клиента, который позволяет SSO-проверку подлинности бота.\n1. Добавьте Microsoft Teams канал, чтобы развернуть бот в Teams канал.\n1. Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\nИспользуйте ngrok для создания туннеля для общедоступных конечных точек HTTPS локального запуска веб-сервера. Запустите следующую команду в ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Создание ресурса Azure Bot**\n\n1. Открыть [портал Azure.](https://portal.azure.com/)\n1. Выберите **Создать ресурс**.\n1. Поиск **бота Azure в** поле поиска.\n1. Выберите **Azure Bot**.\n\n    ![Azure Bot](~/assets/images/adaptive-cards/azure-bot.png)\n\n1. Нажмите **Создать**.\n1. Введите имя ручки бота **в поле обработки ботов.**\n1. Выберите **подписку** из списка выпаданий.\n1. Выберите **группу Ресурсов из** списка выпаданий.\n    \n    Чтобы создать новую группу ресурсов, выберите **Create new,** введите имя  ресурса, выберите **ОК** и выберите необходимое расположение из списка выпаданий расположения группы новых ресурсов.\n\n1. Выберите **тип приложения в качестве** multi **tenant** для Microsoft **App ID**.\n\n    ![Multi Tenant](~/assets/images/adaptive-cards/multi-tenant.png)\n\n    > [!NOTE]\n    > В **разделе Создание типа** microsoft App ID уже выбран новый microsoft App **ID** для создания нового бота. Вы также можете выбрать **Использование существующей регистрации приложений,** если вы уже зарегистрировали бота. Введите код Microsoft App в поле **Существующий** код приложения и введите значение в **поле существующий** пароль приложения.\n\n1. Выберите **Проверить и создать**.\n\n    ![Создание Azure Bot](~/assets/images/adaptive-cards/create-azure-bot.png)\n\n1. Если проверка проходит, выберите **Создать**.\n\n    Подготовка службы бота занимает несколько минут.\n\n    ![Проверка Azure Bot](~/assets/images/adaptive-cards/validation-pane.png)\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы перечислены в группе ресурсов.\n\n    ![Перейти к ресурсу](~/assets/images/adaptive-cards/go-to-resource-card.png)\n\n    Теперь создан бот Azure.\n\n    ![Созданный ресурс бота Azure](~/assets/images/adaptive-cards/azure-bot-ui.png)\n\n**Создание секрета клиента**\n\n1. В **Параметры** выберите **Конфигурация**. Сохраните **для будущей ссылки ID** приложения Майкрософт (клиентский ID).\n\n    ![Microsoft App ID](~/assets/images/adaptive-cards/config-microsoft-app-id.png)\n\n1. Рядом с **Microsoft App ID** выберите **Управление**.\n\n    ![Управление ботом](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. В разделе **Секреты клиента** выберите новый **секрет клиента.** **Добавлено окно секрета** клиента.  \n\n    ![Секрет \"Новый клиент\"](~/assets/images/adaptive-cards/new-client-secret.png)\n\n1. Введите **Описание** и выберите **Добавить**.\n\n    ![Секрет клиента](~/assets/images/adaptive-cards/client-secret.png)\n\n1. В **столбце Значение** выберите **Копию для буфера обмена** данными и сохраните секретный ИД клиента для будущей ссылки.\n\n    ![Секретное значение клиента](~/assets/images/adaptive-cards/client-secret-value.png)\n   \n**Добавление канала Microsoft Teams**\n\n1. Перейдите к **дому**.\n\n    ![Домашняя страница бота](~/assets/images/adaptive-cards/bot-home-page.png)\n\n1. Откройте бот, который указан в разделе **Последние ресурсы.**\n1. Выберите **каналы в** левой области и выберите **Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    ![Канал Teams](~/assets/images/adaptive-cards/channel-teams.png)\n\n1. Выберите почтовый ящик, чтобы принять условия службы и выбрать **Согласование.**</br>\n\n    ![Выбор условий службы](~/assets/images/adaptive-cards/select-terms-of-service.png)\n\n1. Нажмите **Сохранить**.\n\n    ![Выберите Teams](~/assets/images/adaptive-cards/select-teams.png)\n\n**Добавление конечной точки обмена сообщениями**\n\n1. Перейдите **на страницу Главная** и выберите **конфигурацию** **Параметры** с левой области.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io), как показано на следующем изображении:\n\n    ![URL-адрес https ngrok](~/assets/images/adaptive-cards/ngrok-url.png)\n\n1. В **конечной точке** обмена сообщениями добавьте URL-адрес HTTPS, созданный из ngrok, и в конце **URL-адреса добавьте /api/messages**.\n\n    ![Конечная точка обмена сообщениями](~/assets/images/adaptive-cards/ngrok-messaging-endpoint.png)\n\n1. Нажмите **Применить**.\n\n    Вы успешно создали бот в службе Azure Bot Service, и теперь необходимо настроить подключение к службе ботов.\n"
- title: Настройка подключения к службе ботов
  durationInMinutes: 5
  content: "Чтобы служба ботов позволила пользователю войти и получить доступ к боту, необходимо настроить SSO для бота. Для этого выполните следующее:\n\n1. Добавление URI перенаправления в ресурс бота Azure\n1. Обналичить конечную точку API\n1. Авторизировать клиентские приложения\n1. Добавление необходимых разрешений API для вызовов вниз по течению\n1. Включить неявный грант\n1. Манифест обновления\n1. Настройка подключения к службе bot\n\n**Добавление URI перенаправления в ресурс бота Azure**\n\n1. Выберите **Управление** рядом с **Microsoft App ID**.\n\n    ![Управление ботом](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. Выберите **проверку подлинности** с левой области ресурса бота.\n1. В **конфигурациях платформы** выберите **Добавить платформу.**\n1. Выберите платформу **Веб**.\n1. Введите **URL-адреса** перенаправления как **https://token.botframework.com/.auth/web/redirect** и выберите **Настройка.**\n\n    ![Настройка URL-адреса веб-перенаправления](~/assets/images/adaptive-cards/configure-web-redirect-url.png)\n\n    URI перенаправления добавляется в ресурс бота Azure.\n\n    ![Отображение URL-адреса веб-перенаправления](~/assets/images/adaptive-cards/web-redirect-url-display.png)\n\n**Для разоблачения конечной точки API**\n\n1. Выберите **Expose API** с левой области.\n1. Выберите **set** for the Application ID URI.\n1. Вместо **api://** в **url-адресе ngrok** **api:// https://** и добавьте в начале URL-адрес app ID. \n\n    ![URI кода надстройки](~/assets/images/adaptive-cards/app-id-url.png)\n\n1. Нажмите **Сохранить**.\n1. Нажмите **Добавить область**.\n1. В **поле имя**, **введите access_as_user**.\n1. В **Кто может согласиться?**, переключиться на **администраторов и пользователей**.\n1. Введите следующие значения в полях:\n\n    | Поле | Значение |\n    | ----- | ----- |\n    | Имя отображения согласия администратора | Teams может получить доступ к профилю пользователя |\n    | Описание согласия администратора | Позволяет Teams вызов веб-API приложения в качестве текущего пользователя. |\n    | Имя отображения согласия пользователя | Teams получить доступ к профиле пользователя и сделать запросы от вашего имени |\n    | Описание согласия пользователя | Включить Teams для вызова API этого приложения с тем же правам, что и у вас. |\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n    ![Добавление области](~/assets/images/adaptive-cards/add-scope.png)\n\n1. Нажмите **Добавить область**. Имя области автоматически совпадает с URI приложения, access_as_user **добавлен** до конца.\n\n**Авторизации клиентских приложений**\n\nДобавьте следующие ID в качестве **авторизованного** клиентского  приложения, выберите поле для разрешенных областей и выберите **приложение Add.**      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams мобильное или настольное приложение)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams веб-приложение)</br>\n\n    ![Добавление клиентского приложения](~/assets/images/adaptive-cards/add-client-aapplication.png)      \n\n**Добавление необходимых разрешений API для вызовов вниз по течению**\n\n1. Выберите **разрешения API с** левой области.\n1. Выберите **Добавить разрешение**. **Отображается окно разрешений API** запроса.\n1. Выберите **API Майкрософт**. Затем выберите **microsoft Graph** и выберите **делегированную разрешения**.\n1. Добавьте все **разрешения, делегированные** пользователем, необходимые приложению для API вниз по течению, например User.Read.</br>\n\n    ![Разрешения API](~/assets/images/adaptive-cards/add-permissions.png)\n\n**Включить неявный грант**\n\n1. Выберите **проверку подлинности** с левой области.\n1. Выберите **контрольные ящики** маркеров доступа и маркеров **ID.**</br>\n\n    ![Маркеры проверки подлинности](~/assets/images/adaptive-cards/authentication-tokens.png)\n\n1. Выберите **Сохранить,** чтобы сохранить изменения.\n\n**Обновление манифеста**\n\n1. Выберите **Манифест** с левой области.\n1. Убедитесь, что для элемента config **установлено \"accessTokenAcceptedVersion\": 2**. Если нет, измените его значение на **2 и** выберите **Сохранить**.\n    \n    > [!NOTE]\n    > Если вы уже тестируете бот в Teams, вы должны подписать это приложение и Teams. Затем снова впишитесь, чтобы увидеть это изменение.\n\n    ![Манифест обновления](~/assets/images/adaptive-cards/manifest.png)\n\n**Настройка подключения к службе bot**\n\n1. Перейдите **на страницу Главная** и выберите **конфигурацию** **Параметры** с левой области.\n1. Выберите **Добавить подключение OAuth Параметры**.\n1. В **новом параметре подключения** введите следующие сведения:\n\n    | Поле | Значение или описание |\n    | ----- | ----- |\n    | Имя | Введите имя для нового параметра подключения. Имя можно использовать в настройках кода службы бота. |\n    | Service Provider | Выберите **Azure Active Directory V2**. |\n    | ID клиента | Сохраненный ранее в **качестве microsoft App ID**. |\n    | Секрет клиента | Сохранено ранее **в качестве значения** секретного ID клиента. |\n    | URL Exchange маркера | Используйте **URL-адрес ID приложения,** полученный ранее при разоблачении конечной точки API. |\n    | Идентификатор клиента | Введите **общие**. |\n    | Scopes | Введите **User.Read** и  добавьте все области, необходимые при указании разрешений для API ниже по течению. |\n\n    :::image type=\"content\" source=\"./assets/images/adaptive-cards/oauth-connection-setting.png\" alt-text=\"Подключение к службе bot\":::\n\n1. Нажмите **Сохранить**.\n"
- title: Настройка бота
  durationInMinutes: 1
  content: >
    Настройте образец бота, чтобы понять, как проверить подлинность разговорного бота в Microsoft Teams.


    **Настройка и запуск образца бота**


    1. Перейдите к репо https://github.com/OfficeDev/Microsoft-Teams-Samples.git .

    1. Выберите **Код** и выберите отсев.

    1. Выберите **почтовый индекс загрузки**.

        ![Загрузка репо](~/assets/images/adaptive-cards/repo-download.png)

    1. Обратите внимание на путь скачаемого репозитория.

    1. В проводнике файлов выберите **Project.**

    1. Перейдите в Teams-Samples > примеры > вкладок-адаптивных карт > **csharp > TabWithAdpativeCardFlow.**

    1. Откройте **файл appsettings.json** в Visual Studio Code.

    1. Обновление **конфигурации appsettings.json** для бота, чтобы использовать `MicrosoftAppId` , и добавить `MicrosoftAppPassword` ngrok URI как `ApplicationBaseUrl` .

    1. Используйте имя подключения OAuth в качестве **имени подключения.**

        > [!NOTE]
        > Вы можете получить `MicrosoftAppId` страницу конфигурации бота. Это `MicrosoftAppPassword` ИД секрета клиента, сохраненный ранее.

        ![Appsettings Json](~/assets/images/adaptive-cards/appsettings-json.png)

    1. Нажмите **Сохранить**.
- title: Настройка и отправка приложения в Teams
  durationInMinutes: 2
  content: >
    Наиболее полный способ тестирования бота — это создание пакета приложений и его загрузка в Teams. Этот метод является единственным способом проверки всех функциональных возможностей, доступных вашему боту, во всех сферах. Вы можете настроить и запустить приложение Teams, загрузивmanifest.zip **файл.**


    **Чтобы запустить Teams, загрузив manifest.zip файл**


    1. В обозревателе файлов перейдите в **Microsoft-Teams-Samples > примеры > вкладок-адаптивных карт > csharp > TabWithAdpativeCardFlow > AppPackage,** чтобы открыть папку.

    1. Откройте **файл manifest.json** в Visual Studio Code.

    1. В **файле manifest.json** найдите **{contentBotId}** и добавьте свой microsoft App ID и сохраните.

        ![Config манифеста](~/assets/images/adaptive-cards/manifest-vsc.png)

    1. В проводнике файлов перейдите в **папку AppPackage.**

    1. Zip содержимое папки **AppPackage** для **создания** manifest.zip.

        > [!NOTE]
        > В **manifest.zip** не должны содержаться дополнительные папки. Он должен иметь **исходный** файл json, **значок** цвета и значок **контура** внутри папки zip.

    1. Перейдите в Teams.

    1. Чтобы загрузить **manifest.zip,** выберите Store > Управление приложениями > Upload **настраиваемом** приложении и **откройтеmanifest.zip**.

    1. Выберите **Добавить,** чтобы добавить вкладку в чат.

        ![Вкладка Teams приложении](~/assets/images/adaptive-cards/tab-in-teams.png)

        Вы можете взаимодействовать с этой вкладке, входя в нее.

    1. Отправьте сообщение на вкладку.

        ![Снимок экрана Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Взаимодействие со вкладками в Teams
  durationInMinutes: 1
  content: "Вкладки позволяют получать доступ к службам и контенту в выделенном пространстве в канале или в чате.\n\nВыполните действия по использованию вкладки:\n\n1. В левой области Teams выберите эллипсы ●●● и выберите приложение из списка.\n1. Вкладка, показывающая адаптивную карту с элементом управления действиями.\n\n    ![Вкладка, показывающая адаптивную карту с элементом управления действиями](~/assets/images/adaptive-cards/adaptive-cards-tab-action-controls.png)\n\n1. Выберите **вход и** выберите учетную запись для доступа к вкладке.\n\n    ![Войти](~/assets/images/adaptive-cards/sign-in-page.png)\n\n1. Выберите **модуль показать задачу** на домашней странице.\n\n    ![Показать модуль задач](~/assets/images/adaptive-cards/tab-home-page.png)\n\n1. Tab/fetch — это первый запрос на вызов, получаемый ботом при открывлении вкладки адаптивной карты. Когда ваш бот получает запрос, он отправляет вкладку продолжить ответ или ответ auth вкладки.\n\n    ![Пример модуля задач](~/assets/images/adaptive-cards/sample-task-module.png)\n\n1. **Отправка функции адаптивной карты** \n    **запрос задачи/отправки** запускается для бота с соответствующими данными через Действие. \n\n    ![Карта отправки задач](~/assets/images/adaptive-cards/task-submit.png)\n\n1. Вкладка сохраняет вход, если вы не выберите **Sign out.**\n\n    ![Sign out](~/assets/images/adaptive-cards/sign-out.png)\n\n1. Обновление для **повторного входить.**\n\n    ![Знак успеха](~/assets/images/adaptive-cards/success-sign-out.png)\n"
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?


    ![Снимок экрана Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- content: Вы завершили руководство по началу работы с адаптивными картами для Microsoft Teams с помощью Bot Framework.
