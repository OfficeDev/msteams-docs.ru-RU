### YamlMime:Tutorial
title: Вкладка "Сборка" с адаптивными карточками
metadata:
  title: Вкладка "Сборка" с адаптивными карточками
  description: В этом учебном модуле вы узнаете, как настроить адаптивные карточки на вкладке на настольном компьютере и мобильном устройстве для Microsoft Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: Дополнительные сведения о проверке подлинности на вкладке
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 9dbd3e7e733eabb9237ef942f9a784d442691db3
  ms.sourcegitcommit: 5070746e736edb4ae77cd3efcb2ab8bb2e5819a0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 06/16/2022
  ms.locfileid: "66123246"
items:
- durationInMinutes: 1
  content: >
    Вкладки адаптивной карточки — это новый способ создания вкладок в Teams. Вместо того чтобы встраиваться в IFrame веб-содержимое, вы можете отрисовка на вкладке адаптивные карточки. За интерфейсную часть отвечают адаптивные карточки, а серверная часть реализована ботом. Бот отвечает за принятие запросов и соответствующий ответ с помощью отрисованной адаптивной карточки.


    Вкладки можно создавать с помощью соответствующих стандартных блоков пользовательского интерфейса на настольном компьютере, в Интернете и на мобильных устройствах.


    Эта статья поможет вам понять:


    * Изменения, необходимые для внесения в манифест приложения.

    * Определяет, как действие вызова запрашивает и отправляет сведения на вкладке с адаптивными карточками.

    * Влияние на рабочий процесс модуля задач.


    Это пошаговое руководство поможет вам создавать вкладки с помощью адаптивных карточек на настольных компьютерах и мобильных устройствах. Вы увидите следующие выходные данные:


    ![Снимок экрана: Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Предварительные требования
  durationInMinutes: 1
  content: >
    Убедитесь, что вы установите следующие средства и настроите среду разработки.


    * Microsoft Teams с учетной записью (а не гостевой учетной записью).

    * [Visual Studio Code](https://code.visualstudio.com/)

    * [.NET core SDK](https://dotnet.microsoft.com/download) версии 3.1

    * [ngrok](https://ngrok.com/) или [Tunnel Relay](https://github.com/OfficeDev/microsoft-teams-tunnelrelay)

    * [Microsoft 365 учетной](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) записи разработчика или доступ к Teams учетной записи с соответствующими разрешениями на установку приложения.
- title: Создание регистрации бота на Microsoft Azure портале
  durationInMinutes: 2
  content: "Для создания вкладок в командах потребуется Служба Bot Azure. Зарегистрируйте бота в Azure Служба Bot при разработке и размещении в Azure. Выполните следующие действия:\n1. Используйте ngrok для создания туннеля к конечным точкам веб-сервера.\n1. Создайте ресурс Azure Bot для регистрации бота в Azure Служба Bot.\n1. Создайте секрет клиента, который включает проверку подлинности единого входа бота.\n1. Добавьте Microsoft Teams для развертывания бота в Teams канале.\n1. Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\nИспользуйте ngrok для создания туннеля к общедоступным конечным точкам HTTPS локального веб-сервера. Выполните следующую команду в ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Создание ресурса Azure Bot**\n\n1. Откройте [портал Azure](https://portal.azure.com/).\n1. Выберите **Создать ресурс**.\n1. Выполните **поиск бота Azure** в поле поиска.\n1. Выберите **Azure Bot**.\n\n    ![Azure Bot](~/assets/images/adaptive-cards/azure-bot.png)\n\n1. Нажмите **Создать**.\n1. Введите имя дескриптора бота в поле **Дескриптор бота**.\n1. Выберите свою **подписку** в раскрывающемся списке.\n1. Выберите свою **группу ресурсов** в раскрывающемся списке.\n    \n    Чтобы создать группу ресурсов, выберите \"Создать **\", введите** имя ресурса, нажмите кнопку **\"** ОК\" и выберите  необходимое расположение в раскрывающемся списке \"Новое расположение группы ресурсов\".\n\n1. Для параметра **Тип приложения** выберите **Мультитенантное** в разделе **Идентификатор приложения Майкрософт**.\n\n    ![Мультитенантное](~/assets/images/adaptive-cards/multi-tenant.png)\n\n    > [!NOTE]\n    > В **разделе \"** Тип создания приложения Microsoft App ID\" уже выбран параметр \"Создать новый идентификатор приложения **Майкрософт** \", чтобы создать бот. Вы также можете выбрать **\"Использовать существующую регистрацию приложения**\", если вы уже зарегистрировали бот. Введите идентификатор приложения Майкрософт в поле **\"Существующий** идентификатор приложения\" и введите значение в поле **\"Существующий пароль приложения** \".\n\n1. Выберите **Проверить и создать**.\n\n    ![Создание Azure Bot](~/assets/images/adaptive-cards/create-azure-bot.png)\n\n1. Если проверка пройдена, нажмите **Создать**.\n\n    Подготовка службы бота займет несколько секунд.\n\n    ![Проверка Azure Bot](~/assets/images/adaptive-cards/validation-pane.png)\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы указаны в группе ресурсов.\n\n    ![Перейти к ресурсу](~/assets/images/adaptive-cards/go-to-resource-card.png)\n\n    Теперь ваш бот Azure создан.\n\n    ![Созданный ресурс бота Azure](~/assets/images/adaptive-cards/azure-bot-ui.png)\n\n**Создание секрета клиента**\n\n1. В разделе **Параметры** выберите **Конфигурация**. Сохраните **Идентификатор приложения Майкрософт** (идентификатор клиента) для дальнейшего использования.\n\n    ![Идентификатор приложения Майкрософт](~/assets/images/adaptive-cards/config-microsoft-app-id.png)\n\n    > [!NOTE]\n    > **Убедитесь, что в** разделе \"Тип бота\" выбрана мультитенантная **служба**.\n\n1. Рядом с **идентификатором приложения Майкрософт** выберите **Управление**.\n\n    ![Управление ботом](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. В разделе **Секреты клиента** выберите **Новый секрет клиента**. Появится окно **Добавить секрет клиента**.  \n\n    ![Новый секрет клиента](~/assets/images/adaptive-cards/new-client-secret.png)\n\n1. Введите **описание** и нажмите **Добавить**.\n\n    ![Секрет клиента](~/assets/images/adaptive-cards/client-secret.png)\n\n1. В столбце **Значение** выберите **Копировать в буфер обмена** и сохраните идентификатор секрета клиента для дальнейшего использования.\n\n    ![Значение секрета клиента](~/assets/images/adaptive-cards/client-secret-value.png)\n   \n**Добавление канала Microsoft Teams**\n\n1. Перейдите на **домашнюю страницу**.\n\n    ![Домашняя страница бота](~/assets/images/adaptive-cards/bot-home-page.png)\n\n1. Откройте бот, который указан в разделе **Последние ресурсы**.\n1. Выберите **\"Каналы**\" в области слева и нажмите **кнопку Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    ![Канал Teams](~/assets/images/adaptive-cards/channel-teams.png)\n\n1. Установите флажок, чтобы принять условия обслуживания, и выберите **Принять**.</br>\n\n    ![Выбор условий обслуживания](~/assets/images/adaptive-cards/select-terms-of-service.png)\n\n1. Нажмите кнопку **Сохранить**.\n\n    ![Выбор Teams](~/assets/images/adaptive-cards/select-teams.png)\n\n**Добавление конечной точки обмена сообщениями**\n\n1. Перейдите **на домашнюю** страницу  и выберите \"**Конфигурация Параметры** в области слева.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io), как показано на следующем рисунке:\n\n    ![URL-адрес HTTPS ngrok](~/assets/images/adaptive-cards/ngrok-url.png)\n\n1. В **конечной точке обмена** сообщениями добавьте URL-адрес HTTPS, созданный из ngrok, и в конце URL-адреса добавьте **/api/messages**.\n\n    ![Конечная точка обмена сообщениями](~/assets/images/adaptive-cards/ngrok-messaging-endpoint.png)\n\n1. Нажмите **Применить**.\n\n    Вы успешно настроили бот в Azure Служба Bot и теперь вам нужно настроить подключение к службе бота.\n"
- title: Настройка подключения службы бота
  durationInMinutes: 5
  content: "Чтобы убедиться, Служба Bot позволяет пользователю входить в бот и получать доступ к нему, необходимо настроить единый вход для бота. Для этого выполните следующие действия:\n\n1. Добавление URI перенаправления в ресурс бота Azure\n1. Предоставление конечной точки API\n1. Авторизация клиентских приложений\n1. Добавление необходимых разрешений API для подчиненных вызовов\n1. Включение неявного предоставления\n1. Изменение манифеста\n1. Настройка Служба Bot подключения\n\n**Добавление URI перенаправления в ресурс бота Azure**\n\n1. Выберите **\"Управление** \" рядом с **идентификатором приложения Майкрософт**.\n\n    ![Управление ботом](~/assets/images/adaptive-cards/manage-bot-label.png)\n\n1. Выберите **\"Проверка подлинности** \" в левой области ресурса бота.\n1. В разделе **Конфигурации платформы** выберите **Добавить платформу**.\n1. Выберите платформу **Веб**.\n1. **Введите URI перенаправления** и `https://token.botframework.com/.auth/web/redirect` выберите **\"Настроить\"**.\n\n    ![Настройка URL-адреса веб-перенаправления](~/assets/images/adaptive-cards/configure-web-redirect-url.png)\n\n    URI перенаправления добавляется в ресурс бота Azure.\n\n    ![Отображение URL-адреса веб-перенаправления](~/assets/images/adaptive-cards/web-redirect-url-display.png)\n\n**Предоставление конечной точки API**\n\n1. Выберите **\"Предоставить API\"** в левой области.\n1. Выберите **\"Задать** \" для URI идентификатора приложения.\n1. Используйте **ПОКАЗАННЫЙ URL-адрес** идентификатора приложения и добавьте `api://` `https://` его вместо URL-адреса **ngrok** и добавьте в начале URL-адреса идентификатора приложения.\n\n    ![URI кода надстройки](~/assets/images/adaptive-cards/app-id-url.png)\n\n1. Нажмите **Сохранить**.\n1. Нажмите **Добавить область**.\n1. В **поле \"Имя области****\" введите access_as_user**.\n1. В **Кто может дать согласие?** Переключитесь на **администраторов и пользователей**.\n1. Введите следующие значения в поля:\n\n    | Поле | Значение |\n    | ----- | ----- |\n    | Администратор отображаемое имя согласия | Teams доступ к профилю пользователя |\n    | Администратор согласия | Позволяет Teams вызывать веб-API приложения в качестве текущего пользователя. |\n    | Отображаемое имя согласия пользователя | Teams может получить доступ к вашему профилю пользователя и выполнять запросы от вашего имени |\n    | Описание согласия пользователя | В Teams вы можете вызывать API этого приложения с тем же правами, что и у вас. |\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n    ![Добавление области](~/assets/images/adaptive-cards/add-scope.png)\n\n1. Нажмите **Добавить область**. Имя области автоматически совпадает с универсальным кодом ресурса (URI) идентификатора приложения, а **/access_as_user** добавляется в конец.\n\n**Авторизация клиентских приложений**\n\nДобавьте следующие идентификаторы **в качестве** авторизованных клиентских приложений, установите флажок для авторизованных областей **и выберите** **\"Добавить приложение\"**.      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams мобильное или настольное приложение)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams веб-приложение)</br>\n\n    ![Добавление клиентского приложения](~/assets/images/adaptive-cards/add-client-aapplication.png)      \n\n**Добавление необходимых разрешений API для нижестоящих вызовов**\n\n1. Выберите **разрешения API** на панели слева.\n1. Выберите **Добавить разрешение**. **Появится окно разрешений API** запроса.\n1. Выберите **API Майкрософт**. Затем выберите **Microsoft Graph** и выберите **делегированные разрешения**.\n1. Добавьте все **делегированные** разрешения пользователя, необходимые приложению для подчиненных API, например User.Read.</br>\n\n    ![Разрешения API](~/assets/images/adaptive-cards/add-permissions.png)\n\n**Включение неявного предоставления**\n\n1. Выберите **Приложения** на панели слева.\n1. Установите **флажки маркеров** доступа и **маркеров** идентификаторов.</br>\n\n    ![Маркеры проверки подлинности](~/assets/images/adaptive-cards/authentication-tokens.png)\n\n1. Нажмите кнопку **Сохранить**, чтобы сохранить изменения.\n\n**Обновление манифеста**\n\n1. Выберите **Манифест** на панели слева.\n1. Убедитесь, что для элемента конфигурации задано значение **\"accessTokenAcceptedVersion\": 2**. В противном случае измените его значение на **2** и нажмите кнопку **\"Сохранить\"**.\n    \n    > [!NOTE]\n    > Если вы уже тестируете бот в Teams, необходимо выйти из этого приложения и выйти из Teams. Затем войдите еще раз, чтобы увидеть это изменение.\n\n    ![Обновление манифеста](~/assets/images/adaptive-cards/manifest.png)\n\n**Настройка Служба Bot подключения**\n\n1. Перейдите **на домашнюю** страницу  и выберите \"**Конфигурация Параметры** в области слева.\n1. Нажмите кнопку **Добавить параметры подключения OAuth** на экране Конфигурация.\n1. В **поле \"Новый параметр подключения**\" введите следующие сведения:\n\n    | Field | Значение или описание |\n    | ----- | ----- |\n    | Имя | Введите имя нового параметра подключения. Имя можно использовать в параметрах кода службы бота. |\n    | Service Provider | Выберите **Azure Active Directory версии 2**. |\n    | Идентификатор клиента | Сохранено ранее в качестве **идентификатора приложения Майкрософт**. |\n    | Секрет клиента | Сохранено ранее **в качестве значения** идентификатора секрета клиента. |\n    | URL-Exchange маркера | Используйте **URL-адрес идентификатора приложения, полученный** ранее при раскрытии конечной точки API. |\n    | Идентификатор клиента | Введите **общее**. |\n    | Scopes | **Введите User.Read**, а также добавьте  все области, необходимые при указании разрешений для подчиненных API. |\n\n    :::image type=\"content\" source=\"./assets/images/adaptive-cards/oauth-connection-setting.png\" alt-text=\"Подключение службы бота\":::\n\n1. Нажмите **Сохранить**.\n"
- title: Настройка бота
  durationInMinutes: 1
  content: >
    Настройте пример бота, чтобы понять, как аутентификация чат-бота в Microsoft Teams.


    **Настройка и запуск примера бота**


    1. Перейдите в репозиторий https://github.com/OfficeDev/Microsoft-Teams-Samples.git.

    1. Выберите **"Код** " и выберите раскрывающийся список.

    1. Выберите " **Скачать ZIP-файл"**.

        ![Скачивание репозитория](~/assets/images/adaptive-cards/repo-download.png)

    1. Обязательно запишите путь скачанного репозитория.

    1. В проводник **выберите Project.**

    1. Перейдите к **примерам Teams-samples > microsoft-> tab-adaptive-cards > csharp > TabWithAdpativeCardFlow**.

    1. Откройте файл **appsettings.json** в Visual Studio Code.

    1. **Обновите конфигурацию appsettings.json** `MicrosoftAppId``MicrosoftAppPassword`для бота, чтобы использовать URI ngrok, и добавьте URI ngrok в качестве `ApplicationBaseUrl`.

    1. Используйте имя подключения OAuth в качестве **имени подключения**.

        > [!NOTE]
        > Вы можете получить эту страницу `MicrosoftAppId` на странице конфигурации бота. Значение `MicrosoftAppPassword` для идентификатора секрета клиента, сохраненного ранее.

        ![Appsettings Json](~/assets/images/adaptive-cards/appsettings-json.png)

    1. Нажмите **Сохранить**.
- title: Настройка и отправка приложения в Teams
  durationInMinutes: 2
  content: >
    Самый полный способ тестирования бота — создание пакета приложения и отправка его в Teams. Этот метод является единственным способом проверки всех функциональных возможностей, доступных боту, во всех областях. Вы можете настроить и запустить Teams, передав `manifest.zip` файл.


    **Запуск приложения Teams путем отправки manifest.zip файла**


    1. В проводник перейдите к примерам **microsoft-Teams-Samples > > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow > AppPackage**, чтобы открыть папку.

    1. Откройте файл `manifest.json` в Visual Studio Code.

    1. В файле `manifest.json` найдите **{contentBotId}** и добавьте идентификатор приложения Майкрософт и сохраните его.

        ![Конфигурация манифеста](~/assets/images/adaptive-cards/manifest-vsc.png)

    1. В проводник перейдите в **папку AppPackage**.

    1. Заархивируйте содержимое **папки AppPackage** для создания `manifest.zip`.

        > [!NOTE]
        > В `manifest.zip` нем не должно быть дополнительных папок. Он должен содержать **исходный** файл манифеста JSON **,** значок цвета **и значок** структуры внутри zip-папки.

    1. Перейдите к Teams.

    1. Для отправки `manifest.zip`выберите **Store > Manage your apps > Upload a custom app** and open `manifest.zip`.

    1. Нажмите **кнопку "** Добавить", чтобы добавить вкладку в чат.

        ![Вкладка в Teams приложении](~/assets/images/adaptive-cards/tab-in-teams.png)

        Вы можете взаимодействовать с этой вкладкой, выполнив вход.

    1. Отправка сообщения на вкладку.

        ![Снимок экрана: Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Взаимодействие с вкладкой в Teams
  durationInMinutes: 1
  content: "Вкладки позволяют получать доступ к службам и содержимому в выделенном пространстве в канале или в чате.\n\nЧтобы использовать вкладку, выполните следующие действия:\n\n1. В левой области окна Teams щелкните многоточие '''.'' и выберите свое приложение в списке.\n1. Вкладка адаптивной карточки с элементами управления действиями.\n\n    ![Вкладка с адаптивной карточкой с элементами управления действиями](~/assets/images/adaptive-cards/adaptive-cards-tab-action-controls.png)\n\n1. Выберите **\"Войти\"** и выберите учетную запись для доступа к вкладке.\n\n    ![Войти](~/assets/images/adaptive-cards/sign-in-page.png)\n\n1. Выберите **\"Показать модуль задачи\"** на домашней странице.\n\n    ![Показать модуль задач](~/assets/images/adaptive-cards/tab-home-page.png)\n\n1. Tab/fetch — это первый запрос на вызов, который бот получает, когда пользователь открывает вкладку адаптивной карточки. Когда бот получает запрос, он отправляет ответ tab continue или ответ проверки подлинности вкладки.\n\n    ![Пример модуля задачи](~/assets/images/adaptive-cards/sample-task-module.png)\n\n1. **Отправка функции адаптивной карточки**\n    **Запрос task/submit** активируется для бота с соответствующими данными с помощью действия. \n\n    ![Карточка отправки задачи](~/assets/images/adaptive-cards/task-submit.png)\n\n1. Вкладка сохраняет вход, если вы не **нажмем кнопку \"Выйти\"**.\n\n    ![Выход](~/assets/images/adaptive-cards/sign-out.png)\n\n1. **Обновите систему, чтобы снова войти** в систему.\n\n    ![Успешный выход](~/assets/images/adaptive-cards/success-sign-out.png)\n"
- title: Полный запрос
  durationInMinutes: 1
  content: >
    У вас возникла такая проблема?


    ![Снимок экрана: Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- content: Вы завершили работу с руководством по началу работы с адаптивными карточками Microsoft Teams с помощью Bot Framework.
