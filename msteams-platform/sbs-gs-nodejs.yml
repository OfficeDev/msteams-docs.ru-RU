### YamlMime:Tutorial
title: Создание первого приложения с помощью Node.js
metadata:
  title: Hello World с Node.js
  description: В этом руководстве вы научитесь создавать приложение Hello World с помощью Node.js.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Обзор "Назад к началу работы"
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 38f93f7da8dd2218edbeacc711b7eb592ff5fca3
  ms.sourcegitcommit: 9e448dcdfd78f4278e9600808228e8158d830ef7
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/17/2022
  ms.locfileid: "62059639"
items:
- durationInMinutes: 1
  content: >
    Начните Microsoft Teams разработку приложения, построив свое первое приложение с помощью вкладки, бота и возможности расширения сообщений.


    >Это приложение будет иметь все возможности, и каждый из них имеет свой собственный пользовательский интерфейс и UX:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Схема, показывающая, что это приложение имеет три функции." border="false":::


    В этом руководстве вы узнаете:


    - Настройка нового проекта с помощью средств командной строки.

    - Создание трех приложений с различными возможностями для каждой вкладки, бота и расширения сообщений.

    - Развертывание приложения с портала разработчиков
- title: Предварительные условия
  durationInMinutes: 1
  content: "\nВот список инструментов, которые необходимо установить для создания и развертывания Teams приложения.\n\n| &nbsp; | Установка | Для использования... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js и NPM](https://nodejs.org/) | Среда запуска JavaScript с задней среду. Используйте последний выпуск LTS v14.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams приложения (беседующие боты, расширения обмена сообщениями и входящие веб-окки) требуют входящих подключений. Туннель соединяет систему разработки с Teams. Это не обязательно для приложений, которые включают только вкладки. Этот пакет устанавливается в каталоге проекта (с помощью `devDependencies` npm). |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузер с средствами разработчика. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Среды сборки JavaScript, TypeScript или SharePoint Framework (SPFx) Используйте версию 1.55 или более поздней версии. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git для использования репо Node.js пример приложения из GitHub. |\n| &nbsp; |  [gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | Набор инструментов JavaScript с открытым исходным кодом. Установка версии 4.0.0 или более поздней версии. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams сотрудничать со всеми, с чем вы работаете, с помощью приложений для чата, собраний, зовов — все в одном месте. | \n| **Необязательное** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools для Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [и Azure CLI](/cli/azure/install-azure-cli) | Средства Azure для доступа к хранимых данных или развертывания облачной Teams приложения в Azure. |\n| &nbsp; | [React средства разработчика для Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) ИЛИ [React средства разработчика для Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Средства браузера для разработки вкладок с помощью JavaScript. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer — средство на основе браузера, которое позволяет запускать запрос из microsoft Graph данных. |\n| &nbsp; | [Портал разработчиков Teams](https://dev.teams.microsoft.com/) | Веб-портал для настройки, управления и распространения Teams, в том числе в организации или Teams магазине. |\n| &nbsp; | **Visual Studio Code расширения** | &nbsp; |\n| &nbsp; | [Основные средства Azure Functions](/azure/azure-functions/functions-run-local) | Компоненты backend локально во время локального отлаженного запуска, в том числе помощники проверки подлинности, необходимые при запуске служб в Azure. Он установлен в каталоге проекта (с помощью `devDependencies` npm). |\n| &nbsp; | [SDK .NET](/dotnet/core/install/) | Настраиваемые привязки для локальных отладок и развертывания приложений Azure Functions. Если вы не установили SDK .NET 3.1 (или более поздней версии) глобально, портативная версия может быть установлена. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Проверка номеров версий для установленных средств\n\nИспользуйте следующие команды, чтобы убедиться, что установленные версии для инструментов необходимы.\n\n> [!NOTE]\n> Используйте окно терминала, которое наиболее удобно для вашей платформы. В этих примерах используется Git Bash (входит в установку Git), но эти скрипты будут работать на большинстве платформ.\n\nДля проверки номеров версий установленных инструментов:\n\n1. Откройте окно терминала. \n2. Запустите следующую команду, чтобы проверить `git` версию, установленную на компьютере:\n\n    ```bash\n    $ git --version\n    ```\n\n    Пример вывода: `git version 2.19.0.windows.1`\n    \n3. Запустите следующую команду, чтобы проверить `node.js` версию:\n    \n    ```bash\n    $ node -v\n    ```\n\n    Пример вывода: `v8.9.3`\n\n4. Проверка номера `npm` версии:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Пример вывода: `5.5.1`\n\n5. Проверка номера `gulp` версии:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Пример вывода:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Запустите следующую команду, чтобы проверить номер версии Visual Studio Code:\n\n    ```bash\n    code --version\n    ```\n\n    Пример вывода:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nВы можете использовать другую версию этих приложений без каких-либо проблем.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента Teams разработки\n\nКлиент **—** это пространство или контейнер для организации в Teams, где вы общались, делитесь файлами и запускали собрания.\nЭто пространство также является местом, где вы перегружаете и тестировать приложение. \n\nПроверьте, готовы ли вы к разработке с клиентом.\n\n### <a name=\"enable-sideloading-option\"></a>Включить параметр sideloading\n\nПосле создания приложения необходимо загрузить приложение в Teams без его распространения. Этот процесс называется боковой загрузкой. Во входе в Microsoft 365 учетную запись для просмотра этого параметра.\n  \nУ вас уже есть клиент и есть ли у вас доступ к администратору? Давайте проверим, действительно ли вы это делаете!\n\nПроверка возможности загрузки приложений в Teams:\n\n1. В клиенте Teams выберите **значок Store.**\n1. Выберите **Управление приложениями.**\n1. Найди возможность Upload **настраиваемого приложения.** Если вы видите вариант, включена загрузка приложений.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показана возможность загрузки настраиваемого приложения в Teams.\":::\n\n    > [!NOTE]\n    > Если Teams не показывает возможность загрузки настраиваемого приложения, поговорите с Teams администратором.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Создание клиента Teams разработчика\n\nЕсли у вас нет учетной записи Teams разработчика, ее можно получить бесплатно. Присоединяйтесь к Microsoft 365 разработчику!\n\n1. Перейдите в [Microsoft 365 разработчика](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Выберите **Join Now** и следуйте инструкциям на экране.\n1. На экране приветствия выберите **настройка подписки E5.**\n1. Настройка учетной записи администратора. После завершения отображается следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Пример того, что вы видите после регистрации на программу Microsoft 365 разработчика.\":::\n\n1. Вопишитесь Teams с помощью только что настроенной учетной записи администратора. Убедитесь, что **Upload настраиваемый** параметр приложения в Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Получить бесплатную учетную запись Azure\n\nЕсли вы хотите провести свое приложение или получить доступ к ресурсам в Azure, необходимо иметь подписку Azure. [Создайте бесплатную учетную запись](https://azure.microsoft.com/free/) перед началом работы.\n\nТеперь у вас есть все средства и настройка учетных записей. Далее давайте настроим среду разработки и начнем строить!\n\nВы можете продолжать использовать это окно терминала для запуска команд, которые следуют в этом руководстве.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Скачайте пример\n\nВ этом руководстве используйте [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) пример для начала работы. Вы можете скачать и клонировать его из GitHub.\n\n**Использование Git Bash для клонирования примера репо:**\n\n1. Откройте окно терминала.\n1. Запустите следующую команду, чтобы клонировать репозиторий образца на компьютер:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Вы можете [вилка](https://help.github.com/articles/fork-a-repo/) этого [репо,](https://github.com/OfficeDev/Microsoft-Teams-Samples) если вы хотите изменить и проверить изменения в вашем GitHub для будущей ссылки.\n"
- title: Создание первого Node.js приложения
  durationInMinutes: 1
  content: "\nПосле клонирования репо для Node.js пример приложения можно создать и протестировать приложение в локальной среде.\n\nНа этой странице вы узнаете:\n1. [Сборка и запуск первого приложения](#build-and-run-the-sample)\n1. [Тестирование примера приложения](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Сборка и запуск примера\n\nПосле клонирования репозитория можно создать пример приложения.\n\n1. Откройте окно терминала.\n1. Запустите команду каталога изменений в терминале, чтобы изменить пример каталога приложений:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Установка всех зависимостей с помощью следующей команды:\n\n    ```bash\n    npm install\n    ```\n\n    Необходимо увидеть, как устанавливается куча зависимостей.\n\n1. Запустите приложение с помощью следующей команды после завершения установки:\n\n    ```bash\n    npm start\n    ```\n\n    Когда приложение Hello World запускается, оно отображается `App started listening on port 3333` в окне терминала.\n\n    > [!NOTE]\n    > Если в вышеуказанном сообщении отображается другой номер порта, это потому, что у вас есть переменная среды ПОРТ. Вы можете продолжать использовать этот порт или изменить переменную среды на 3333.\n\n1. Откройте окно браузера и используйте следующие URL-адреса для проверки загрузки всех URL-адресов приложений Hello World:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Изображение, Node.js локальном хосте\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Изображение, Node.js страницу привета локального хост-сайта\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Изображение, Node.js на вкладке первый локальный хост\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Изображение, Node.js вторую вкладку локального хоста\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Тестирование примера приложения в локальной среде\n\nПомните, что приложения в Microsoft Teams являются веб-приложениями, которые обнажают одну или несколько возможностей. Сделайте приложение доступным в Интернете, чтобы Teams платформа может загрузить его. Чтобы сделать ваше приложение доступно из Интернета, необходимо *провести* ваше приложение.\n\nДля локального тестирования можно запустить приложение на локальной машине и создать туннель к ней с помощью веб-конечной точки. [ngrok](https://ngrok.com) — это бесплатный инструмент, который позволяет делать именно это. С *помощью ngrok* вы можете получить такой веб-адрес, как `https://d0ac14a5.ngrok.io` (этот URL-адрес — только пример). Вы можете [скачать и установить](https://ngrok.com/download) *ngrok для* вашей среды. Убедитесь, что вы добавляете его в расположение в `PATH` .\n\n### <a name=\"create-ngrok-tunnel\"></a>Создание туннеля ngrok\n\nПосле установки ngrok можно создать туннель для локального развертывания приложения.\n\n1. Откройте новое окно терминала.\n1. Запустите следующую команду для создания туннеля. В примере приложения используется порт 3333:\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    Создается туннель ngrok. Вот пример туннеля ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Изображение, показывающая туннель ngrok\" border=\"false\":::\n\n    *Ngrok* прослушивает запросы из Интернета и передает их в приложение, которое работает в порту 3333.\n\nЧтобы проверить локальное развертывание приложения:\n\n1. Откройте браузер.\n1. Загрузите приложение с помощью следующего URL-адреса:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Вот пример URL-адреса:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Изображение, node.js приложение, запущенное локально в тоннеле ngrok\" border=\"false\":::\n\n    Вы можете попробовать добавить , или в `hello` `first` `second` url-адрес туннеля ngrok для просмотра различных страниц вкладки приложения.\n\n    Ngrok прослушивает запросы из Интернета и передает их в приложение, которое работает в порту 3333.        \n\n1. Обратите внимание на адрес переададки на консоли ngrok. Этот URL-адрес необходим для развертывания приложения в Teams.\n\n    > [!NOTE]\n    > Если во время сборки и запуска использовался другой [порт,](#build-and-run-the-sample)убедитесь, что для установки туннеля *ngrok* используется один и тот же номер порта.\n    > [!TIP]\n    > Неплохо запустить *ngrok* в другом окне терминала, чтобы не мешать приложению узла, которое впоследствии может потребоваться остановить, перестроить и повторно запустить. Сеанс *ngrok* возвращает полезную информацию об отладке в этом окне. Платная версия *ngrok позволяет* использовать постоянные имена.\n\n    >[!IMPORTANT] \n    > Если вы используете бесплатную версию ngrok, ваше приложение будет доступно только во время текущего сеанса на компьютере разработки. Она недоступна, если машина отключена или переходит в спящий режим. При перезапуске службы возвращается новый адрес. Затем необходимо обновить каждое расположение, использующее устаревший адрес. Помните этот шаг при совместном использовании приложения для тестирования.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Сборка Node.js пакета приложений\n\nВы можете использовать `gulp CLI` для создания пакета приложений для Node.js.\n\n1. Откройте окно терминала.\n1. Убедитесь, что вы находитесь в каталоге, где `node.js` клонирован. Это папка, в которой `gulpfile.js` находится. \n1. Запустите следующую команду для создания пакета Node.js приложения.\n\n    ```$ gulp```\n\n    Вот пример вывода команд:\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Создается helloworldapp.zip пакет приложений. Файл пакета можно найти по следующему пути.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Поиск файла пакета приложений helloworldapp.zip, если в используемом средстве не ясно расположение.\n"
- title: Настройка первого приложения Node.js с помощью портала разработчика
  durationInMinutes: 1
  content: "\nВы можете использовать [портал разработчика](https://dev.teams.microsoft.com/) для загрузки пакета приложений для Teams и настройки возможностей приложения. Портал разработчика — Teams приложение, упрощает создание и регистрацию приложения. Установка из Teams магазина!\n\nПосле создания и тестирования Teams приложение можно настроить и просмотреть его с помощью портала разработчиков.\n\nОбновление пакета приложений включает в себя:\n\n1. [Импорт пакета приложений на портал разработчика](#import-the-app-package-to-developer-portal)\n1. [Настройка возможностей приложений](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Импорт пакета приложений на портал разработчика\n\nИмпорт пакета приложений:\n\n1. Откройте Microsoft Teams.\n\n1. Выберите **значок Store** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: из левой панели.\n\n1. Поиск **портала разработчика** в панели поиска и выбор портала *****.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Выберите приложение Портал разработчика\" border=\"false\":::\n\n1. Выберите **Открыть**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Изображение, показывающая открытое приложение Портал разработчика\" border=\"false\":::\n\n    Откроется портал разработчиков.\n\n1. Выберите **вкладку Apps.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Приложение Портал разработчика\" border=\"false\":::\n\n1. Выберите **приложение Import**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Изображение, показывающая кнопку Импорт приложения\" border=\"false\":::\n\n1. Откройте пакет приложений **helloworldapp.zip** из следующего пути в структуре каталога репо C# пример:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    Приложение **Hello World** импортируется на портале разработчиков.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Изображение, показывающе приложение, импортируемого в Teams\" border=\"false\":::\n\n    После импорта приложения на портал разработчика вы можете просмотреть его сведения на портале разработчиков.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Экскурсия по приложению на портале разработчиков\n\nПосле импорта приложения на портал разработчика можно просмотреть его сведения, в том числе файл манифеста.\n\n#### <a name=\"view-app-information\"></a>Просмотр сведений о приложении\n\n1. Выберите **основные сведения** из левой области портала разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"На изображении показана левая часть портала разработчика\" border=\"false\":::\n\n1. Обратите внимание на следующие сведения из базовой информации:\n    - ИД приложения;\n    - Сведения о разработчике\n    - URL-адреса приложений\n\n1. Выберите **branding** с левой области, чтобы просмотреть сведения о брендинге.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Изображение, на котором показаны сведения о брендинге приложения\" border=\"false\":::\n\n    Эти сведения важны, если вы пишете новое приложение для распространения.\n\n#### <a name=\"view-app-features\"></a>Просмотр функций приложения\n\n- Выберите **функции Приложения** с левой области портала разработчика.\n\n    Функции Приложения отображаются в правой области. Вы можете просматривать карточки для личного приложения, бота и расширения сообщений.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Изображение, показывающая функции приложения\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Просмотр манифеста приложения\n\nФайл манифеста используется для настройки возможностей, необходимых ресурсов и других важных атрибутов для приложения.\n\n- Выберите **Опубликовать** на левой панели, чтобы открыть список выпаданий, а затем выбрать **пакет App**.\n\n    Манифест Приложения отображается в правой области.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Изображение, показывающая файл манифеста приложения на портале разработчиков\" border=\"false\":::\n\n    Файл манифеста отображается в правой области.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Настройка возможностей приложения\n\nПосле импорта приложения на портал разработчика следующий шаг — настройка возможностей приложения. Портал разработчика содержит все сведения о приложении в различных разделах. Это упрощает настройку возможностей приложения.\n\nС помощью портала разработчиков можно:\n1. [Настройка личного приложения вкладки](#configure-personal-tab-app)\n1. [Настройка бота](#configure-bot)\n1. [Настройка расширения сообщения](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Настройка личного приложения вкладки\n\nНастройка личного приложения вкладки:\n\n1. Выберите :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карточке **личного приложения** на области функций **Приложения** и выберите **Изменить**.\n\n    Отображаются сведения для вкладки Hello.\n\n1. Выберите :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок для вкладки Hello и выберите **Изменить,** чтобы открыть сведения о приложении для обновления.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Изображение, показывающая меню вкладки Hello\" border=\"false\":::\n\n1. Введите сведения о приложении для вкладки Hello в **вкладке Добавить вкладку в личное приложение.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Изображение, на котором показаны сведения о вкладке Hello\" border=\"false\":::\n\n    Введите следующие сведения:\n    - **Имя.** Вкладка Hello.\n    - **URL-адрес** **контента и URL-адрес** веб-сайта: адрес переададки в сеансе консоли ngrok.\n    - **Контекст.** Выберите **вкладку Personal.**\n\n1. Нажмите кнопку **Обновить**.\n\n    Сведения о вкладке Hello отображаются на области **личного** приложения.\n\n1. Нажмите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Изображение, на котором отображаются сведения о вкладке Hello, которые необходимо сохранить\" border=\"false\":::\n\n    Теперь **на области личного** приложения показаны новая вкладка и вкладка \"О\", созданная автоматически.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Изображение, показывающая вкладку Hello и сведения о вкладке\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Настройка бота\n\nВ приложение легко добавить функциональные возможности ботов. В примере Hello World в примере уже есть бот, но его необходимо зарегистрировать Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Изображение, показывающая импортируемого приложения-бота без ИД приложения\" border=\"false\":::\n\nУ бота, импортируемого из примера, нет связанного с ним ID приложения. Вам потребуется удалить его и создать новый бот. Портал разработчиков создает новый ID приложения и регистрирует его с помощью Teams.\n\nДобавление и настройка бота включает в себя:\n\n1. [Добавление нового бота](#to-add-a-new-bot)\n1. [Добавление бота в приложение](#to-add-bot-to-app)\n1. [Настройка области бота](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Добавление нового бота\n\n1. Выберите :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карте **Bot** на области **функций Приложения** и выберите **Удалить**.\n\n1. Выберите **Инструменты** для добавления возможностей.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Изображение, показывающая параметр Tools\" border=\"false\":::\n\n1. Выберите **управление ботом** на области **Инструментов.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Изображение, показывающая области управления ботами\" border=\"false\":::\n\n1. Выберите **+ Новый бот** на области управления **ботом.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Изображение, показывающая новый вариант бота\" border=\"false\":::\n\n1. Введите подходящее имя для бота и выберите **Добавить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Изображение, показывающая, как добавить бот\" border=\"false\":::\n\n    На **области Configure** отображаются сведения о новом боте в левой области.\n\n1. Введите URL-адрес переададки из `ngrok` консоли и выберите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Изображение, показывающая, как добавить конечную точку бота\" border=\"false\":::\n\n1. Выберите **секреты клиента,** а затем добавьте секрет клиента в **бот,** чтобы создать пароль для бота.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Изображение, показывающая секретный раздел Client\" border=\"false\":::\n\n    Портал разработчика создает пароль для бота.\n\n    Вы можете использовать :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: значок для копирования пароля. В этом руководстве не нужно копировать его.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Изображение, показывающая сгенерированную секрет клиента\" border=\"false\":::\n\n1. Нажмите кнопку **ОК**.\n\n1. Выберите **< боты,** чтобы вернуться в области управления **ботами.**\n\n    В **области управления ботом** показан новый бот, добавленный с помощью ID приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Изображение, показывающая новый бот с ID приложения\" border=\"false\":::\n\n1. Убедитесь, что вы сохраните код бота вместе с паролем из раздела **Секрет клиента.**\n\n##### <a name=\"to-add-bot-to-app\"></a>Добавление бота в приложение\n\n1. Откройте области **функций Приложения** и выберите карту **Bot.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Изображение, на котором показана бот-карта\" border=\"false\":::\n\n    Появится **области** Бот.\n\n1. Выберите приложение-бот из **Выберите существующий бот** и выберите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Изображение, показывающая, как выбрать существующее бот-приложение\" border=\"false\":::\n\n    Новый бот добавляется в приложение с собственным ИД приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Изображение, показывающая новый бот, добавленный в приложение\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Настройка области бота\n\n1. Выберите :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на новой **карте Bot** и выберите **Изменить**.\n\n1. Перемещение по **области Бот** для просмотра раздела **Команды** и выберите + **Добавить команду**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Изображение, показывающая раздел команды\" border=\"false\":::\n\n1. Введите подходящее имя и описание **для команды**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Изображение, показывающая, как добавлять сведения о командах\" border=\"false\":::\n\n1. Выберите все три области для команды и выберите **Добавить**.\n    - **Личный**\n    - **Команда**\n    - **Групповой чат**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Изображение, показывающая, как сохранить сведения о командах\" border=\"false\":::\n\n    Новая команда добавляется в раздел **Команды** области **Bot.**\n\n1. Нажмите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Изображение, на котором отображаются сведения о командах, которые необходимо сохранить\" border=\"false\":::\n\n    Сохраняются сведения о команде.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Изображение, на котором отображаются сохраненные сведения о командах\" border=\"false\":::\n\n1. Откройте **области приложения** и выберите карточку **личного** приложения, чтобы просмотреть сведения о вкладке вашего приложения.\n\n    Вы увидите, что вкладка для вашего нового чат-бота добавляется в приложение.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Изображение, показывающая настроенную вкладку чата\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Настройка расширения сообщения\n\nРасширения обмена сообщениями позволяет пользователям запросить сведения из вашей службы и опубликовать эти сведения. Сведения вывешиты в виде карточек в диалог канала. Расширения обмена сообщениями отображаются в нижней части окна составить.\n\nЧтобы добавить новое расширение сообщения:\n\n1. Выберите :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на **карточке расширения** сообщений на области **функций Приложения** и выберите **Удалить**.\n\n1. Выберите **расширение сообщений** из **области функций** Приложения.\n\n1. Выберите имя приложения-бота из списка **выбора** существующего списка отсев ботов на области **расширения** сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Изображение, показывающая расширение сообщения для выбора бота\" border=\"false\":::\n\n1. Нажмите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Изображение, показывающая области расширения сообщения\" border=\"false\":::\n\n    Расширение сообщения сохранено, а раздел **Команды** отображается на области **расширения** сообщения.\n\n1. Выберите **+ Добавьте команду,** чтобы определить область действия приложения расширения сообщений.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Изображение, показывающая раздел Команда\" border=\"false\":::\n\n    Диалоговое **окно Добавить** команду.\n\n1. **Убедитесь,** что поиск выбран в качестве типа команды, которую необходимо добавить в **диалоговом** окте Добавить команду.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Изображение, показывающая добавление диалогового набора команд\" border=\"false\":::\n\n1. Введите подходящие сведения для следующих сведений:\n    - Командный ID\n    - Название команды\n    - Описание команды\n\n1. Перемещение через диалоговое окно, чтобы просмотреть оставшиеся сведения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Изображение, показывающая оставшиеся сведения в диалоговом окте &quot;Добавление командной команды&quot;\" border=\"false\":::\n\n1. **Убедитесь, что выбрано** значение Make default.\n1. Выберите следующие контексты для команды расширения сообщения:\n    - Командный окне\n    - Окне Compose\n    - Сообщение\n1. Введите подходящие сведения для следующих сведений:\n    - Имя параметра\n    - Название параметра\n    - Описание параметра\n\n1. Выберите **Текст** в качестве типа ввода.\n1. Нажмите кнопку **Сохранить**.\n1. Команда расширения сообщения сохранена и показана в списке команд в области **расширения** сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Изображение с добавленной командой\" border=\"false\":::\n\n1. Нажмите **Сохранить**.\n1. Области **функций Open App.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Изображение, показывающая возможности, настроенные для приложения Hello World\" border=\"false\":::\n\n    Вы увидите все три возможности — личное приложение вкладки, бот и расширение сообщений, настроенные для приложения Hello World.\n"
- title: Просмотр и тестирование Node.js приложения
  durationInMinutes: 1
  content: "\nПосле импорта приложения и настройки возможностей на портале разработчиков можно просмотреть и протестировать пример приложения.\n\n## <a name=\"preview-your-app-in-teams\"></a>Просмотр приложения в Teams\n\nПосле настройки возможностей приложения можно просмотреть и протестировать приложение в Teams локальной среде.\n\nЧтобы просмотреть ваше приложение:\n\n1. Выберите **предварительный просмотр Teams** из панели инструментов портала разработчиков.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Изображение, на котором показана кнопка Preview\" border=\"false\":::\n\n    Портал разработчиков сообщает, что ваше приложение успешно загружено боком.\n\n1. Выберите **Управление приложениями.**\n   Ваше приложение перечислены в загруженных приложениях. \n1. Найдите приложение с помощью окна поиска, выберите три точки в строке.\n1. Выберите **параметр Просмотр.**\n    Страница **Добавление** отображается для приложения.\n1. Выберите **Добавить** для загрузки приложения на Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Изображение, показывающая диалоговое окно Добавить приложение\" border=\"false\":::\n\n    Ваше приложение теперь доступно в Teams. Вы можете просмотреть все вкладки и проверить возможности:\n\n    - Вкладка Hello:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Изображение, показывающая вкладку Hello в локальной среде\" border=\"false\":::\n\n    - Бот чата:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Изображение, показывающая бот приложения в локальной среде\" border=\"false\":::\n\n        Сообщение можно отправить с помощью чата.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Изображение, показывающая чат в локальной среде\" border=\"false\":::\n\n    - Расширение сообщения:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Изображение, показывающая расширение сообщения в локальной среде\" border=\"false\":::\n\n        Поиск можно попробовать с помощью расширения сообщения.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Изображение, показывающем поиск с помощью расширения сообщения в локальной среде\" border=\"false\":::\n\n    - О вкладке:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Изображение, показывающая вкладку &quot;О вкладке в локальной среде&quot;\" border=\"false\":::"
