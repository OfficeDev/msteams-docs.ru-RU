### YamlMime:Tutorial
title: Создание первого приложения с помощью Node.js
metadata:
  title: Hello World Node.js
  description: В этом руководстве вы научитесь создавать приложения Hello World с помощью Node.js, настроив новый проект, вкладку сборки и развертывания, приложения бота и расширения сообщений.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Общие сведения о начале работы
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 690887347e34b701d2d4b010a0af6eecbc011a67
  ms.sourcegitcommit: 377a4b712b50a211851aeecc1029414939945390
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/27/2022
  ms.locfileid: "68044695"
items:
- durationInMinutes: 1
  content: >
    Начните разработку приложений Microsoft Teams, создав свое первое приложение с помощью вкладки, бота и расширения сообщения.


    > Это приложение будет иметь все возможности и каждый из них имеет собственный пользовательский интерфейс и пользовательский интерфейс:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Схема, показывающая, что это приложение имеет три функции.":::


    В этом руководстве вы узнаете:


    - Настройка нового проекта с помощью средств командной строки.

    - Как создать три приложения с разными возможностями — tab, bot и message extension.

    - Развертывание приложения на портале разработчика.
- title: Предварительные требования
  durationInMinutes: 1
  content: "\nНиже приведен список средств, которые необходимо установить для создания и развертывания приложения Teams.\n\n| &nbsp; | Установка | Для использования... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js и NPM](https://nodejs.org/) | Серверной среды выполнения JavaScript. Используйте последнюю версию версии 16 LTS.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Функции приложений Teams (боты для общения, расширения сообщений и входящие веб-перехватчики) требуют входящих подключений. Туннель подключает систему разработки к Teams. Он не требуется для приложений, которые включают только вкладки. Этот пакет устанавливается в каталоге проекта (с помощью npm `devDependencies`). |\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузера со средствами разработчика. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download); | Сред сборки JavaScript, TypeScript или SharePoint Framework (SPFx). Используйте версию 1.55 или более позднюю. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git для использования примера Node.js приложения из GitHub. |\n| &nbsp; |  [Глоток](https://gulpjs.com/docs/en/getting-started/quick-start) | Набор средств JavaScript с открытым кодом. Установите версию 4.0.0 или более позднюю. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams для взаимодействия в одном месте со всеми пользователями, с которыми вы работаете, с помощью приложений для чата, собраний и звонков. | \n| **Необязательное** | &nbsp; | &nbsp; |\n| &nbsp; | [Средства Azure для Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [и Microsoft Azure CLI](/cli/azure/install-azure-cli) | Средства Azure для доступа к хранимых данных или развертывания облачной серверной части для приложения Teams в Azure. |\n| &nbsp; | [React средств разработчика для Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) [или React средств разработчика для Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Средства браузера для разработки вкладок с помощью JavaScript. |\n| &nbsp; | [Песочница Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Обозреватель Microsoft Graph — это браузерное средство, которое позволяет выполнять запросы из данных Microsoft Graph. |\n| &nbsp; | [Портал разработчика Teams](https://dev.teams.microsoft.com/) | Веб-портала для настройки, управления и распространения приложений Teams, в том числе в вашей организации или магазине Teams. |\n| &nbsp; | **Visual Studio Code расширения** | &nbsp; |\n| &nbsp; | [Azure Functions Core Tools](/azure/azure-functions/functions-run-local) | Внутренние компоненты локально во время выполнения локальной отладки, включая вспомогательные средства проверки подлинности, необходимые при запуске служб в Azure. Он устанавливается в каталоге проекта (с помощью npm `devDependencies`). |\n| &nbsp; | [Пакет SDK для .NET](/dotnet/core/install/) | Настраиваемые привязки для локальной отладки и Функции Azure развертывания приложений. Если пакет SDK для .NET 3.1 (или более поздней версии) не установлен глобально, можно установить переносимую версию. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Проверка номеров версий для установленных средств\n\nИспользуйте следующие команды, чтобы убедиться, что установленные версии для инструментов необходимы.\n\n> [!NOTE]\n> Используйте окно терминала, которое вам больше всего удобно на вашей платформе. В этих примерах используется Git Bash (который входит в установку Git), но эти скрипты будут выполняться на большинстве платформ.\n\nЧтобы проверить номера версий установленных средств, выполните указанные ниже действия.\n\n1. Откройте окно терминала. \n2. Выполните следующую команду, чтобы проверить версию `git` , установленную на компьютере:\n\n    ```bash\n    $ git --version\n    ```\n\n    Пример выходных данных: `git version 2.19.0.windows.1`\n    \n3. Выполните следующую команду, чтобы проверить версию `node.js` :\n    \n    ```bash\n    $ node -v\n    ```\n\n    Пример выходных данных: `v8.9.3`\n\n4. Проверьте номер версии:`npm`\n\n    ```bash\n    $ npm -v\n    ```\n\n    Пример выходных данных: `5.5.1`\n\n5. Проверьте номер версии:`gulp`\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Пример выходных данных:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Выполните следующую команду, чтобы проверить номер версии Visual Studio Code:\n\n    ```bash\n    code --version\n    ```\n\n    Пример выходных данных:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nВы можете использовать другую версию этих приложений без каких-либо проблем.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента разработки Teams\n\nКлиент **—** это как пространство или контейнер для вашей организации в Teams, где вы беседируете, делитесь файлами и выполняете собрания.\nВ этом пространстве также можно загрузить неопубликованное приложение и протестировать его. \n\nДавайте посмотрим, готовы ли вы к разработке с клиентом.\n\n### <a name=\"enable-sideloading-option\"></a>Параметр \"Включить загрузку неопубликованных приложений\"\n\nПосле создания приложения необходимо загрузить это приложение в Teams, не распространяя его. Этот процесс называется загрузкой без публикации. Войдите в свою учетную запись Microsoft 365, чтобы просмотреть этот параметр.\n  \n> [!NOTE]\n> Загрузка неопубликованных приложений необходима для предварительного просмотра и тестирования приложений в локальной среде Teams. Если она не включена, вы не сможете просмотреть и протестировать приложение в Teams локально.\n\nУ вас уже есть клиент и у вас есть доступ администратора? Давайте посмотрим, действительно ли вы работаете!\n\nПроверьте, можно ли загрузить неопубликованные приложения в Teams:\n\n1. В клиенте Teams щелкните **значок Магазина** .\n1. Выберите **Управление приложениями**\n1. Найдите параметр для **отправки пользовательского приложения**. Если вы видите этот параметр, загрузка неопубликованных приложений включена.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показан параметр для отправки пользовательского приложения в Teams.\":::\n\n    > [!NOTE]\n    > Если в Teams не отображается возможность отправки пользовательского приложения, обратитесь к администратору Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Создание бесплатного клиента разработчика Teams\n\nЕсли у вас нет учетной записи разработчика Teams, ее можно получить бесплатно. Присоединяйтесь к программе для разработчиков Microsoft 365!\n\n1. Перейдите в [программу для разработчиков Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Нажмите **кнопку \"Присоединиться сейчас** \" и следуйте инструкциям на экране.\n1. На экране приветствия выберите **\"Настройка подписки E5\"**.\n1. Настройте свою учетную запись администратора. После завершения отобразится следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Пример того, что вы видите после регистрации в программе разработчика Microsoft 365.\":::\n\n1. Войдите в Teams с помощью учетной записи администратора, которую вы только что настроили. Убедитесь, что у вас есть **параметр отправки настраиваемого** приложения в Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Получение бесплатной учетной записи Azure\n\nЕсли вы хотите разместить приложение или получить доступ к ресурсам в Azure, у вас должна быть подписка Azure. [Создайте бесплатную учетную запись](https://azure.microsoft.com/free/) перед началом работы.\n\nТеперь у вас есть все средства и настроены учетные записи. Теперь давайте настроим среду разработки и приступим к созданию.\n\nВы можете продолжать использовать это окно терминала для выполнения команд, приведенных в этом руководстве.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Скачивание примера\n\nДля работы с этим руководством используйте [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) Пример для начала работы. Вы можете скачать и клонировать его из GitHub.\n\n**Чтобы клонировать пример репозитория с помощью Git Bash, выполните следующие действия**.\n\n1. Откройте окно терминала.\n1. Выполните следующую команду, чтобы клонировать пример репозитория на компьютер:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Вы можете [создать вилку](https://help.github.com/articles/fork-a-repo/) [этого](https://github.com/OfficeDev/Microsoft-Teams-Samples) репозитория, если хотите изменить и проверить изменения в репозитории GitHub для дальнейшего использования.\n"
- title: Создание первого Node.js приложения
  durationInMinutes: 1
  content: "\nПосле клонирования репозитория для примера Node.js можно создать и протестировать приложение в локальной среде.\n\nНа этой странице вы научитесь:\n1. [Создание и запуск первого приложения](#build-and-run-the-sample)\n1. [Тестирование примера приложения](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Сборка и запуск примера\n\nПосле клонирования репозитория можно создать пример приложения.\n\n1. Откройте окно терминала.\n1. Выполните команду \"Изменить каталог\" в терминале, чтобы изменению каталога примера приложения:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Установите все зависимости с помощью следующей команды:\n\n    ```bash\n    npm install\n    ```\n\n    Вы увидите, что устанавливается множество зависимостей.\n\n1. Запустите приложение, выполнив следующую команду после завершения установки:\n\n    ```bash\n    npm start\n    ```\n\n    Когда приложение Hello World, оно отображается `App started listening on port 3333` в окне терминала.\n\n    > [!NOTE]\n    > Если в сообщении выше отображается другой номер порта, это связано с тем, что у вас задана переменная среды PORT. Вы можете продолжать использовать этот порт или изменить переменную среды на 3333.\n\n1. Откройте окно браузера и используйте следующие URL-адреса, чтобы убедиться, что все URL-адреса Hello World загружаются:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Изображение, показывающее Node.js локальном узле\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Изображение, показывающее Node.js hello на локальном узле\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Изображение с первой Node.js локального узла\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Изображение, на котором Node.js второй вкладке локального узла\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Тестирование примера приложения в локальной среде\n\nПомните, что приложения в Microsoft Teams — это веб-приложения, которые предоставляет одну или несколько возможностей. Сделайте приложение доступным в Интернете, чтобы платформа Teams загрузила его. Чтобы приложение было доступно из Интернета, *необходимо разместить приложение* .\n\nДля локального тестирования можно запустить приложение на локальном компьютере и создать туннель для него с веб-конечной точкой. [ngrok](https://ngrok.com) — это бесплатное средство, которое позволяет сделать это. С *помощью ngrok* можно получить такой веб-адрес `https://d0ac14a5.ngrok.io` (этот URL-адрес является просто примером). Вы можете [скачать и установить](https://ngrok.com/download) *ngrok* для своей среды. Убедитесь, что вы добавляете его в расположение в `PATH`.\n\n### <a name=\"create-ngrok-tunnel\"></a>Создание туннеля ngrok\n\nПосле установки ngrok можно создать туннель для локального развертывания приложения.\n\n1. Откройте новое окно терминала.\n1. Выполните следующую команду, чтобы создать туннель. В примере приложения используется порт 3333:\n\n    ```bash\n    ngrok http 3333 --host-header=localhost:3333\n    ```\n    Создается туннель ngrok. Ниже приведен пример туннеля ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Изображение, показывающее туннель ngrok\":::\n\n    *Ngrok* прослушивает запросы из Интернета и направляет их в приложение, работающее через порт 3333.\n\nЧтобы проверить локальное развертывание приложения, выполните указанные ниже действия.\n\n1. Откройте браузер.\n1. Загрузите приложение по следующему URL-адресу:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Ниже приведен пример URL-адреса.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Изображение, показывающее node.js приложения, выполняющееся локально в туннеле ngrok\":::\n\n    Вы можете попробовать добавить или `hello``first``second` в URL-адрес туннеля ngrok, чтобы просмотреть различные страницы вкладок приложения.\n\n    Ngrok прослушивает запросы из Интернета и направляет их в приложение, работающее через порт 3333.        \n\n1. Запишите адрес пересылки в консоли ngrok. Этот URL-адрес необходим для развертывания приложения в Teams.\n\n    > [!NOTE]\n    > Если во время сборки и запуска использовался другой [порт,](#build-and-run-the-sample) убедитесь, что для настройки туннеля *ngrok* используется тот же номер порта.\n    \n    > [!TIP]\n    > Рекомендуется запустить *ngrok* в другом окне терминала, чтобы он не прерывал работу приложения узла, которое позже может потребоваться остановить, перестроить и повторно запустить. Сеанс *ngrok* вернет полезные сведения об отладке в этом окне. Платная версия *ngrok* позволяет использовать постоянные имена.\n\n    >[!IMPORTANT] \n    > Если вы используете бесплатную версию ngrok, ваше приложение будет доступно только во время текущего сеанса на компьютере разработки. Он недоступен, если компьютер выключен или переходит в спящий режим. При перезапуске службы она возвращает новый адрес. Затем необходимо обновить все расположения, использующие устаревший адрес. Помните этот шаг при совместном использовании приложения для тестирования.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Создание Node.js приложения\n\nМожно использовать для `gulp CLI` сборки пакета приложения для Node.js.\n\n1. Откройте окно терминала.\n1. Убедитесь, что вы находитсяе в каталоге, в котором `node.js` клонирован. Это папка, в которую `gulpfile.js` она помещается. \n1. Выполните следующую команду, чтобы создать Node.js приложения.\n\n    ```$ gulp```\n\n    Ниже приведен пример выходных данных команды.\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Создается helloworldapp.zip приложения. Файл пакета можно найти по следующему пути.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Найдите файл пакета приложения, helloworldapp.zip, если расположение в инструменте, которое вы используете, не является четким.\n"
- title: Настройка первого приложения Node.js с помощью портала разработчика
  durationInMinutes: 1
  content: "\nВы можете использовать [портал разработчика](https://dev.teams.microsoft.com/) для отправки пакета приложения в Teams и настройки возможностей приложения. Портал разработчика — это приложение Teams, которое упрощает создание и регистрацию приложения. Установите из магазина Teams!\n\nПосле сборки и тестирования приложения Teams его можно настроить и просмотреть с помощью портала разработчика.\n\nОбновление пакета приложения включает в себя:\n\n1. [Импорт пакета приложения на портал разработчика](#import-the-app-package-to-developer-portal)\n1. [Настройка возможностей приложения](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Импорт пакета приложения на портал разработчика\n\nЧтобы импортировать пакет приложения:\n\n1. Откройте Microsoft Teams.\n\n1. Щелкните **значок Магазина** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: на панели слева.\n\n1. Найдите **портал разработчика** в строке поиска и выберите **Портал разработчика***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Выбор приложения &quot;Портал разработчика&quot;\":::\n\n1. Выберите **Открыть**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Изображение с открытым приложением портала разработчика\":::\n\n    Откроется портал разработчика.\n\n1. Выберите **вкладку \"Приложения** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Приложение портала разработчика\":::\n\n1. Выберите **\"Импорт приложения\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Изображение, на котором показана кнопка &quot;Импорт приложения&quot;\":::\n\n1. Откройте пакет приложения по `helloworldapp.zip` следующему пути в структуре примера каталога репозитория C#:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    Приложение **Hello World** импортируется на портал разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Изображение, показывающее приложение, импортируемого в Teams\":::\n\n    После импорта приложения на портал разработчика его сведения можно просмотреть на портале разработчика.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Знакомство с приложением на портале разработчика\n\nПосле импорта приложения на портал разработчика можно просмотреть сведения о нем, включая файл манифеста.\n\n#### <a name=\"view-app-information\"></a>Просмотр сведений о приложении\n\n1. Выберите **\"Основные сведения** \" на левой панели портала разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"На рисунке показана левая панель портала разработчика\":::\n\n1. Обратите внимание на следующие сведения из основных сведений:\n    - ИД приложения;\n    - Сведения о разработчике\n    - URL-адреса приложений\n\n1. Выберите **фирменную символику** на левой панели, чтобы просмотреть сведения о фирменной символике.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Изображение: сведения о фирменной символике приложения\":::\n\n    Эти сведения важны при создании нового приложения для распространения.\n\n#### <a name=\"view-app-features\"></a>Просмотр функций приложения\n\n- Выберите **функции приложения** на левой панели портала разработчика.\n\n    Функции приложения отображаются в правой области. Вы можете просмотреть карточки для личного приложения, бота и расширения сообщений.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Изображение, на котором показаны функции приложения\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Просмотр манифеста приложения\n\nФайл манифеста используется для настройки возможностей, необходимых ресурсов и других важных атрибутов для приложения.\n\n- Выберите **\"Опубликовать** \" на левой панели, чтобы открыть раскрывающийся список, а затем выберите **пакет приложения**.\n\n    Манифест приложения отображается в правой области.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Изображение файла манифеста приложения на портале разработчика\":::\n\n    Файл манифеста отображается в правой области.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Настройка возможностей приложения\n\nПосле импорта приложения на портал разработчика следующим шагом является настройка возможностей приложения. Портал разработчика содержит все сведения о приложении в разных разделах. Это упрощает настройку возможностей приложения.\n\nС помощью портала разработчика вы можете:\n1. [Настройка личного приложения табуляции](#configure-personal-tab-app).\n1. [Настройка бота](#configure-bot).\n1. [Настройте расширение сообщения](#configure-message-extension).\n\n#### <a name=\"configure-personal-tab-app\"></a>Настройка личного приложения табуляции\n\nЧтобы настроить приложение личных вкладок, с помощью этой функции можно выполнить следующее:\n\n1. Щелкните :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карточке **личного** приложения на  панели функций приложения и нажмите кнопку **\"Изменить\"**.\n\n    Отобразятся сведения о вкладке Hello.\n\n1. Щелкните значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: вкладки \"Hello\" и выберите команду **\"** Изменить\", чтобы открыть сведения о приложении для обновления.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Изображение меню вкладки &quot;Hello&quot;\":::\n\n1. Введите сведения о приложении на вкладке \"Hello\" в разделе **\"Добавление вкладки в личное приложение\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Изображение с подробными сведениями о вкладке &quot;Hello&quot;\":::\n\n    Введите следующие сведения:\n    - **Имя**: вкладка \"Привет\".\n    - **URL-адрес** **содержимого и URL-адрес** веб-сайта: адрес пересылки в сеансе консоли ngrok.\n    - **Контекст**: выберите **вкладку \"Личные\"**.\n\n1. Нажмите кнопку **Обновить**.\n\n    Сведения на вкладке \"Привет\" отображаются на панели **личных** приложений.\n\n1. Нажмите кнопку **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Изображение, на котором показаны сведения о вкладке Hello для сохранения\":::\n\n    На **панели личных** приложений теперь отображаются новая вкладка и автоматически созданная вкладка \"О программе\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Изображение: вкладка &quot;Hello&quot; и сведения о вкладке &quot;О программе&quot;\":::\n\n#### <a name=\"configure-bot\"></a>Настройка бота\n\nВы можете легко добавить в приложение функциональные возможности ботов. В Hello World примере приложения уже есть бот, но его необходимо зарегистрировать в Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Изображение, показывающее приложение бота, импортируемого без идентификатора приложения\":::\n\nУ бота, импортированного из примера, нет связанного идентификатора приложения. Вам потребуется удалить его и создать новый бот. Портал разработчика создает новый идентификатор приложения и регистрирует его в Teams.\n\nДобавление и настройка бота включает в себя:\n\n1. [Добавление нового бота](#to-add-a-new-bot).\n1. [Добавление бота в приложение](#to-add-bot-to-app).\n1. [Настройка области бота](#to-configure-bot-scope).\n\n##### <a name=\"to-add-a-new-bot\"></a>Добавление нового бота\n\n1. Выберите значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: на **карточке бота** **на панели** функций приложения и нажмите кнопку **\"Удалить\"**.\n\n1. Выберите **\"Сервис** \", чтобы добавить возможность.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Изображение с параметром &quot;Сервис&quot;\":::\n\n1. Выберите **\"Управление ботом****\" на панели** \"Сервис\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Изображение области управления ботом\":::\n\n1. Выберите **\"+ Создать бота****\" на** панели управления ботом.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Изображение: новый параметр бота\":::\n\n1. Введите подходящее имя для бота и нажмите кнопку **\"Добавить\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Изображение, показывающее, как добавить бота\":::\n\n    На **панели \"** Настройка\" отображаются сведения о новом боте в левой области.\n\n1. Введите URL-адрес переадресации из `ngrok` консоли и нажмите кнопку **\"Сохранить\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Изображение, показывающее, как добавить конечную точку бота\":::\n\n1. Выберите **секреты клиента**, а затем выберите \"Добавить секрет клиента в **бот\"** , чтобы создать пароль для бота.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Изображение, показывающее раздел секрета клиента\":::\n\n    Портал разработчика создает пароль для бота.\n\n    Для копирования пароля :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: можно использовать значок. В этом руководстве нет необходимости копировать его.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Изображение, показывающее созданный секрет клиента\":::\n\n1. Нажмите кнопку **ОК**.\n\n1. Выберите **< ботов** , чтобы **вернуться в область** управления ботом.\n\n    В **области управления** ботом отображается новый бот, добавленный с идентификатором приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Изображение нового бота с идентификатором приложения\":::\n\n1. Убедитесь, что вы сохраните идентификатор бота вместе с паролем из раздела **секрета** клиента.\n\n##### <a name=\"to-add-bot-to-app\"></a>Добавление бота в приложение\n\n1. Откройте панель **функций** приложения и выберите **карточку бота** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Изображение карточки бота\":::\n\n    **Появится панель** бота.\n\n1. Выберите приложение бота из **списка \"Выберите существующий бот**\" и нажмите кнопку **\"Сохранить\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Изображение, показывающее, как выбрать существующее приложение-бот\":::\n\n    Новый бот добавляется в приложение с собственным идентификатором приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Изображение нового бота, добавленного в приложение\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Настройка области бота\n\n1. Выберите значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: на новой **карточке бота** и нажмите кнопку \"Изменить **\"**.\n\n1. Перейдите по **области бота** , **чтобы просмотреть** раздел \"Команды\", и выберите **\"+ Добавить команду\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Изображение раздела &quot;Команды&quot;\":::\n\n1. Введите подходящее имя и описание для **команды**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Изображение, показывающее, как добавить сведения о командах\":::\n\n1. Выберите все три области для команды и нажмите кнопку **\"Добавить\"**.\n    - **Личный**\n    - **Команда**\n    - **Групповой чат**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Изображение, показывающее, как сохранить сведения о командах\":::\n\n    Новая команда добавляется в раздел **\"Команды** \" области **бота** .\n\n1. Нажмите кнопку **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Изображение, показывающее сведения о командах для сохранения\":::\n\n    Сведения о команде сохраняются.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Изображение, на котором показаны сохраненные сведения о командах\":::\n\n1. Откройте **область функций** приложения и выберите \" **Личная** карточка приложения\", чтобы просмотреть сведения о вкладке приложения.\n\n    Вы увидите, что в приложение добавлена вкладка для нового чат-бота.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Изображение с настроенной вкладкой чата\":::\n\n#### <a name=\"configure-message-extension\"></a>Настройка расширения сообщения\n\nРасширения сообщений позволяют пользователям запрашивать сведения из службы и публиковать эти сведения. Информация будет опубликована в виде карточек в беседе канала. Расширения сообщений отображаются в нижней части окна создания.\n\nЧтобы добавить новое расширение сообщения, с помощью\n\n1. Щелкните :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карточке **расширения** сообщений  на панели функций приложения и нажмите кнопку **\"Удалить\"**.\n\n1. Выберите **расширение сообщений** в **области функций** приложения.\n\n1. Выберите имя приложения бота в раскрывающемся списке **\"Выбор существующего** бота\" на панели **расширения \"** Сообщение\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Изображение: область расширения сообщения для выбора бота\":::\n\n1. Нажмите кнопку **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Изображение, на котором показана область расширения сообщения\":::\n\n    Расширение сообщения сохраняется, а раздел **\"** Команды\" отображается на панели **расширения** сообщения.\n\n1. Выберите **\"+ Добавить команду\"** , чтобы определить область действия приложения расширения сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Изображение раздела &quot;Команда&quot;\":::\n\n    **Диалоговое окно \"** Добавление команды\".\n\n1. Убедитесь **, что** в диалоговом окне \"Добавление команды\" выбран тип команды, которую вы **хотите добавить.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Изображение: диалоговое окно &quot;Добавление команды&quot;\":::\n\n1. Введите подходящую информацию для следующих сведений:\n    - Идентификатор команды\n    - Заголовок команды\n    - Описание команды\n\n1. Перейдите в диалоговое окно, чтобы просмотреть остальные сведения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Изображение, показывающее оставшиеся сведения в диалоговом окне &quot;Добавление команды&quot;\":::\n\n1. **Убедитесь, что выбран параметр \"** Сделать по умолчанию\".\n1. Выберите следующие контексты для команды расширения сообщения:\n    - Командное поле\n    - Поле создания\n    - Сообщение\n1. Введите подходящую информацию для следующих сведений:\n    - Имя параметра\n    - Заголовок параметра\n    - Описание параметра\n\n1. Выберите **\"Текст** \" в качестве типа входных данных.\n1. Нажмите кнопку **Сохранить**.\n1. Команда расширения сообщения сохраняется и отображается в списке команд в области **расширения** сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Изображение с добавленной командой\":::\n\n1. Нажмите кнопку **Сохранить**.\n1. Откройте **панель функций** приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Изображение, показывающее возможности, настроенные для Hello World приложения\":::\n\n    Вы увидите все три возможности — личные приложения табуляции, бота и расширения сообщений, настроенные для Hello World приложения.\n"
- title: Предварительный просмотр и тестирование Node.js приложения
  durationInMinutes: 1
  content: "\nПосле импорта приложения и настройки возможностей на портале разработчика можно просмотреть и протестировать пример приложения.\n\n> [!NOTE]\n> В настоящее время внешние разработчики не могут использовать предварительную версию **в Teams** в приложении портала разработчика в Teams. Он недоступен как приложение в Teams из-за ограничения API. Если вы хотите просмотреть приложение в Teams, используйте веб-сайт [портала разработчика](https://dev.teams.microsoft.com/home) .\n\nПосле настройки возможностей приложения вы можете просмотреть и протестировать приложение в Teams в локальной среде.\n\nПредварительный просмотр приложения:\n\n1. Выбор **предварительного просмотра в Teams** на панели инструментов портала разработчика\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Изображение, на котором показана кнопка предварительного просмотра\":::\n\n    Портал разработчика информирует о том, что приложение успешно загружено неопубликованным.\n\n1. Выберите **Управление приложениями**\n   Ваше приложение отображается в неопубликованных приложениях. \n1. Найдите приложение с помощью поля поиска и выберите многоточие в строке.\n1. Выберите параметр **\"** Вид\".\n    **Появится страница** \"Добавить\" для вашего приложения.\n1. Нажмите **кнопку \"** Добавить\", чтобы загрузить приложение в Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Изображение: диалоговое окно &quot;Добавление приложения&quot;\":::\n\n    Теперь ваше приложение доступно в Teams. Вы можете просмотреть все вкладки и протестировать возможности:\n\n    - Вкладка \"Привет\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Изображение, на котором показана вкладка &quot;Hello&quot; в локальной среде\":::\n\n    - Чат-бот:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Изображение бота приложения в локальной среде\":::\n\n        Вы можете отправить сообщение с помощью чата.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Изображение чата в локальной среде\":::\n\n    - Расширение сообщения:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Изображение расширения сообщения в локальной среде\":::\n\n        Поиск можно выполнить с помощью расширения сообщения.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Изображение, показывающее поиск с помощью расширения сообщения в локальной среде\":::\n\n    - Вкладка \"О программе\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Изображение, на котором показана вкладка &quot;О программе&quot; в локальной среде\":::"
