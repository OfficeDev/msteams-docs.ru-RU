### YamlMime:Tutorial
title: Teams вызова и собрания бота
metadata:
  title: Teams бота с вызовом и собранием
  description: В этом руководстве вы узнаете, как настроить вызовы и собрания в боте для Teams.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: Регистрация бота вызовов
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ec7138181ae84cb66950a0d7d8c32a33b8aef12
  ms.sourcegitcommit: b9af51e24c9befcf46945400789e750c34723e56
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 02/15/2022
  ms.locfileid: "62821397"
items:
- durationInMinutes: 1
  content: >
    Бот call and Meeting предоставляет базовые функции, такие как создание вызова, регистрация вызова, передача или перенаправление вызова, участие в запланированном собрании и приглашение участников путем интеграции API облачных Graph API.


    Боты могут взаимодействовать с Teams и собраниями с помощью голосового, видео- и видеосвязи в режиме реального времени. С помощью Graph API майкрософт для звонков и собраний в Интернете Teams приложения теперь могут взаимодействовать с пользователями с помощью голосовых и видеоматериалов для повышения производительности. Эти API позволяют добавлять следующие новые функции:


    * Интерактивный голосовой ответ (IVR)

    * Управление вызовами

    * Доступ к аудио- и видеопотокам в режиме реального времени, включая настольный компьютер и общий доступ к приложениям


    Создайте бот и укажите некоторые дополнительные сведения и разрешения на использование Graph API в Teams приложении.


    Это пошаговая руководство по созданию бота с функциями вызова и собраний. К концу этого руководства вы можете достичь следующего вывода:


    ![Конечный вывод](~/assets/images/calls-and-meetings/final-output.png)
- title: Предварительные условия
  durationInMinutes: 1
  content: "Убедитесь, что вы установите следующие средства и настроите среду разработки:  \n\n* [Office 365 клиента](https://developer.microsoft.com/en-us/microsoft-365/dev-program)\n* [Решение Ngrok](https://ngrok.com/) или эквивалентное туннельное решение\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) версии 3.1\n* Microsoft Teams с учетной записью (а не гостевой учетной записью)\n* Установите [Windows PowerShell](https://docs.microsoft.com/en-us/microsoftteams/teams-powershell-install), исполнив все команды\n"
- title: Настройка вызываемого и собрания бота
  durationInMinutes: 5
  content: "Регистрация приложения с помощью регистрации приложения на портале Microsoft Azure для интеграции приложения с платформа удостоверений Майкрософт и вызов Microsoft Graph. Выполните следующее:\n\n1. Для создания туннеля к конечным точкам веб-сервера используйте ngrok.\n1. Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n1. Создание секрета клиента, который позволяет SSO-проверку подлинности бота.\n1. Создайте политику для пользователя-клиента демонстрации для создания собраний в Интернете с помощью PowerShell.\n1. Добавление разрешений API для вызовов вниз по течению.\n1. Создание регистрации канала бота в учетной записи Azure.\n1. Добавьте Microsoft Teams канал, чтобы развернуть бот в Teams канал.\n1. Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\n**Создание туннеля ngrok:**\n\nИспользуйте ngrok для создания туннеля для общедоступных конечных точек HTTPS локального запуска веб-сервера. Запустите следующую команду в ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Регистрация приложения в Azure:**\n\n1. Вопишитесь на портал [Azure с](https://portal.azure.com/) помощью личной учетной записи Майкрософт.\n1. Выберите **службу Azure Active Directory** и выберите **регистрации приложений** с левой области, а затем выберите **новую регистрацию**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Активный каталог Azure.\":::\n\n1. **Регистрация открываемой** страницы приложения. Введите сведения о регистрации приложения.\n1. Введите **содержательное имя приложения** , отображаемого пользователям приложения.\n1. В **поддерживаемых типах** учетных записей выберите учетные записи, которые необходимо поддерживать приложению.\n1. В **поле Перенаправление URI** (необязательно) выберите тип веб-приложения или общедоступный клиент (мобильный & рабочий стол **)**, а затем введите URI перенаправления для приложения.\n\n    > [!NOTE]\n    > Для веб-приложений предостереть базовый URI как `http://localhost:31544`. Для общедоступных клиентских приложений предоокарите URI, используемый Azure AD для возврата ответов маркеров как `myapp://auth`.\n\n1. Нажмите **Зарегистрировать**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"Регистрация приложения.\":::\n\n**Создание секрета клиента:**\n\n1. На **странице Обзор** бота выберите **Essentials** и сохраните **ID** клиента приложения (Microsoft App ID) для будущей ссылки.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"Microsoft App ID.\":::\n\n1. В **разделе Управление** выберите **раздел Сертификаты &** , а затем выберите секреты **клиента** и выберите **секрет нового клиента**. **Появится окно \"Добавление секрета клиента**\".  \n\n1. **Введите Описание** и выберите **Добавить**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"Добавление секрета клиента.\":::\n\n1. В **столбце Значение** выберите **Копию для буфера обмена** данными и сохраните секретный ИД клиента для будущей ссылки.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"Значение.\":::\n\n**Запустите сценарий PowerShell для создания политики:**\n\n1. Создайте политику для пользователя-клиента демонстрации для создания собраний в Интернете с помощью следующего сценария PowerShell:\n\n    > [!NOTE]\n    > Выполните Windows PowerShell PSI в качестве администратора и выполните сценарий.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"Сценарий PowerShell.\":::\n\n1. `azure-client-id` Замените своим microsoft **App ID** `object-id` бота и iD клиента вашей учетной записи, используемым для входа в Teams (скопируйте ссылку, как показано на следующем изображении, и вы можете найти **ID** клиента вашей учетной записи Teams в полученной ссылке).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams Link.\":::\n\n1. Добавьте `PolicyName`, `azure-client-id`и `policy-description`в `object-id` скрипт PowerShell. Войдите в свою Teams учетную запись при запросе PowerShell.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"PowerShell.\":::\n\n1. Запустите следующую команду в PowerShell, чтобы проверить, успешно ли создана политика. Замените имя политики определенным именем политики.\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**Чтобы добавить разрешения API для вызовов вниз по течению:**\n\n> [!NOTE]\n> Убедитесь, что ваша учетная запись может предоставить согласие администратора для Корпорации Майкрософт. После добавления разрешений выберите `Grant admin consent for Microsoft` , чтобы узнать состояние согласия.\n\n1. В **\"Управление** области бота\" выберите **разрешения API**.\n1. Выберите **Добавить разрешение**. **Отображается окно разрешений API** запроса.\n1. Выберите **API Майкрософт** и выберите **microsoft Graph**.\n1. Выберите **разрешения приложения** и выберите разрешения.\n1. Добавьте следующие Graph API-приложения разрешений в ваше приложение Azure и согласие администратора на предоставление.\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. Выберите **Добавить разрешения**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"Добавление разрешений API.\":::\n\n**Создание регистрации канала бота в учетной записи Azure:**\n\n1. Откройте [портал Azure](https://portal.azure.com/).\n1. Выберите **Создать ресурс**.\n1. Поиск **Azure Bot** в поле поиска.\n1. Выберите **Azure Bot**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Карта бота Azure.\":::\n\n1. Нажмите **Создать**.\n1. Введите имя ручки бота **в поле обработки ботов** .\n1. Выберите **подписку** из списка выпаданий.\n1. Выберите **группу Ресурсов из** списка выпаданий.\n\n    Чтобы создать новую группу ресурсов, выберите **Создание** нового, введите имя ресурса, выберите **ОК и выберите** необходимое расположение из  списка выпаданий расположения группы новых ресурсов.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Создание Azure Bot.\":::\n\n1. Выберите **тип приложения в качестве** **multi tenant** для **Microsoft App ID**.\n\n    > [!NOTE]\n    > В `Creation type` разделе Microsoft App ID `Create new Microsoft App ID` уже выбран для создания нового бота. Вы также можете выбрать `Use existing app registration`, если вы уже зарегистрировали бота. Введите microsoft App ID в `Existing app id` поле и введите значение в `Existing app password` поле.\n\n1. Выберите **Использование существующей регистрации приложений** и введите **секрет App ID** и **App** вашего приложения azure, зарегистрированного в клиенте демонстрации.\n1. Выберите **Проверить и создать**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"Multi tenant.\":::\n\n1. Если проверка пройдет, выберите **Создать**.\n\n   Подготовка службы бота занимает несколько минут.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"Проверка.\":::\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы перечислены в группе ресурсов.\n\n    Теперь создан бот Azure.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"Перейти к ресурсу.\":::\n\n**Чтобы добавить Microsoft Teams канал:**\n\n1. Перейдите к **дому**.\n1. Откройте бот, который указан в разделе **Последние ресурсы** .\n1. Выберите **каналы в** левой области и выберите **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> из списка доступных каналов.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"Каналы Teams.\":::\n\n1. Выберите почтовый ящик, чтобы принять условия службы и выбрать **Согласование**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"Условия обслуживания.\":::\n\n1. Нажмите кнопку **Сохранить**.\n1. Выберите **Microsoft Teams** и выберите **вкладку Вызов** на Teams странице канала.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Настройка Teams.\":::\n\n1. Выберите **включить вызов**, а затем обновите **веб-страницу** с URL-адресом https ngrok (https://yourNgrok/api/callback) и добавьте `/api/callback` в конце).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"Включить вызов.\":::\n\n1. Нажмите кнопку **Сохранить**.\n\n**Добавление конечной точки обмена сообщениями:**\n\n1. Перейдите **на страницу Главная** бота и  выберите конфигурацию **Параметры с левой** области.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io), как показано на следующем изображении:\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. В **конечной точке** обмена сообщениями добавьте URL-адрес HTTPS, доступный в ngrok, а в конце **URL-адреса добавьте /api/messages**.\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"Конечная точка обмена сообщениями.\":::\n\n1. Нажмите **Применить**.\n\n    Вы успешно создали бот в службе Azure Bot Service, и теперь необходимо настроить подключение к службе ботов.\n"
- title: Обновление и создание Teams пакета приложений
  durationInMinutes: 1
  content: "Настройте образец бота, чтобы понять, как проверить подлинность разговорного бота в Microsoft Teams и создать пакет Teams и загрузить его в организацию.\n\n1. Обновление appsettings.json в Visual Studio.\n1. Обновление manifest.json в Visual Studio и сжатие его с почтовым файлом в проводнике файлов.\n\n**Обновление appsettings для вызова Bot:**\n\n1. Перейдите к репо https://github.com/OfficeDev/Microsoft-Teams-Samples.git.\n1. Выберите **Код** и выберите отсев.\n1. Выберите **почтовый индекс загрузки**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"Скачивание репо.\":::\n\n1. Обратите внимание на путь скачаемого репозитория.\n1. В **проводнике файлов** **перейдите в папку Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharp** >  >  > .\n1. Откройте **файл appsettings.json** в Visual Studio и обновить конфигурацию для бота.\n\n    * Вы можете получить страницу `MicrosoftAppId` конфигурации бота. Это `MicrosoftAppPassword` ИД секрета клиента, сохраненный ранее.\n    * Вы можете получить ссылку `Tenant ID` или `UserId` ссылку учетной записи, используемой для входа в Teams. Следуйте пути на изображении, чтобы получить ссылку для `tenant id`.\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams Link.\":::\n    \n    * Вы можете получить веб-сайт `DisplayName` `UserId` [Microsoft Graph Explorer](https://developer.microsoft.com/en-us/graph/graph-explorer).\n        * Войдите на страницу с помощью Teams `Users` учетной записи и добавьте в конце URl в поле поиска и выберите **запрос Run**.\n        * Отображаются имена и пользовательские ИД, связанные с вашей учетной записью.\n        * Выберите все три учетные записи `DisplayName` `UserId` и добавьте их в appsettings.json.\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph Explorer.\":::\n\n    > [!NOTE]\n    > `Tenant ID`или `UserId` учетная запись Teams, откуда необходимо инициировать вызов, `DisplayName` `UserId` а также пользователей, которым необходимо перенаправить или передать вызов.\n\n1. Замените `MicrosoftAppId`, `ClientId`с `AppId` **вашим приложением (клиент) ID** и `MicrosoftAppPassword`, и `AppSecret` `ClientSecret`с вашим **значением**.\n1. Обновление `BotBaseUrl` с URL-адресом `ngrok` .\n1. Обновление `Tenant ID` и `UserId`.\n1. Обновление `DisplayName` и `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n1. Нажмите кнопку **Сохранить**.\n\n**Чтобы обновить манифест:**\n\n1. В **проводнике файлов** **перейдите в папку Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharpManifest** > . >  >  > \n1. Откройте **файл manifest.json** в Visual Studio.\n1. В **файле manifest.json** найдите **{id}, {BotId}** и добавьте свой microsoft App ID.\n1. Добавьте URL-адрес ngrok в **validDomains** , https:// сохранить.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"Манифест.\":::\n\n1. Zip содержимое папки **Манифест** для создания **manifest.zip**.\n\n    > [!NOTE]\n    > Дополнительные `manifest.zip` папки в нем не должны содержаться. Он должен иметь исходный `manifest json` файл, `color` значок и `outline` значок в папке zip.\n    > Upload манифест в клиенте демонстрации для организации или Teams учетной записи и запустите решение в Visual Studio.\n\n1. Перейдите в Teams.\n1. Чтобы загрузить **manifest.zip**, выберите **Store > Управление** приложениями > Upload настраиваемого приложения и **откройте** manifest.zipиз папки репо в проводнике файлов.\n1. Выберите **Добавить для** установки вызываемого бота в Teams.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"Добавление вывода.\":::\n\n    Вы можете взаимодействовать с этим ботом после отладки в Visual Studio.\n"
- title: Взаимодействие с ботом вызовов и собраний
  durationInMinutes: 2
  content: >
    Бот позволяет получать доступ к службам и контенту в выделенном пространстве в канале или в чате.


    Выполните действия по использованию бота:


    1. В левой области Teams выберите эллипсы ●●● и выберите приложение из списка.

    1. Бот отправит приветственный текст с адаптивной картой, как показано ниже.

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="Адаптивная карта в боте.":::

    1. Вы можете попросить бота создать вызов.

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="Помещенный вызов.":::

    1. Вы можете попросить бота перенести вызов.

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="Вызов переноса.":::

    1. Вы можете попросить бота запланировать собрание и пригласить участников.

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="Собрание бота.":::
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?


    ![Конечный вывод](~/assets/images/calls-and-meetings/final-output.png)
- content: Вы завершили руководство по началу работы с бот-вызовом и приложением для собраний для Microsoft Teams.
