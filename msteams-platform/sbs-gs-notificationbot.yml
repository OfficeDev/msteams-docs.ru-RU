### YamlMime:Tutorial
title: Создание бота уведомлений с помощью JavaScript
metadata:
  title: Создание бота уведомлений с помощью JavaScript
  description: В этом руководстве вы узнаете, как отправлять уведомления с помощью JavaScript, создав бот для уведомлений с помощью набора средств Teams.
  audience: Developer
  level: Beginner
  ms.date: 05/04/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Вернуться к добавлению возможности
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: dc4d10468dee480e3ef231fe999ec5012f51a7b6
  ms.sourcegitcommit: 10debe0f01574a21aab54bfac692a4c8373263a8
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 10/31/2022
  ms.locfileid: "68790004"
items:
- durationInMinutes: 1
  content: >
    Бот уведомлений заблаговременно отправляет сообщения в канале Teams, групповом чате или личном чате. Вы можете активировать бот уведомлений с помощью HTTP-запроса, например карточек или текстовых сообщений.


    В этом руководстве вы узнаете:


    - Создание бота уведомлений с помощью Набора средств Teams.

    - Сведения о структуре каталогов приложения.

    - Отправка нескольких уведомлений.


    Это пошаговое руководство поможет вам создать бот для уведомлений с помощью набора средств Teams. Вы увидите следующие выходные данные:

      :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Выходные данные триггера"border="true":::
- title: Предварительные требования
  durationInMinutes: 1
  content: "\nНиже приведен список средств, необходимых для создания и развертывания приложений.\n\n| &nbsp; | Установка | Для использования |\n| --- | --- | --- |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Среды сборки JavaScript или TypeScript. Используйте последнюю версию. |\n| &nbsp; | [Набор средств Teams](#install-the-teams-toolkit) | Расширение Microsoft Visual Studio Code, которое создает шаблон проекта для вашего приложения. Используйте версию 4.0.0. |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Серверной среды выполнения JavaScript. Используйте версию 14 или 16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams для совместной работы со всеми пользователями с помощью приложений для чата, собраний, звонков и всех в одном месте.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузера со средствами разработчика. |\n| &nbsp; | [Microsoft 365](https://developer.microsoft.com/en-us/microsoft-365/dev-program) | Доступ к учетной записи Teams с соответствующими разрешениями для установки приложения. |\n\n> [!NOTE]\n> Руководство протестировано в Teams Toolkit версии 4.0.0 и Nodejs версии 14 и 16. Действия, описанные в этом руководстве, могут работать с другими версиями, но не были протестированы.\n\n## <a name=\"prepare-development-environment\"></a>Подготовка среды разработки\n\nПосле установки необходимых средств настройте среду разработки.\n\n### <a name=\"install-the-teams-toolkit\"></a>Установка набора средств Teams\n\nНабор средств Teams помогает упростить процесс разработки с помощью инструментов для подготовки и развертывания облачных ресурсов для приложения, публикации в магазине Teams и многого другого. \n \nВы можете использовать набор средств с Visual Studio Code или CLI (интерфейс командной строки), который называется `TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Откройте Visual Studio Code и выберите **Расширения** (**CTRL+SHIFT+X️** / **⇧-X** или **Просмотреть расширения >**).\n1. В поле поиска введите **Набор средств Teams**.\n1. Выберите **Установить** рядом с набором средств Teams.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/teams-toolkit.png\" alt-text=\"На рисунке показана установка расширения Teams Toolkit.\":::\n\n После установки на боковой панели Visual Studio Code появится значок Набора средств Teams.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Иллюстрация: значок набора средств Teams на Visual Studio Code боковой панели.\":::\n\nНабор средств Teams также можно найти в [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nЧтобы установить Интерфейс командной строки TeamsFx, используйте `npm` диспетчер пакетов:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nВ зависимости от конфигурации может потребоваться использовать `sudo` для установки интерфейса командной строки:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nЭто чаще встречается в системах Linux и macOS.\n\nУбедитесь, что вы добавили глобальный кэш npm в PATH. Этот шаг обычно выполняется в рамках установщика Node.js.  \n\nС командой можно использовать cli `teamsfx` . Проверьте работу команды, выполнив команду `teamsfx -h`.\n\n> [!NOTE]\n> Перед запуском TeamsFx в терминалах PowerShell убедитесь, что вы включили политику **удаленного подписанного** выполнения для PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента разработки Teams\n\n**Клиент** похож на пространство или контейнер, в котором вы общаетесь, обмениваются файлами и выполняете собрания для своей организации в Teams. Вы также можете загрузить и протестировать неопубликованное приложение.\n\n### <a name=\"check-for-sideloading-option\"></a>Проверка параметра загрузки неопубликованных приложений\n\nПосле создания приложения необходимо загрузить это приложение в Teams, не распространяя его. Это называется загрузкой неопубликованных приложений. Войдите в учетную запись Microsoft 365, чтобы просмотреть этот параметр.\n\n > [!NOTE]\n > Загрузка неопубликованных приложений необходима для предварительного просмотра и тестирования приложений в локальной среде Teams. Включите загрузку неопубликованных приложений для предварительного просмотра и тестирования приложения в Teams локально.\n\nУ вас уже есть клиент и есть ли у вас доступ администратора? Давайте проверим, действительно ли вы делаете!\n\nЧтобы проверить загрузку неопубликованных приложений в Teams, выполните приведенные далее действия.\n\n 1. В клиенте Teams выберите **Магазин**.\n 1. Выберите **Управление приложениями**\n 1. Выберите **Отправить приложение**.\n 1. Найдите параметр **Отправить настраиваемое приложение**. Если параметр отображается, загрузка неопубликованных приложений включена.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показан параметр для отправки пользовательского приложения в Teams.\":::\n\n     > [!NOTE]\n     > Если вы не видите параметр для отправки пользовательского приложения, обратитесь к администратору Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Создание бесплатного клиента разработчика Teams (необязательно)\n\nЕсли у вас нет учетной записи разработчика Teams, ее можно получить бесплатно. Присоединяйтесь к программе для разработчиков Microsoft 365!\n\n1. Перейдите в [программу для разработчиков Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Выберите **Присоединиться** и следуйте инструкциям на экране.\n1. Выберите **Настроить подписку E5** на экране приветствия.\n1. Настройка учетной записи администратора. После завершения отобразится следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Корпорация Майкрософт\":::\n\n1. Войдите в Teams с помощью новой учетной записи администратора. Теперь у вас должен быть параметр **Отправить пользовательское приложение** .\n"
- title: Создание бота уведомлений
  durationInMinutes: 1
  content: "**Создание бота уведомлений с помощью Visual Studio Code**\n\n 1. Откройте Visual Studio Code.\n \n 1. Выберите значок Набор инструментов Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели Visual Studio Code.\n\n 1. Выберите **Создать приложение Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-teams-app.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\":::.\n\n 1. Выберите **Пункт Создать приложение Teams** , чтобы создать приложение с помощью набора средств Teams.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"Запускается мастер для создания нового проекта\":::\n\n 1. Убедитесь, что в качестве возможности, которую вы хотите создать в приложении, выбран **бот уведомлений** . \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-notification-bot.png\" alt-text=\"Выбор возможности приложения\":::\n\n 1. Выберите **Http Trigger Restify Server** в качестве триггера. \n 1. Нажмите кнопку **ОК**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-trigger.png\" alt-text=\"Снимок экрана: выбор языка.\":::  \n\n 1. Выберите **JavaScript** в качестве языка.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-script.png\" alt-text=\"Снимок экрана: выбор языка.\":::    \n\n 1. Выберите **Папка по умолчанию** , чтобы сохранить корневую папку проекта в расположении по умолчанию.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-default-location.png\" alt-text=\"Выбор расположения по умолчанию\":::\n \n    Вы также можете изменить расположение по умолчанию, выполнив следующие действия.\n\n     1. Нажмите кнопку **Обзор**.\n\n         :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-browse.png\" alt-text=\"Выбор расположения обзора\":::\n         \n     1. Выберите расположение рабочей области проекта.\n\n     1. Выберите **выбрать папку**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-folder.png\" alt-text=\"Выбор папки\":::\n \n 1. Введите подходящее имя приложения, например mynotificationbot в качестве имени приложения. \n 1. Выберите **ВВОД**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/type-notfication-name.png\" alt-text=\"Снимок экрана: где ввести имя приложения.\":::\n\n    > [!NOTE]\n    > Убедитесь, что в имени приложения используются только буквенно-цифровые символы.\n\n 1. По умолчанию проект открывается в новом окне в течение 10 секунд. Если вы хотите открыть в текущем окне, выберите **Открыть в текущем окне**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/new-window-notification.png\" alt-text=\"Уведомление о новом окне\":::\n\n     Приложение бота уведомлений будет создано через несколько секунд.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-bot.png\" alt-text=\"Снимок экрана: созданное приложение.\":::\n\n 1. Выберите значок **Запуск и отладка** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: на боковой панели Visual Studio Code.\n\n 1. Выберите **Отладка(Edge)** или **Отладка(Chrome)** в раскрывающемся списке.\n\n 1. Нажмите кнопку **Начать отладку** .\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Отладка приложений\"border=\"true\"::: \n\n 1. Нажмите **Добавить**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-output.png\" alt-text=\"Мои выходные данные уведомления1\"border=\"true\":::\n\n 1. Откройте **Windows PowerShell**.\n\n 1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Триггер PowerShell\"border=\"true\":::   \n\n     В Teams вы получите следующие выходные данные:\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png\" alt-text=\"Выходные данные триггера\"border=\"true\":::\n\n ## <a name=\"take-tour-of-source-code\"></a>Обзор исходного кода\n\n Набор средств Teams предоставляет компоненты для создания приложения. После создания проекта можно просмотреть папки и файлы проекта в области **проводника** Visual Studio Code.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/folder-structure1.png\" alt-text=\"Вкладка structure\":::\n\n Если вы решили использовать платформу пользовательского интерфейса, следующий пример кода шаблона предоставляет шаблон с React компонентами.\n\n Папка нового проекта содержит следующее содержимое:\n\n | Имя папки | Содержание |\n | --- | --- |\n | `.fx` | Параметры уровня проекта, конфигурация и сведения о среде |\n | `.vscode` | Файлы кода VS для локальной отладки |\n | `bot` | Исходный код бота |\n | `templates` | Шаблоны манифеста приложения Teams и соответствующие ресурсы Azure |\n \n  Базовая реализация уведомлений в папке **бота** и содержит:\n\n | Имя файла | Содержание |\n | --- | --- |\n | `src/adaptiveCards/` | Шаблоны для адаптивной карточки  |\n | `src/internal/` | Созданный код инициализации для функций уведомлений |\n | `src/index.*s` | Точка входа для обработки сообщений бота и отправки уведомлений |\n | `.gitignore` | Файл для исключения локальных файлов из проекта бота |\n | `package.json` | Файл пакета npm для проекта бота |\n"
- title: Отправка уведомления на канал Teams
  durationInMinutes: 1
  content: "**Отправка уведомлений на канал Teams**\n\n1. В Visual Studio Code в разделе **ОБОЗРЕВАТЕЛЬ** выберите **MYNOTIFICATIONBOT> бот> src> index.js**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/file-path.png\" alt-text=\"Путь к файлу\":::\n\n   Вы увидите следующую страницу:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/default-program.png\" alt-text=\"Программа по умолчанию\":::\n\n1. Используйте следующий код после `for (const target of await bot.notification.installations()) { ` в Visual Studio Code.\n\n     ```bash\n     if (target.type === \"Channel\") {\n       const members = await target.members();\n       await target.sendMessage(\"This is a message to channel: \" + members.length + \" members.\");\n       for (const member of members) {\n         await member.sendMessage(\"This is a message to Member: \" + member.account.email);\n       }\n     }\n     /* \n     ```  \n\n      :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/code-add.png\" alt-text=\"Добавление кода\":::\n\n    **Чтобы настроить хранилище, выполните приведенные далее действия.**\n\n    1. В Visual Studio Code в разделе **Обозреватель** выберите **MYNOTIFICATIONBOT> бот> src> внутренней> initialize.js**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/initialize-storage.png\" alt-text=\"Инициализация хранилища\":::\n    \n       Вы увидите следующую страницу:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/storage-code.png\" alt-text=\"Код хранилища\":::\n\n    1. Обновите следующий код в **файлеinitialize.js** , чтобы настроить хранилище.\n\n         ```bash\n         const myStorage = new MyStorage(...);\n\n         // initialize ConversationBot with notification enabled and customized storage\n         const bot = new ConversationBot({\n             // The bot id and password to create BotFrameworkAdapter.\n             // See https://aka.ms/about-bot-adapter to learn more about adapters.\n             adapterConfig: {\n                 appId: process.env.BOT_ID,\n                 appPassword: process.env.BOT_PASSWORD,\n             },\n             // Enable notification\n             notification: {\n                 enabled: true,\n                 storage: myStorage,\n             },\n          });\n         ```  \n    1. Используйте собственное расположение хранилища вместо **MyStorage**.\n\n        > [!NOTE]\n        > Необходимо использовать собственное хранилище для рабочей среды. Если хранилище не предоставлено, считается локальным хранилищем файлов по умолчанию.\n\n1. Выберите значок **Запуск и отладка** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: на боковой панели Visual Studio Code.\n\n1. Выберите **Отладка(Edge)** или **Отладка(Chrome)** в раскрывающемся списке.\n\n1. Нажмите кнопку **Начать отладку** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Отладка приложений\":::\n\n    Вы получите следующие выходные данные в Teams.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation.png\" alt-text=\"Установка приложения\":::\n\n1. Выберите **Добавить в команду в раскрывающемся** списке.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation1.png\" alt-text=\"Мои выходные данные уведомления1\":::\n\n1. В **поле поиска** добавьте любой **канал**.\n1. Выберите **Настройка бота**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/setup-bot.png\" alt-text=\"Настройка бота\":::\n\n   Появится следующий экран:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-notification.png\" alt-text=\"Уведомление Channe1\":::\n\n1. Откройте **Windows PowerShell**.\n\n1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Триггер PowerShell\"border=\"true\":::   \n\n   Вы получите уведомление в канале Teams:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-output.png\" alt-text=\"Выходные данные канала\":::\n\n   Вы получите уведомление в личном чате:         \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/member-output.png\" alt-text=\"member-output\":::\n"
- title: Развертывание первого приложения Teams
  durationInMinutes: 1
  content: "\nВы научились создавать и запускать приложение Teams с возможностью бота уведомлений. Последний шаг — развертывание приложения в Azure.\n\nДавайте развернем первое приложение с возможностью бота уведомлений в Azure с помощью набора средств Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Вход в учетную запись Azure\n\nИспользуйте свою учетную запись для доступа к портал Azure Майкрософт и подготовки новых облачных ресурсов для поддержки приложения.\n\n1. Откройте Visual Studio Code.\n1. Откройте папку проекта, в которой вы создали приложение бота уведомлений.\n1. Щелкните значок Набора средств  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams на боковой панели.\n1. Выберите **Войти в Azure**.\n\n    > [!TIP]\n    > Если у вас установлено расширение учетной записи Azure и вы используете ту же учетную запись, этот шаг можно пропустить.\n\n    Откроется веб-браузер по умолчанию, чтобы позволить вам войти в учетную запись.\n1. Войдите в учетную запись Azure, используя свои учетные данные.\n1. Закройте браузер при появлении запроса и вернитесь к Visual Studio Code.\n\n    В разделе **ACCOUNTS** боковой панели отображаются две учетные записи по отдельности. В нем также отображается количество доступных для использования подписок Azure. \n    \n    > [!NOTE]\n    > Убедитесь, что у вас есть по крайней мере одна доступная подписка Azure.\n\n    Теперь вы готовы к развертыванию приложения в Azure!\n\n## <a name=\"deploy-your-app-to-azure\"></a>Развертывание приложения в Azure\n\n  В разделе **РАЗВЕРТЫВАНИЕ** можно подготовить необходимые облачные ресурсы, и код приложения копируется в созданные облачные ресурсы.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Выберите значок Набор инструментов Teams:::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели Visual Studio Code.\n\n1. Выберите **Подготовка в облаке в** разделе **РАЗВЕРТЫВАНИЕ**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-cloud.png\" alt-text=\"Снимок экрана: команды подготовки\":::\n\n1. Выберите существующую группу ресурсов или создайте новую группу ресурсов. Дополнительные сведения см. в разделе [Создание группы ресурсов](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups).\n\n1. Выберите любого пользователя из существующей подписки.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/select-subscription.png\" alt-text=\"Снимок экрана: выбор существующей подписки.\":::\n\n1. Выберите существующую или создайте новую группу ресурсов.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/subscription-cloud.png\" alt-text=\"Снимок экрана: ресурсы для подготовки.\":::\n\n   > [!NOTE]\n   > Появится диалоговое окно с указанием того, что при выполнении ресурсов в Azure могут возникнуть затраты.\n\n1. Выберите **Подготовка**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-confirm1.png\" alt-text=\"Снимок экрана: диалоговое окно подготовки.\":::\n\n   Процесс подготовки создает ресурсы в облаке Azure. Ход выполнения можно отслеживать, наблюдая за диалогами в правом нижнем углу.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-provision-success.png\" alt-text=\"Снимок экрана: диалоговое окно завершения подготовки.\":::\n\n     Вы увидите параметр для просмотра подготовленных ресурсов. В этом руководстве вам не нужно просматривать ресурсы.\n\n1. После завершения **подготовки выберите Развернуть в облаке** в разделе **РАЗВЕРТЫВАНИЕ** .\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-cloud.png\" alt-text=\"Снимок экрана: выбор места развертывания в облаке.\":::\n\n1. Нажмите **Развернуть**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/Deploy-confirm.png\" alt-text=\"Развертывание для подтверждения.\":::\n\n   Развертывание занимает некоторое время. Ход выполнения можно отслеживать в диалоговых окнах в правом нижнем углу.\n    \n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-confirmation-cloud.png\" alt-text=\"Подтверждение развертывания.\":::\n\n1. Выберите **Локальная отладка** в разделе **СРЕДА** из Visual Studio Code.\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/local-debug.png\" alt-text=\"Локальная отладка.\":::\n\n1. Выберите **Отладка Edge** в раскрывающемся списке.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/debug-cloud.png\" alt-text=\"Локальная отладка.\":::\n\n1. Нажмите **Добавить**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/app-cloud-output.png\" alt-text=\"Выходные данные облака приложения.\":::\n\n1. Откройте **Windows PowerShell**.\n\n1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/windows-powershell1.png\" alt-text=\"Windows Powershell\":::\n\n    Вы получите уведомление в Teams:\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/cloud-final-output.png\" alt-text=\"Окончательные выходные данные облака\":::\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nВ окне терминала:\n\n1. Выполните команду `teamsfx new` , чтобы создать новый проект.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Выполните команду `teamsfx provision` , чтобы создать ресурс Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Запустите `teamsfx deploy` , чтобы развернуть приложение.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Запустите `teamsfx preview` , чтобы запустить приложение.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Выполнение задачи
  durationInMinutes: 1
  content: >
    Ты придумала что-то вроде этого?

     :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Выходные данные триггера"border="true":::
- content: Вы завершили руководство по созданию бота уведомлений!
