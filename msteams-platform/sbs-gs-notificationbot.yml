### YamlMime:Tutorial
title: Создание бота уведомлений с помощью JavaScript
metadata:
  title: Создание бота уведомлений с помощью JavaScript
  description: В этом руководстве описано, как отправлять уведомления с помощью JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 05/04/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Вернуться к возможности "Добавить"
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1b8f34e0106abb6e96fff01b91cb6670af034d87
  ms.sourcegitcommit: 80edf3c964bb47a2ee13f9eda4334ad19e21f331
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/24/2022
  ms.locfileid: "65655513"
items:
- durationInMinutes: 1
  content: >
    Бот уведомлений заблаговременно отправляет сообщения в Teams канале, групповом чате или личном чате. Бот уведомлений можно активировать с помощью HTTP-запроса, например карточек или текстовых сообщений.


    В этом руководстве вы узнаете:


    - Создание бота уведомлений с помощью Teams Toolkit

    - Сведения о структуре каталогов приложения

    - Отправка нескольких уведомлений


    Это пошаговое руководство поможет вам создать бот уведомлений с помощью Teams Toolkit. Вы увидите следующие выходные данные:

      :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Выходные данные триггера"border="true":::
- title: Предварительные требования
  durationInMinutes: 1
  content: "\nНиже приведен список средств, необходимых для создания и развертывания приложений.\n\n| &nbsp; | Установка | Для использования |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Набор средств Teams](#install-the-teams-toolkit) | Расширение Microsoft Visual Studio Code, которое создает шаблон проекта для вашего приложения. Используйте версию 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams для совместной работы со всеми пользователями, с которыми вы работаете, используя приложения для чата, собрания, звонка и всех в одном месте.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Серверной среды выполнения JavaScript. Используйте версию 14 или 16.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузера со средствами разработчика. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download); | JavaScript или TypeScript, сборка сред. Используйте последнюю версию. |\n| &nbsp; | [Microsoft 365](https://developer.microsoft.com/en-us/microsoft-365/dev-program) | Доступ к Teams учетной записи с соответствующими разрешениями для установки приложения. |\n\n> [!NOTE]\n> Это руководство тестируются на Teams Toolkit версий 4.0.0 и Nodejs версий 14 и 16. Действия, описанные в этом руководстве, могут работать с другими версиями, но не были протестированные.\n\n## <a name=\"prepare-development-environment\"></a>Подготовка среды разработки\n\nПосле установки необходимых средств настроите среду разработки.\n\n### <a name=\"install-the-teams-toolkit\"></a>Установка Teams Toolkit\n\nНабор Teams помогает упростить процесс разработки с помощью средств для подготовки и развертывания облачных ресурсов для приложения, публикации в хранилище Teams и т. д. \n \nНабор средств можно использовать с Visual Studio Code интерфейсом командной строки или интерфейсом командной строки`TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Откройте Visual Studio Code и выберите **\"** Расширения\" (**CTRL+SHIFT+X** / **⌘⇧-X** или > **view**).\n1. В поле поиска введите **Teams Toolkit**.\n1. Выберите **\"Установить**\" рядом с Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/teams-toolkit.png\" alt-text=\"Иллюстрация установки Teams Toolkit.\" border=\"true\":::\n\n Значок Teams Toolkit отображается на Visual Studio Code боковой панели после установки.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Иллюстрация: значок Teams Toolkit на Visual Studio Code боковой панели.\" border=\"true\":::\n\nНабор средств Teams также можно найти [на Visual Studio Code Marketplace.](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension)\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nЧтобы установить CLI TeamsFx, используйте диспетчер `npm` пакетов:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nВ зависимости от конфигурации может `sudo` потребоваться установить интерфейс командной строки:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nОна чаще используется в Linux и macOS системах.\n\nУбедитесь, что вы npm глобальный кэш в PATH. Этот шаг обычно выполняется как часть Node.js установщика.  \n\nС командой можно использовать интерфейс командной строки `teamsfx` . Проверьте, работает ли команда, выполнив команду `teamsfx -h`.\n\n> [!NOTE]\n> Перед запуском TeamsFx в терминалах PowerShell убедитесь, что включена политика **удаленного** подписанного выполнения для PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента Teams разработки\n\nКлиент **—** это пространство или контейнер, в котором вы беседируете, делитесь файлами и выполняете собрания для своей организации в Teams. Вы также можете загрузить неопубликованный файл и протестировать приложение.\n\n### <a name=\"check-for-sideloading-option\"></a>Проверка параметра загрузки неопубликованных приложений\n\nПосле создания приложения необходимо загрузить приложение в Teams, не нарушая его. Это называется загрузкой неопубликованных приложений. Войдите в учетную запись Microsoft 365, чтобы просмотреть этот параметр.\n\n > [!NOTE]\n > Загрузка неопубликованных приложений необходима для предварительного просмотра и тестирования приложений в Teams локальной среде. Включите загрузку неопубликованных приложений для предварительного просмотра и тестирования приложения Teams локально.\n\nУ вас уже есть клиент и у вас есть доступ администратора? Давайте посмотрим, действительно ли вы работаете!\n\nЧтобы проверить загрузку неопубликованных приложений в Teams:\n\n 1. В Teams **выберите Store.**\n 1. Выберите **Управление приложениями**\n 1. Выберите **Опубликовать приложение**.\n 1. Найдите параметр для **отправки пользовательского приложения**. Если вы видите этот параметр, загрузка неопубликованных приложений включена.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показан параметр для отправки пользовательского приложения в Teams.\":::\n\n     > [!NOTE]\n     > Обратитесь Teams администратора, если у вас нет возможности отправить пользовательское приложение.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Создание бесплатного клиента Teams разработчика (необязательно)\n\nЕсли у вас нет учетной записи Teams разработчика, ее можно получить бесплатно. Присоединяйтесь к Microsoft 365 разработчика!\n\n1. Перейдите в [программу для разработчиков Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Нажмите **кнопку \"Присоединиться сейчас** \" и следуйте инструкциям на экране.\n1. Выберите **\"Настроить подписку E5** \" на экране приветствия.\n1. Настройка учетной записи администратора. После завершения отобразится следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Корпорация Майкрософт\" border=\"true\":::\n\n1. Войдите в Teams с помощью новой учетной записи администратора. Теперь у вас должен быть параметр **\"Отправить пользовательское приложение** \".\n"
- title: Создание бота уведомлений
  durationInMinutes: 1
  content: "**Создание бота уведомлений с помощью Visual Studio Code**\n\n 1. Откройте Visual Studio Code.\n \n 1. Выберите значок Набор инструментов Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели Visual Studio Code.\n\n 1. Выберите **Создать приложение Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-teams-app.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\" border=\"true\":::.\n\n 1. Выберите **\"Создать новое Teams приложение**\", чтобы создать приложение с помощью Teams Toolkit.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"Мастер начинает создание нового проекта\" border=\"true\":::\n\n 1. Убедитесь **, что бот** уведомлений выбран в качестве возможности, которую вы хотите создать в приложении. \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-notification-bot.png\" alt-text=\"Выбор возможности приложения\" border=\"true\":::\n\n 1. Выберите **сервер Restify триггера HTTP в** качестве триггера. \n 1. Нажмите кнопку **ОК**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-trigger.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"true\":::  \n\n 1. Выберите **JavaScript** в качестве языка.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-script.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"true\":::    \n\n 1. Выберите расположение для рабочей области проекта.\n 1. Выберите **\"Выбрать папку\"**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-folder.png\" alt-text=\"Выбор папки\" border=\"true\":::\n \n 1. Введите подходящее имя приложения, например mynotificationbot в качестве имени приложения. \n 1. Выберите **ВВОД**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/type-notfication-name.png\" alt-text=\"Снимок экрана, показывающий, где ввести имя приложения.\" border=\"true\":::\n\n    > [!NOTE]\n    > Убедитесь, что в имени приложения используются только буквенно-цифровые символы.\n\n     Приложение бота уведомлений создается через несколько секунд.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-bot.png\" alt-text=\"Снимок экрана: созданное приложение.\" border=\"true\":::\n\n 1. Выберите **значок \"Выполнить и отладка**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\":::\" на Visual Studio Code боковой панели.\n\n 1. В **раскрывающемся списке выберите Debug(Edge)** или **Debug(Chrome** ).\n\n 1. Нажмите **кнопку \"Начать отладку** \".\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Отладка приложений\"border=\"true\"::: \n\n 1. Выберите **Добавить**. \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-output.png\" alt-text=\"Вывод уведомления1\"border=\"true\":::\n\n 1. Откройте **Windows PowerShell**.\n\n 1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Триггер PowerShell\"border=\"true\":::   \n\n     Вы получите следующие выходные данные в Teams:\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png\" alt-text=\"Выходные данные триггера\"border=\"true\":::\n\n ## <a name=\"take-tour-of-source-code\"></a>Обзор исходного кода\n\n Teams Toolkit предоставляет компоненты для создания приложения. После создания проекта можно просмотреть папки и файлы проекта в области **обозревателя** Visual Studio Code.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/folder-structure.png\" alt-text=\"вкладка &quot;Структура&quot;\" border=\"true\":::\n\n Если вы решили использовать платформу пользовательского интерфейса, следующий пример кода шаблона предоставляет шаблон с React компонентов.\n\n Новая папка проекта содержит следующее содержимое:\n\n | Имя папки | Содержание |\n | --- | --- |\n | `.fx` | Project параметров уровня, конфигурации и сведений о среде |\n | `.vscode` | Файлы vs code для локальной отладки |\n | `bot` | Исходный код бота |\n | `templates` | Шаблоны для Teams приложения и соответствующих ресурсов Azure |\n \n  Реализация основных уведомлений в **папке бота** и содержит:\n\n | Имя файла | Содержание |\n | --- | --- |\n | `src/adaptiveCards/` | Шаблоны адаптивной карточки  |\n | `src/internal/` | Созданный код инициализации для функций уведомлений |\n | `src/index.*s` | Точка входа для обработки сообщений бота и отправки уведомлений |\n | `.gitignore` | Файл для исключения локальных файлов из проекта бота |\n | `package.json` | Файл пакета NPM для проекта бота |\n"
- title: Отправка уведомлений Teams каналу
  durationInMinutes: 1
  content: "**Отправка уведомления по Teams каналу**\n\n1. В Visual Studio Code **explorer** выберите **MYNOTIFICATIONBOT> бота> src> index.js**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/file-path.png\" alt-text=\"Путь к файлу\" border=\"true\":::\n\n   Вы увидите следующую страницу:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/default-program.png\" alt-text=\"Программа по умолчанию\" border=\"true\":::\n\n1. Используйте следующий код после Visual Studio Code`for (const target of await bot.notification.installations()) { `.\n\n     ```bash\n     if (target.type === \"Channel\") {\n       const members = await target.members();\n       await target.sendMessage(\"This is a message to channel: \" + members.length + \" members.\");\n       for (const member of members) {\n         await member.sendMessage(\"This is a message to Member: \" + member.account.email);\n       }\n     }\n     /* \n     ```  \n\n      :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/code-add.png\" alt-text=\"Добавление кода\" border=\"true\":::\n\n    **Чтобы настроить хранилище, с помощью этой функции можно выполнить следующее.**\n\n    1. В Visual Studio Code **explorer** выберите **myNOTIFICATIONBOT> бот> src> внутренней> initialize.js**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/initialize-storage.png\" alt-text=\"служба хранилища инициализации\" border=\"true\":::\n    \n       Вы увидите следующую страницу:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/storage-code.png\" alt-text=\"служба хранилища кода\" border=\"true\":::\n\n    1. Обновите следующий код в **initialize.js** файле, чтобы настроить хранилище.\n\n         ```bash\n         const myStorage = new MyStorage(...);\n\n         // initialize ConversationBot with notification enabled and customized storage\n         const bot = new ConversationBot({\n             // The bot id and password to create BotFrameworkAdapter.\n             // See https://aka.ms/about-bot-adapter to learn more about adapters.\n             adapterConfig: {\n                 appId: process.env.BOT_ID,\n                 appPassword: process.env.BOT_PASSWORD,\n             },\n             // Enable notification\n             notification: {\n                 enabled: true,\n                 storage: myStorage,\n             },\n          });\n         ```  \n    1. Используйте собственное хранилище вместо **MyStorage**.\n\n        > [!NOTE]\n        > Необходимо использовать собственное хранилище для рабочей среды. Если хранилище не предоставлено, рассматривается локальное хранилище файлов по умолчанию.\n\n1. Выберите **значок \"Выполнить и отладка**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\":::\" на Visual Studio Code боковой панели.\n\n1. В **раскрывающемся списке выберите Debug(Edge)** или **Debug(Chrome** ).\n\n1. Нажмите **кнопку \"Начать отладку** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Отладка приложений\" border=\"true\":::\n\n    Вы получите следующие выходные данные в Teams.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation.png\" alt-text=\"Установка приложения\" border=\"true\":::\n\n1. В **раскрывающемся списке выберите \"** Добавить в команду\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation1.png\" alt-text=\"Вывод уведомления1\" border=\"true\":::\n\n1. В **поле поиска добавьте** любой **канал**.\n1. Выберите **\"Настройка бота\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/setup-bot.png\" alt-text=\"Настройка бота\" border=\"true\":::\n\n   Появится следующий экран:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-notification.png\" alt-text=\"Уведомление Ченне1\" border=\"true\":::\n\n1. Откройте **Windows PowerShell**.\n\n1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Триггер PowerShell\"border=\"true\":::   \n\n   Вы получите уведомление в канале Teams:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-output.png\" alt-text=\"Выходные данные канала\" border=\"true\":::\n\n   Вы получите уведомление в личном чате:         \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/member-output.png\" alt-text=\"member-output\" border=\"true\":::\n"
- title: Развертывание первого Teams приложения
  durationInMinutes: 1
  content: "\nВы узнали, как создавать и запускать Teams с возможностями бота уведомлений. Последним шагом является развертывание приложения в Azure.\n\nДавайте развернем первое приложение с возможностью бота уведомлений в Azure с помощью Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Вход в учетную запись Azure\n\nИспользуйте свою учетную запись для доступа к порталу Microsoft Azure и предоставления новых облачных ресурсов для поддержки приложения.\n\n1. Откройте Visual Studio Code.\n1. Откройте папку проекта, в которую вы создали приложение бота уведомлений.\n1. Щелкните значок Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.\n1. Выберите **\"Войти в Azure\"**.\n\n    > [!TIP]\n    > Если у вас установлено расширение учетной записи Azure и используется та же учетная запись, этот шаг можно пропустить.\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись.\n1. Войдите в учетную запись Azure, используя свои учетные данные.\n1. Закройте браузер при появлении запроса и вернитесь к Visual Studio Code.\n\n    В **разделе ACCOUNTS** на боковой панели две учетные записи отображаются отдельно. В нем также перечислены доступные для использования подписки Azure. \n    \n    > [!NOTE]\n    > Убедитесь, что у вас есть по крайней мере одна доступная подписка Azure.\n\n    Теперь вы готовы развернуть приложение в Azure!\n\n## <a name=\"deploy-your-app-to-azure\"></a>Развертывание приложения в Azure\n\n  В **разделе DEPLOYMENT** можно подготовить необходимые облачные ресурсы, а код приложения будет скопирован в созданные облачные ресурсы.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Выберите значок Набор инструментов Teams:::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели Visual Studio Code.\n\n1. Выберите **\"Подготовка в облаке\"** в разделе **\"РАЗВЕРТЫВАНИЕ\"**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-cloud.png\" alt-text=\"Снимок экрана: команды подготовки\" border=\"true\":::\n\n1. Выберите существующую или создайте новую группу ресурсов.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/subscription-cloud.png\" alt-text=\"Снимок экрана: ресурсы для подготовки\" border=\"true\":::\n\n   > [!NOTE]\n   > Появится диалоговое окно с сообщением о том, что при запуске ресурсов в Azure могут возникнуть затраты.\n\n1. Выберите **\"Подготовка\"**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-confirm.png\" alt-text=\"Снимок экрана: диалоговое окно подготовки.\" border=\"true\":::\n\n   Процесс подготовки создает ресурсы в облаке Azure. Ход выполнения можно отслеживать, отслеживая диалоги в правом нижнем углу.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-provision-success.png\" alt-text=\"Снимок экрана: диалоговое окно завершения подготовки.\" border=\"true\":::\n\n     Вы можете просмотреть подготовленные ресурсы. В этом руководстве вам не нужно просматривать ресурсы.\n\n1. Выберите **\"Развернуть в облаке\"** в **разделе DEPLOYMENT** после завершения подготовки.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-cloud.png\" alt-text=\"Снимок экрана: место развертывания в облаке.\" border=\"true\":::\n\n1. Нажмите **Развернуть**\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/Deploy-confirm.png\" alt-text=\"Развертывание для подтверждения.\" border=\"true\":::\n\n   Развертывание занимает некоторое время. Ход выполнения можно отслеживать в диалоговых окнах в правом нижнем углу.\n    \n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-confirmation-cloud.png\" alt-text=\"Подтверждение развертывания.\" border=\"true\":::\n\n1. Выберите **\"Локальная отладка\"** в **разделе \"СРЕДА**\" Visual Studio Code.\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/local-debug.png\" alt-text=\"Локальная отладка.\" border=\"true\":::\n\n1. В **раскрывающемся списке выберите** \"Отладка edge\".\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/debug-cloud.png\" alt-text=\"Локальная отладка.\" border=\"true\":::\n\n1. Нажмите кнопку **Добавить**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/app-cloud-output.png\" alt-text=\"Выходные данные облака приложения.\" border=\"true\":::\n\n1. Откройте **Windows PowerShell**.\n\n1. Выполните команду `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/windows-powershell1.png\" alt-text=\"Windows PowerShell\" border=\"true\":::\n\n    Вы получите уведомление в Teams:\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/cloud-final-output.png\" alt-text=\"Окончательные выходные данные облака\" border=\"true\":::\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nВ окне терминала:\n\n1. Выполните `teamsfx new` команду, чтобы создать новый проект.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Запустите `teamsfx provision` , чтобы создать ресурс Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Запустите `teamsfx deploy` , чтобы развернуть приложение.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Запустите `teamsfx preview` , чтобы запустить приложение.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Полный запрос
  durationInMinutes: 1
  content: >
    У вас возникла такая проблема?

     :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Выходные данные триггера"border="true":::
- content: Вы завершили работу с руководством по созданию бота уведомлений!
