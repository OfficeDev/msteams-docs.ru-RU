### YamlMime:Tutorial
title: AAD единого входа для вкладок и расширения сообщений
metadata:
  title: AAD единого входа для вкладок и расширения сообщений
  description: В этом руководстве описано, как настроить единый AAD для вкладок.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Дополнительные сведения о проверке подлинности единого входа для вкладок.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 4457f6ee3f6ef8b8dfe9cc004950accf8181b233
  ms.sourcegitcommit: 0117c4e750a388a37cc189bba8fc0deafc3fd230
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/27/2022
  ms.locfileid: "65104128"
items:
- durationInMinutes: 1
  content: "Единый Azure Active Directory входа (AAD SSO) помогает выполнять проверку подлинности пользователей в Teams. \n\n**Основные аспекты пошаговое руководство по AAD единого входа для вкладок и расширений сообщений**\n\n * После первого входа AAD единый вход позволяет пользователю автоматически выполнять вход.\n * Позволяет пользователю входить на другие устройства без повторного ввода учетных данных для входа.\n * Получает маркер для вошедского пользователя.   \n\nЭто пошаговое руководство поможет вам создавать вкладки и расширения сообщений, AAD проверку подлинности единого входа. Вы увидите следующие выходные данные:\n\n  ![Изображение с поздравлением](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Предварительные требования
  durationInMinutes: 1
  content: "Установите следующие средства и настройте среду разработки:  \n\n* [Microsoft Teams с действительной](https://teams.microsoft.com/) учетной записью\n* [Пакет SDK для .NET Core](https://dotnet.microsoft.com/download) версии 3.1\n* [Последняя версия Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) latest version (only for devbox testing) or any equivalent tunneling solution\n* [Microsoft 365 учетной](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) записи разработчика или доступ к Teams с соответствующими разрешениями на установку приложения\n\n  > [!NOTE]\n  > После скачивания ngrok зарегистрируйтесь и установите [authtoken](https://ngrok.com/download).\n"
- title: Настройка локальной среды
  durationInMinutes: 1
  content: "Клонируйте `Microsoft-Teams-Samples` репозиторий в локальный GitHub:  \n\n 1. Откройте [Microsoft Teams примеров](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Выберите **\"Код\"**.\n 1. В раскрывающемся меню выберите \"Открыть **с помощью GitHub Desktop\"**.\n\n    ![Клонирование репозитория](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. Выберите **\"Клонировать\"**. \n"
- title: Создание и регистрация бота на портале Azure AD
  durationInMinutes: 5
  content: "Следующие шаги показано ниже.\n\n* Создайте ресурс Azure Bot для регистрации бота в Azure Служба Bot.\n* Создайте секрет клиента, который включает проверку подлинности единого входа бота.\n* Добавьте Microsoft Teams для развертывания бота в Teams канале.\n* Используйте ngrok для создания туннеля к конечным точкам веб-сервера.\n* Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\n**Создание ресурса Azure Bot**\n\n1. Перейдите на портал [Microsoft Azure.](https://portal.azure.com/)\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **Azure Bot**.\n1. Нажмите **клавишу ВВОД**.\n1. Выберите **Azure Bot**.\n\n     ![Создание карточки бота Azure](~/assets/images/bots/createazurebot.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя дескриптора бота в **дескрипторах бота**.\n1. Выберите свою **подписку** в раскрывающемся списке.\n1. В **раскрывающемся списке** \"Группа ресурсов\" выберите существующую группу ресурсов. Вы также можете создать группу ресурсов (выберите \"Создать новый > введите имя ресурса> нажмите кнопку \"ОК **\"**).\n\n    ![Регистрация бота](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. В разделе **\"Идентификатор приложения Майкрософт** \" по умолчанию выбран параметр **\"Создать новый** идентификатор приложения Майкрософт\". \n\n   Выберите **\"Использовать существующую регистрацию приложения** \" и введите **существующий** идентификатор приложения и пароль существующего **приложения для** существующего приложения. Выберите **\"Создать новый идентификатор приложения Майкрософт** \" для нового приложения.\n\n   > [!NOTE]\n   > Вы не можете создать несколько ботов с одинаковым **идентификатором приложения Майкрософт**.\n\n1. Выберите **тип приложения в качестве**`Multi Tenant`\n1. Выберите **Проверить и создать**.\n\n   ![Регистрация бота](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Если проверка пройдена, нажмите кнопку \" **Создать\"**.\n\n    Подготовка службы бота займет несколько секунд.\n\n1. Выберите пункт **Перейти к ресурсу**. \n\n    ![Развертывание приложения](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Ваш бот Azure создан.\n\n    ![Развертывание приложения](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**Создание секрета клиента**\n\n  Если вы создали новый идентификатор приложения Майкрософт, выполните **следующие действия**:\n\n1. На левой панели выберите \" **Конфигурация\"**. \n\n   > [!TIP]\n   > Сохраните **идентификатор приложения Майкрософт или** **идентификатор клиента для** дальнейшей справки.\n\n1. Рядом с **идентификатором приложения Майкрософт** выберите \" **Управление\"**.\n\n    ![Идентификатор приложения Майкрософт](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. В разделе **\"Секреты клиента** \" выберите \" **Новый секрет клиента\"**. \n\n    ![Новый секрет клиента](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   **Появится окно \"Добавление секрета** клиента\".  \n\n1. **Введите описание**.\n\n1. Нажмите **Добавить**.\n\n    ![Добавление секрета клиента в приложение](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. В **столбце \"Значение** \" выберите \" **Копировать в буфер обмена\"**.\n\n     ![Значение секрета клиента](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Сохраните значение **секретов клиента** или пароль приложения для дальнейшей ссылки.\n\n**Добавление канала Microsoft Teams**\n\n1. Нажмите **Главная**.\n\n    ![Домашняя страница](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Выберите бот из списка **последних ресурсов**.\n\n1. Выберите **\"Каналы** \" в левой области. \n\n1. Выберите **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Установите флажок, чтобы принять **условия обслуживания**.\n\n1. Выберите **\"Принять**\".\n\n      ![Условия обслуживания](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Выберите **Сохранить**.\n\n      ![Выберите Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Создание туннеля для локального веб-сервера**\n\nИспользуйте ngrok для создания туннеля к общедоступным конечным точкам HTTPS локального веб-сервера. Выполните следующую команду в ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Добавление конечной точки обмена сообщениями**\n\n1. Из ngrok скопируйте URL-адрес HTTPS (https to io).\n\n    ![URL-адрес HTTPS ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > URL-адрес HTTPS в ngrok — это полное доменное имя.\n    > Это `WebAppDomain` полное доменное имя, которое не включается `https://` в него.\n\n1. В **Параметры** для созданного бота Azure выберите \"**Конфигурация\"**.\n\n1. В **конечной точке обмена** сообщениями используйте URL-адрес HTTPS, доступный в ngrok, и в конце URL-адреса добавьте **/api/messages**.\n\n    ![Конечная точка обмена сообщениями](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Нажмите **Применить**.\n\n    Вы успешно настроили бот в Azure Служба Bot.\n"
- title: Настройка единого входа для вкладки
  durationInMinutes: 1
  content: "1. Перейдите на [портал Azure](https://portal.azure.com/).\n\n1. Выберите **Azure Active Directory**.\n\n1. Создайте левую панель и выберите **\"Регистрация приложений\"**.\n\n1. Выберите бота.\n\n1. Выберите **\"Предоставить API\"**.\n\n1. Выберите **\"Задать\"**.\n\n   ![Предоставление API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. **Задайте URI идентификатора** приложения в виде `api://your ngrok/botid-{your AppID}`.\n\n   ![Установка ссылки](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Нажмите **Добавить область**. \n\n1. На отображаемой панели введите `access_as_user` имя **области**.\n\n1. **Задайте Кто может дать согласие**`Admins and users`?\n\n1. Чтобы настроить запросы согласия `access_as_user` администратора и пользователя с соответствующими значениями для области, укажите следующие сведения в полях:</br>\n\n   * Введите `Teams can access the user’s profile` **отображаемое имя согласия администратора**.\n\n   * Введите `Allows Teams to call the app’s web APIs as the current user` описание **согласия администратора**.\n\n   * Введите `Teams can access the user profile and make requests on the user’s behalf` **отображаемое имя согласия пользователя**.\n\n   * Введите `Enable Teams to call this app’s APIs with the same rights as the user` описание **согласия пользователя**.\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n1. Выберите **\"Добавить область** для сохранения\".\n\n   ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > Имя **области должно совпадать** с универсальным кодом ресурса (URI) **идентификатора** приложения, `/access_as_user` добавленным в конце.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. В разделе **Авторизованные клиентские приложения** укажите приложения, которые необходимо авторизовать для веб-приложения вашего приложения. \n\n1. Выберите **Добавить клиентское приложение**. \n\n1. Введите каждый из следующих идентификаторов клиента и выберите авторизованную область:</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams мобильное или настольное приложение)\n\n       ![Добавление клиентского приложения](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams веб-приложения)\n\n       ![Добавление клиентского приложения](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   На следующем рисунке показан **идентификатор клиента**:\n\n     ![Клиентские приложения](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. На панели слева выберите **разрешения API**. \n\n   > [!NOTE]\n   > Пользователи должны дать согласие на эти разрешения только в том случае, если приложение Azure AD зарегистрировано в другом клиенте.\n\n1. Выберите **Добавить разрешение**.\n\n1. Выберите **Microsoft Graph**.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Выберите **Делегированные разрешения**.\n\n1. Добавьте указанные ниже разрешения.</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profile**\n    * **User.Read**\n\n1. Выберите **Добавить разрешения**.\n\n1. На панели слева выберите \" **Проверка подлинности\"** , чтобы задать URI перенаправления. \n\n   > [!NOTE]\n   > Если приложению не предоставлено согласие ИТ-администратора, пользователи должны предоставить согласие при первом использовании приложения.\n           \n     1. Выберите **Добавить платформу**.\n     1. Выберите платформу **Веб**.\n\n        ![Интернет](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. **Введите URI перенаправления** как `https://token.botframework.com/.auth/web/redirect`.\n\n     1. **Включите неявное предоставление и гибридные** потоки, установите следующие флажки:\n         * **Маркеры идентификаторов**\n         * **Маркеры доступа**\n\n     1. Нажмите **Настроить**.\n\n        ![Настройка веб-сайта](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**Обновление манифеста**\n\n1. Выберите **\"Манифест** \" на левой панели.\n\n1. Убедитесь, что для элемента конфигурации задано **значение accessTokenAcceptedVersion: 2**. В противном случае измените его значение на **2** и нажмите кнопку **\"Сохранить\"**. \n\n   > [!Tip]\n   > Если вы уже тестируете бот в Teams, необходимо выйти из бота и выйти из Teams. Затем войдите еще раз, чтобы увидеть это изменение.\n\n   ![Изменение манифеста](~/assets/images/bots/update-manifest.png)</br>\n\n**Настройка Служба Bot подключения**\n\n1. Перейдите **на страницу конфигурацииAdd** >  **OAuth Connection Параметры**.\n\n1. Выберите **\"Добавить подключение OAuth Параметры**.\n\n1. В **поле \"Новый параметр подключения**\" введите следующие сведения:\n\n    | Field | Значение или описание |\n    | ----- | ----- |\n    | **Имя** | Введите имя нового параметра подключения. Имя можно использовать в параметрах кода службы бота. |\n    | **Service Provider** | Выберите **Azure Active Directory версии 2**. |\n    | **Идентификатор клиента** | Сохранено ранее в качестве **идентификатора приложения Майкрософт**. |\n    | **Секрет клиента** | Сохранено ранее **в качестве значения** идентификатора секрета клиента. |\n    | **URL-Exchange маркера** | Используйте **URI идентификатора приложения, полученный** ранее при раскрытии конечной точки API. |\n    | **Идентификатор клиента** | Введите **общее**. |\n    | **Scopes** | **Введите User.Read** и добавьте **все области,** выбранные при указании разрешений для подчиненных API. |\n\n1. Выберите **Сохранить**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Настройка параметров приложения
  durationInMinutes: 1
  content: "1. Перейдите **к файлу appsettings.json** в клонированном репозитории.\n\n    ![Расположение параметров приложения](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. Откройте **файл appsettings.json** **в Visual Studio Code** и обновите следующие сведения:  \n\n     * Задайте `\"MicrosoftAppId\"` идентификатор приложения **Майкрософт для бота**.\n     * Задайте `\"MicrosoftAppPassword\"` значение идентификатора секрета клиента бота.\n     * Задайте `\"DOMAIN-NAME\"` URL-адрес ngrok.\n     * Задайте `\"ConnectionName\"` имя параметра подключения OAuth.\n     * Задайте `\"ClientId\"` идентификатор приложения **Майкрософт для бота**.\n     * Задайте `\"AppSecret\"` значение идентификатора секрета клиента бота.\n     * Задается `\"ApplicationIdURI\"` в формате `api://584f****.ngrok.io/botid-{AppID}`.\n\n    ![Параметры приложения](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Настройка файла манифеста
  durationInMinutes: 1
  content: "1. Перейдите в `manifest.json` клонированный репозиторий.\n\n    ![Расположение файла манифеста](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. Откройте `manifest.json` в **Visual Studio Code** и внесите следующие изменения:\n\n     * Замените все вхождения `[DOMAIN-NAME]` доменным именем ngrok. \n     * Замените все вхождения `[YOUR-MICROSOFT-APP-ID]` идентификатором **приложения Майкрософт бота**.\n\n         > [!NOTE]\n         > В зависимости от сценария и может `[YOUR-MICROSOFT-APP-ID]` `[DOMAIN-NAME]` происходить несколько раз.\n\n     * Задайте `\"resource\"` значение `api://584f****.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Изображение манифеста2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Сборка и запуск службы
  durationInMinutes: 1
  content: "**Создание и запуск службы с помощью Visual Studio 2019 или командной строки**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **Запустите Visual Studio 2019**.\n   1. Перейдите **к файлу** **FileOpen** >  >  **Project/Solution**.\n\n      ![Открытие файла](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Выберите **файл Sample.csproj app SSO** из **папки csharp** .\n\n      ![Project папки](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. Вы увидите следующие выходные данные:\n\n      ![Файл маркера](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Нажмите **клавишу F5** , чтобы запустить проект.\n\n   1. Выберите **Да**, если появится следующий диалог:\n\n      ![Сертификат доверия](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Откроется веб-страница с сообщением о том, **что бот готов!**\n\n      ![Приложение готово](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nПерейдите к **папке csharp** в окне командной строки и введите следующую команду:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Upload единого входа в Teams
  durationInMinutes: 1
  content: "1. В клонированном репозитории перейдите к **csharp > app SSO sample > TeamsAppManifest**.\n\n1. Создайте .zip со следующими файлами, которые находятся в **папке манифеста** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Выбор ZIP-файла](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Перейдите **к Microsoft Teams**.\n\n1. Выберите **\"Магазин\"**.\n1. Выберите **\"Управление приложениями\"**.\n1. Выберите **Опубликовать приложение**.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. Выберите **Отправить пользовательское приложение**. \n\n   ![Upload пользовательского приложения](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. Нажмите **кнопку \"** Открыть\", чтобы .zip файл, созданный в **папке манифеста** .\n\n   ![Выбор ZIP-файла](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Нажмите **Добавить**.\n\n   ![Добавление приложения](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Отправьте сообщение боту. \n1. Бот выполнит единый вход и отобразит карточку профиля, а также запрос на просмотр маркера.\n\n   ![Карточка профиля](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. Выберите **\"Да** \", чтобы просмотреть токен, или **\"Нет** \", чтобы продолжить чат.\n  \n   ![Представление токена](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Если единый вход не выполнен, бот выполнит метод проверки подлинности по умолчанию для вашей вкладки.\n\n      ![Нет единого входа](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Нажмите многоточие **...** чтобы открыть расширение сообщения.\n\n      ![расширение сообщения](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Выберите новое приложение единого входа.\n\n      ![Приложение единого входа](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. Выберите **вход**.\n\n      ![Выполните вход](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Введите учетные данные в поле входа и нажмите кнопку **\"Далее\"**.\n\n      ![Поле входа](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Выберите **Принять**.\n\n      ![Поле согласия](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Откройте расширение сообщения и выберите приложение.\n\n  1. Выберите профиль в поле поиска. Вы увидите примерно следующее:\n\n      ![Профиль](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Отправьте `https://profile.botframework.com` в приложение, чтобы получить карточку профиля.\n   \n      ![Карточка профиля](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Полный запрос
  durationInMinutes: 1
  content: >
    У вас возникла такая проблема?

       ![Профиль единого входа](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Вы завершили работу с руководством по началу работы с единым входом для приложения расширения вкладок и сообщений.
