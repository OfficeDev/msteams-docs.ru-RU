### YamlMime:Tutorial
title: 'Создание первого приложения с помощью C #'
metadata:
  title: 'Hello World C #'
  description: В этом руководстве описано, как создать Hello World с помощью C#.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Общие сведения о начало работы
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: bae22be2bf7ccdd3921aada3be650bd14606595d
  ms.sourcegitcommit: 0117c4e750a388a37cc189bba8fc0deafc3fd230
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/27/2022
  ms.locfileid: "65104450"
items:
- durationInMinutes: 1
  content: >
    Начните Microsoft Teams разработки приложения, создав свое первое приложение с помощью вкладки, бота и расширения сообщений.


    >Это приложение будет иметь все возможности и каждый из них имеет собственный пользовательский интерфейс и пользовательский интерфейс:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Схема, показывающая, что это приложение имеет три функции." border="true":::


    В этом руководстве вы узнаете:


    - Настройка нового проекта

    - Как создать три приложения с разными возможностями — tab, bot и message extension с помощью C# и Visual Studio 2019

    - Развертывание приложения на портале разработчика
- title: Предварительные требования
  durationInMinutes: 1
  content: "Ниже приведен список средств, которые необходимо установить для создания и развертывания Teams приложения.\n\n| &nbsp; | Установка | Для использования... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> Установите одну из следующих двух рабочих нагрузок:<br> • **ASP.NET и веб-разработки** <br> • **Кроссплатформенная разработка .NET Core** | .NET. Вы можете установить бесплатный выпуск community Visual Studio 2019, а также установить рабочие нагрузки. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git для использования репозитория примера приложения C# из GitHub. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams приложения (чат-бот и расширение сообщений) требуют входящих подключений. Необходимо предоставить систему разработки для Teams через туннель. Туннель не требуется для приложений, которые включают только вкладки. Этот пакет устанавливается в каталоге проекта (с помощью npm `devDependencies`). |\n| &nbsp; | [Набор средств Teams](#install-teams-toolkit) | Расширение Visual Studio 2019, которое создает шаблон проекта для вашего приложения. Используйте последнюю версию. |\n| &nbsp; | [Портал разработчика Teams](https://dev.teams.microsoft.com/) | Веб-портал для настройки, администрирования и распространения приложения Teams, включая вашу организацию или Teams магазин. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams для совместной работы со всеми пользователями, с которыми вы работаете, с помощью приложений для чата, собраний, зовите все в одном месте. |\n| **Необязательное** | &nbsp; | &nbsp; |\n| &nbsp; | [Средства Azure для Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [и Microsoft Azure CLI](/cli/azure/install-azure-cli) | Средства Azure для доступа к хранимых данных или развертывания облачной серверной части для Teams в Azure. |\n\n\n## <a name=\"verify-git-installation\"></a>Проверка установки Git\n\nЕсли Visual Studio запрос на добавление `git` в путь, выберите его. \n\nЧтобы проверить установленную версию Git, выполните следующие действия.\n\n1. Откройте окно терминала. \n2. Выполните следующую команду, чтобы проверить версию `git` , установленную на компьютере:\n\n    ```bash\n    $ git --version\n    ```\n\n    Пример выходных данных: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Установка Teams набор средств\n\nTeams набор средств упрощает процесс разработки с помощью средств для создания шаблонов проектов для вашего приложения. Он создает необходимую структуру каталогов для всех выбранных возможностей с необходимыми файлами, готовыми к сборке проекта.\n\nTeams набор средств доступна как расширение Visual Studio 2019.\n\nЧтобы установить Teams набор средств расширения:\n\n1. Откройте Visual Studio 2019 и выберите **расширения ExtensionsManage** > .\n1. В поле поиска введите **Teams набор средств**.\n1. Нажмите **кнопку \"** Скачать\" рядом с Teams набор средств.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"На рисунке показана установка Teams набор средств\"::: \n\n    Изменения доступны после закрытия Visual Studio 2019. Это необходимо, так как Visual Studio 2019 должен перезапуститься после установки расширения.\n\n1. Нажмите **Закрыть**.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"На рисунке показана установка для Teams набор средств\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" border=\"true\":::\n\n1. Закройте Visual Studio 2019.\n    \n    Откроется установщик VSIX с инструкциями по установке расширения.\n\n1. Следуйте инструкциям установщика VSIX, чтобы завершить установку набора средств.\n1. Снова Visual Studio 2019.\n\nПриложения Teams будут доступны в качестве шаблона в Visual Studio 2019.\n\nВы также можете найти Teams набор средств в Visual Studio Code [Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента Teams разработки\n\nКлиент **—** это пространство или контейнер для вашей организации в Teams, где вы беседируете, делитесь файлами и выполняете собрания. В этом пространстве также можно загрузить неопубликованное приложение и протестировать его. Давайте посмотрим, готовы ли вы к разработке с клиентом.\n\n### <a name=\"check-for-sideloading-option\"></a>Проверка параметра загрузки неопубликованных приложений\n\nПосле создания приложения необходимо загрузить это приложение в Teams, не распространяя его. Этот процесс называется загрузкой без публикации. Войдите в учетную запись Microsoft 365, чтобы просмотреть этот параметр.\n\n> [!NOTE]\n> Загрузка неопубликованных приложений необходима для предварительного просмотра и тестирования приложений в Teams локальной среде. Если он не включен, вы не сможете просмотреть и протестировать приложение в Teams локально.\n\nУ вас уже есть клиент и у вас есть доступ администратора? Давайте посмотрим, действительно ли вы работаете!\n\nПроверьте, можно ли загрузить неопубликованные приложения в Teams:\n\n1. В клиенте Teams выберите **значок Магазина**.\n1. Выберите **\"Управление приложениями\"**.\n1. Найдите параметр для Upload **пользовательского приложения**. Если вы видите этот параметр, загрузка неопубликованных приложений включена.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показан параметр для отправки пользовательского приложения в Teams.\":::\n\n    > [!NOTE]\n    > Если Teams не отображает возможность отправки пользовательского приложения, обратитесь к Teams администратору.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Создание бесплатного клиента Teams разработчика (необязательно)\n\nЕсли у вас нет учетной записи Teams, вы можете получить ее бесплатно. Присоединяйтесь к Microsoft 365 разработчика!\n\n1. Перейдите в [программу для разработчиков Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Нажмите **кнопку \"Присоединиться сейчас** \" и следуйте инструкциям на экране.\n1. На экране приветствия выберите **\"Настройка подписки E5\"**.\n1. Настройте свою учетную запись администратора. После завершения отобразится следующий экран:\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Пример того, что вы видите после регистрации в программе Microsoft 365 разработчика.\":::\n\n1. Войдите в Teams учетную запись администратора, которую вы только что настроили. Убедитесь, что Upload **настраиваемого приложения** в Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Получение бесплатной учетной записи Azure\n\nЕсли вы хотите разместить приложение или получить доступ к ресурсам в Azure, у вас должна быть подписка Azure. [Создайте бесплатную учетную запись](https://azure.microsoft.com/free/) перед началом работы.\n\nТеперь у вас есть все средства и настроены учетные записи. Теперь давайте настроим среду разработки и приступим к созданию.\n\n> [!NOTE]\n> Используйте подходящее окно терминала на своей платформе. В этих примерах используется Git Bash, но его можно запускать на большинстве платформ.\n\nОткройте последнюю версию Visual Studio и установите все обновления.\n\nДля выполнения команд в этом руководстве можно использовать то же окно терминала.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Скачивание примера\n\nДля работы с этим руководством используйте [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) пример в C#. Вы можете скачать и клонировать его из GitHub.\n\nЧтобы использовать этот пример, клонируйте пример репозитория одним из следующих способов:\n\n- [Использование Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [Использование Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Использование Git Bash для клонирования примера репозитория\n\n- Выполните следующую команду в окне терминала, чтобы клонировать пример репозитория на компьютер:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    Пример репозитория для приложения C# клонирован на компьютер в расположении по умолчанию.\n\n    > [!TIP]\n    > Вы можете [создать вилку](https://help.github.com/articles/fork-a-repo/) этого [репозитория](https://github.com/OfficeDev/Microsoft-Teams-Samples), чтобы изменить и сохранить изменения в GitHub.\n\n    <a name=\"BuildRun\"></a>\n\n    Клонированный репозиторий можно просмотреть в Visual Studio 2019 г. \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Использование Visual Studio 2019 для клонирования примера репозитория\n\n1. Откройте Visual Studio 2019.\n1. Выберите **\"Клонировать репозиторий\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"Клонирование примера репозитория для приложения c# Teams\" border=\"true\":::\n\n1. Введите `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` путь для клонирования репозитория:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"Клонирование примера репозитория для приложения c# Teams\" border=\"true\":::\n\n1. Введите расположение, в которое нужно клонировать репозиторий, и выберите \" **Клонировать\"**.\n\n    Пример репозитория клонирован, и Visual Studio откроется. Клонированный репозиторий можно просмотреть **в Обозреватель решений.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"Пример репозитория для клонированного Teams c#\" border=\"true\":::\n\nТеперь, когда вы клонировали пример репозитория, давайте создадим первое приложение C# для Teams.\n"
- title: Создание и запуск первого приложения C#
  durationInMinutes: 1
  content: "\nПосле клонирования репозитория для примера приложения C# можно создать и запустить приложение в локальной среде.\n\nНа этой странице вы научитесь:\n1. [Создание первого приложения](#build-your-first-app)\n1. [Локальное развертывание примера приложения](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>Создание первого приложения\n\nВы можете просмотреть структуру проекта **в Обозреватель решений после** создания рабочей области. Теперь вы создайте и запустите приложение.\n\n**Сборка и запуск клонированного примера**\n\n1. Откройте файл решения **Microsoft.Teams. Samples.HelloWorld.sln** из каталога **Microsoft-Teams-Samples/samples/app-hello-world/csharp** примера.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Изображение, показывающее Hello World каталога решения\" border=\"true\":::\n\n1. Выберите **Project меню** и выберите **Microsoft.Teams. Samples.HelloWorld.Web Properties**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"Изображение, показывающее Project меню для выбора параметра &quot;Свойства&quot;\" border=\"true\":::\n\n1. Выберите **\"Отладка** \" в левой области окна **\"Свойства** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"Изображение, на котором окно свойств\" border=\"true\":::\n\n1. Перейдите по экрану, чтобы просмотреть **веб-сервер** Параметры.\n\n1. В области отладки сделайте **следующее:**\n    - **Задайте ДЛЯ URL-адреса** приложения значение `http://localhost:3333/`.\n    - Clear **Enable SSL**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"Изображение параметров веб-сервера для свойств проекта C#\" border=\"true\":::\n\n1. Выберите **\"Собрать решение** \" в **меню \"Сборка** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"Изображение, показывающее, что сборка завершена\" border=\"true\":::\n\n1. Нажмите **клавишу F5** или выберите **команду \"Начать отладку** \" в меню \" **Отладка** \", чтобы запустить пример.\n\n    При запуске приложения открывается окно браузера. В нем отображается корень приложения. Чтобы убедиться, что загружаются все URL-адреса приложения, перейдите по следующим URL-адресам:\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"Изображение с локальным узлом\" border=\"true\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"Изображение страницы Hello приложения\" border=\"true\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"Изображение, показывающее первую вкладку приложения\" border=\"true\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"Изображение, показывающее вторую вкладку приложения\" border=\"true\":::\n\n    > [!Note]\n    > Если возникает ошибка `Could not find a part of the path … bin\\roslyn\\csc.exe`, обновите пакет с помощью команды `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`.\n\n## <a name=\"deploy-your-sample-app-locally\"></a>Локальное развертывание примера приложения\n\nMicrosoft Teams приложения — это веб-приложения, предоставляющие одну или несколько возможностей. Сделайте приложение доступным в Интернете, чтобы платформа Teams загрузит его. Размещение приложения с помощью `ngrok` создания туннеля для локального процесса на компьютере.\n\nПосле размещения приложения запишите его корневой URL-адрес, например `https://yourteamsapp.ngrok.io` или `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel ngrok\n\nПосле установки ngrok можно создать туннель для локального развертывания приложения:\n\n1. Откройте новое окно терминала.\n1. Выполните следующую команду, чтобы создать туннель. В примере приложения используется порт 3333.\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    Создается туннель ngrok. Пример:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"Изображение, показывающее туннель ngrok\" border=\"true\":::\n\n    Вы можете попробовать добавить или `hello``first``second` в URL-адрес туннеля ngrok, чтобы просмотреть различные страницы вкладок приложения.\n    \n    Ngrok прослушивает запросы из Интернета и направляет их в приложение, работающее через порт 3333.\n\nЧтобы проверить локальное развертывание приложения, выполните указанные ниже действия.\n\n1. Откройте браузер.\n1. Загрузите приложение по следующему URL-адресу:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Ниже приведен пример URL-адреса.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"Изображение приложения C#, выполняющееся локально в туннеле ngrok\" border=\"true\":::\n\n1. Запишите адрес пересылки в консоли ngrok. Этот URL-адрес необходим для развертывания приложения в Teams.\n\n    > [!NOTE]\n    > Если во время сборки использовался другой [порт,](#build-your-first-app) убедитесь, что для настройки туннеля используется один и тот `ngrok` же номер порта.\n    > [!TIP]\n    > Рекомендуется работать в `ngrok` другом окне терминала. Это помогает предотвратить прерывание `ngrok` работы приложения, когда потребуется остановить, перестроить и повторно запустить приложение. Сеанс `ngrok` предоставляет полезные сведения об отладке в этом окне.\n    > [!IMPORTANT]\n    > Если вы используете бесплатную версию ngrok, ваше приложение будет доступно только во время текущего сеанса на компьютере разработки. Он недоступен, если компьютер выключен или переходит в спящий режим. При перезапуске службы она возвращает новый адрес. Затем необходимо обновить все расположения, использующие устаревший адрес. Помните этот шаг при совместном использовании приложения для тестирования.\n"
- title: Настройка первого приложения C# с помощью портала разработчика
  durationInMinutes: 1
  content: "\nПортал [разработчика можно использовать](https://dev.teams.microsoft.com/) для отправки пакета приложения Teams и настройки возможностей приложения. Портал разработчика — это Teams, которое упрощает создание и регистрацию приложения. Установите из Teams магазина!\n\nПосле сборки и тестирования приложения Teams можно настроить и просмотреть его с помощью портала разработчика.\n\nНа этой странице вы узнаете, как настроить пакет [приложения на портале разработчика](#configure-the-app-package-in-developer-portal).\n\n<details>\n<summary>Параметр публикации в Visual Studio 2019 г.</summary>\n\nВ этом руководстве для настройки возможностей приложения и публикации приложения используется портал разработчика. \n\nОднако Visual Studio 2019 имеет встроенную поддержку развертывания приложений для разных поставщиков, включая Azure:\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Изображение элемента меню &quot;Опубликовать в Azure&quot; Visual Studio 2019\" border=\"true\":::\n\nMicrosoft Azure размещает приложение .NET на бесплатном уровне. Он использует общую инфраструктуру, которая достаточна для запуска примера `Hello World` . Дополнительные сведения см. [в статье о создании бесплатной учетной записи Azure](https://azure.microsoft.com/free/).\n\nПри использовании этого параметра можно ввести сведения о сайте Azure и ресурсах Azure и опубликовать приложение. \n\nВ этом руководстве не нужно использовать этот шаг.\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>Настройка пакета приложения на портале разработчика\n\nДля настройки [пакета приложения](https://dev.teams.microsoft.com/) и его возможностей можно использовать портал разработчика. Портал разработчика — это Teams, которое упрощает создание и регистрацию приложения. Установите из Teams магазина!\n\nНастройка пакета приложения включает в себя:\n\n1. [Импорт пакета приложения на портал разработчика](#import-the-app-package-in-developer-portal)\n1. [Настройка возможностей приложения](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>Импорт пакета приложения на портале разработчика\n\nЧтобы импортировать пакет приложения:\n\n1. Откройте Microsoft Teams.\n\n1. Щелкните **значок Магазина** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: на панели слева.\n\n1. Найдите **портал разработчика** в строке поиска и выберите **портал разработчика**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Выбор приложения &quot;Портал разработчика&quot;\" border=\"true\":::\n\n1. Выберите **Открыть**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Изображение с открытым приложением портала разработчика\" border=\"true\":::\n\n    Откроется портал разработчика.\n\n1. Выберите **вкладку \"Приложения** \".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Приложение портала разработчика\" border=\"true\":::\n\n1. Выберите **\"Импорт приложения\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Изображение, на котором показана кнопка &quot;Импорт приложения&quot;\" border=\"true\":::\n\n1. Выберите пакет приложения по `helloworldapp.zip` следующему пути в структуре примера каталога репозитория C#:\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    Приложение **Hello World** импортируется на портал разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Изображение приложения, импортированного в Teams\" border=\"true\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Знакомство с приложением на портале разработчика\n\nПосле импорта приложения на портал разработчика можно просмотреть сведения о нем, включая файл манифеста.\n\n#### <a name=\"view-app-information\"></a>Просмотр сведений о приложении\n\n1. Выберите **\"Основные сведения** \" на левой панели портала разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"На рисунке показана левая панель портала разработчика\" border=\"true\":::\n\n1. Обратите внимание на следующие сведения из основных сведений:\n    - ИД приложения;\n    - Сведения о разработчике\n    - URL-адреса приложений\n\n1. Выберите **фирменную символику** на левой панели, чтобы просмотреть сведения о фирменной символике.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Изображение: сведения о фирменной символике приложения\" border=\"true\":::\n\n    Эти сведения важны при создании нового приложения для распространения.\n\n#### <a name=\"view-app-features\"></a>Просмотр функций приложения\n\n- Выберите **функции приложения** на левой панели портала разработчика.\n\n    Функции приложения отображаются в правой области. Вы можете просмотреть карточки для личного приложения, бота и расширения сообщений.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Изображение, на котором показаны функции приложения\" border=\"true\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Просмотр манифеста приложения\n\nФайл манифеста используется для настройки возможностей, необходимых ресурсов и других важных атрибутов для приложения.\n\nЧтобы просмотреть манифест приложения:\n\n- Выберите **\"Опубликовать** \" на левой панели, чтобы открыть раскрывающийся список, а затем выберите **пакет приложения**.\n    \n    Файл манифеста отображается на правой панели.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"Изображение файла манифеста приложения на портале разработчика\" border=\"true\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>Настройка возможностей приложения\n\nПосле импорта приложения на портал разработчика следующим шагом является настройка возможностей приложения. Портал разработчика содержит все сведения о приложении в разных разделах. Это упрощает настройку возможностей приложения.\n\nС помощью портала разработчика вы можете:\n- [Настройка личного приложения табуляции](#configure-personal-tab-app)\n- [Настройка бота](#configure-bot)\n- [Настройка расширения сообщения](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Настройка личного приложения табуляции\n\nЧтобы настроить приложение личных вкладок, с помощью этой функции можно выполнить следующее:\n\n1. Щелкните :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карточке **личного** приложения на  панели функций приложения и нажмите кнопку **\"Изменить\"**.\n\n    Отобразятся сведения о вкладке Hello.\n\n1. Щелкните значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: вкладки \"Hello\" и выберите команду **\"** Изменить\", чтобы открыть сведения о приложении для обновления.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Изображение меню вкладки &quot;Hello&quot;\" border=\"true\":::\n\n1. Введите сведения о приложении на вкладке \"Hello\" в разделе **\"Добавление вкладки в личное приложение\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Изображение с подробными сведениями о вкладке &quot;Hello&quot;\" border=\"true\":::\n\n    Введите следующие сведения:\n    - **Имя**: вкладка \"Привет\".\n    - **URL-адрес** **содержимого и URL-адрес** веб-сайта: адрес пересылки в сеансе консоли ngrok.\n    - **Контекст**: выберите **вкладку \"Личные\"**.\n\n1. Нажмите кнопку **Обновить**.\n\n    Сведения на вкладке \"Привет\" отображаются на панели **личных** приложений.\n\n1. Выберите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"Изображение, на котором показаны сведения о вкладке Hello для сохранения\" border=\"true\":::\n\n    На **панели личных** приложений теперь отображаются новая вкладка и автоматически созданная вкладка \"О программе\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Изображение: вкладка &quot;Hello&quot; и сведения о вкладке &quot;О программе&quot;\" border=\"true\":::\n\n#### <a name=\"configure-bot\"></a>Настройка бота\n\nВы можете легко добавить в приложение функциональные возможности ботов. В Hello World примере приложения уже есть бот, но его необходимо зарегистрировать в Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Изображение, показывающее приложение бота, импортируемого без идентификатора приложения\" border=\"true\":::\n\nУ бота, импортированного из примера, нет связанного идентификатора приложения. Вам потребуется удалить его и создать новый бот. Портал разработчика создает новый идентификатор приложения и регистрирует его в Teams.\n\nДобавление и настройка бота включает в себя:\n\n1. [Добавление нового бота](#to-add-a-new-bot)\n1. [Добавление бота в приложение](#to-add-bot-to-app)\n1. [Настройка области бота](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Добавление нового бота\n\n1. Выберите значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: на **карточке бота** **на панели** функций приложения и нажмите кнопку **\"Удалить\"**.\n\n1. Выберите **\"Сервис** \", чтобы добавить возможность.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Изображение с параметром &quot;Сервис&quot;\" border=\"true\":::\n\n1. Выберите **\"Управление ботом****\" на панели** \"Сервис\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Изображение области управления ботом\" border=\"true\":::\n\n1. Выберите **\"+ Создать бота****\" на** панели управления ботом.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Изображение: новый параметр бота\" border=\"true\":::\n\n1. Введите подходящее имя для бота и нажмите кнопку **\"Добавить\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Изображение, показывающее, как добавить бота\" border=\"true\":::\n\n    На **панели \"** Настройка\" отображаются сведения о новом боте в левой области.\n\n1. Введите URL-адрес переадресации из `ngrok` консоли и нажмите кнопку **\"Сохранить\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"Изображение, показывающее, как добавить конечную точку бота\" border=\"true\":::\n\n1. Выберите **секреты клиента** , а затем выберите \"Добавить секрет клиента в **бот\"** , чтобы создать пароль для бота.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"Изображение, показывающее раздел секрета клиента\" border=\"true\":::\n\n    Портал разработчика создает пароль для бота.\n\n    Для копирования пароля :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: можно использовать значок. В этом руководстве нет необходимости копировать его.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"Изображение, показывающее созданный секрет клиента\" border=\"true\":::\n\n1. Нажмите **ОК**.\n\n1. Выберите **< ботов** , чтобы **вернуться в область** управления ботом.\n\n    В **области управления** ботом отображается новый бот, добавленный с идентификатором приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"Изображение нового бота с идентификатором приложения\" border=\"true\":::\n\n1. Убедитесь, что вы сохраните идентификатор бота вместе с паролем из раздела **секрета** клиента.\n\n##### <a name=\"to-add-bot-to-app\"></a>Добавление бота в приложение\n\n1. Откройте панель **функций** приложения и выберите **карточку бота** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Изображение карточки бота\" border=\"true\":::\n\n    **Появится панель** бота.\n\n1. Выберите приложение бота из **списка \"Выберите существующий бот\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"Изображение, показывающее, как добавить существующее приложение-бот\" border=\"true\":::\n\n    Новый бот добавляется в приложение с собственным идентификатором приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"Изображение нового бота, добавленного в приложение\" border=\"true\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Настройка области бота\n\n1. Выберите значок :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: на новой **карточке бота** и нажмите кнопку \"Изменить **\"**.\n\n1. Перейдите по **области бота** , **чтобы просмотреть** раздел \"Команды\", и выберите **\"+ Добавить команду\"**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Изображение раздела &quot;Команды&quot;\" border=\"true\":::\n\n1. Введите подходящее имя и описание для **команды**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Изображение, показывающее, как добавить сведения о командах\" border=\"true\":::\n\n1. Выберите все три области для команды и нажмите кнопку **\"Добавить\"**.\n    - **Личный**\n    - **Команда**\n    - **Групповой чат**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Изображение, показывающее, как сохранить сведения о командах\" border=\"true\":::\n\n    Новая команда добавляется в раздел **\"Команды** \" области **бота** .\n\n1. Выберите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Изображение, показывающее сведения о командах для сохранения\" border=\"true\":::\n\n    Сведения о команде сохраняются.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Изображение, на котором показаны сохраненные сведения о командах\" border=\"true\":::\n\n1. Откройте **область функций** приложения и выберите \" **Личная** карточка приложения\", чтобы просмотреть сведения о вкладке приложения.\n\n    Вы увидите, что в приложение добавлена вкладка для нового чат-бота.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"Изображение с настроенным чат-ботом\" border=\"true\":::\n\n#### <a name=\"configure-message-extension\"></a>Настройка расширения сообщения\n\nРасширения сообщений позволяют пользователям запрашивать сведения из службы и публиковать эти сведения. Информация будет опубликована в виде карточек в беседе канала. Расширения сообщений отображаются в нижней части окна создания.\n\nЧтобы добавить новое расширение сообщения, с помощью\n\n1. Щелкните :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: значок на карточке **расширения** сообщений  на панели функций приложения и нажмите кнопку **\"Удалить\"**.\n\n1. Выберите **расширение сообщений** в **области функций** приложения.\n\n1. Выберите имя приложения бота в раскрывающемся списке **\"Выбор существующего** бота\" на панели **расширения \"** Сообщение\".\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Изображение: область расширения сообщения для выбора существующего бота\" border=\"true\":::\n\n1. Выберите **Сохранить**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"Изображение, на котором показана кнопка сохранения расширения сообщения\" border=\"true\":::\n\n    Расширение сообщения сохраняется, а раздел **\"** Команды\" отображается на панели **расширения** сообщения.\n\n1. Выберите **\"+ Добавить команду\"** , чтобы определить область действия приложения расширения сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Изображение раздела &quot;Команда&quot;\" border=\"true\":::\n\n1. Убедитесь **, что** в диалоговом окне \"Добавление команды\" выбран тип команды, которую вы **хотите добавить.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Изображение: диалоговое окно &quot;Добавление команды&quot;\" border=\"true\":::\n\n1. Введите подходящую информацию:\n    - Идентификатор команды\n    - Заголовок команды\n    - Описание команды\n\n1. Перейдите в диалоговое окно, чтобы просмотреть остальные сведения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Изображение, показывающее оставшиеся сведения в диалоговом окне &quot;Добавление команды&quot;\" border=\"true\":::\n\n1. **Убедитесь, что выбран параметр \"** Сделать по умолчанию\".\n1. Выберите следующие контексты для команды расширения сообщения:\n    - Командное поле\n    - Поле создания\n    - Сообщение\n1. Введите подходящую информацию для следующих сведений:\n    - Имя параметра\n    - Заголовок параметра\n    - Описание параметра\n\n1. Выберите **\"Текст** \" в качестве типа входных данных.\n1. Нажмите кнопку **Сохранить**.\n1. Команда расширения сообщения сохраняется и отображается в списке команд в области **расширения** сообщения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Изображение: добавлена новая команда\" border=\"true\":::\n\n1. Выберите **Сохранить**.\n1. Откройте **панель функций** приложения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Изображение, показывающее возможности, настроенные для Hello World приложения\" border=\"true\":::\n\n    Вы увидите все три возможности — личные приложения табуляции, бота и расширения сообщений, настроенные для Hello World приложения. Следующим шагом является регистрация приложения в Teams и тестирование приложения.\n"
- title: Предварительный просмотр и тестирование первого приложения C#
  durationInMinutes: 1
  content: "\nПосле импорта приложения и настройки возможностей на портале разработчика можно просмотреть и протестировать пример приложения.\n\n## <a name=\"preview-your-app-in-teams\"></a>Предварительный просмотр приложения в Teams\n\nПосле настройки возможностей приложения вы можете просмотреть и протестировать приложение в Teams локальной среде.\n\nПредварительный просмотр приложения:\n\n1. Выберите **предварительный просмотр Teams** на панели инструментов портала разработчика.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Изображение, на котором показана кнопка предварительного просмотра\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    Портал разработчика информирует о том, что приложение успешно загружено неопубликованным.\n\n1. Щелкните **значок Магазина**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::.\n1. Выберите **\"Управление приложениями\"**.\n   Ваше приложение отображается в неопубликованных приложениях. \n1. Найдите приложение с помощью поля поиска и выберите многоточие в строке.\n1. Выберите параметр **\"** Вид\".\n    **Появится страница** \"Добавить\" для вашего приложения.\n1. Нажмите **кнопку \"** Добавить\", чтобы загрузить приложение на Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Изображение: диалоговое окно &quot;Добавление приложения&quot;\" border=\"true\":::\n\n    Теперь ваше приложение доступно в Teams. Вы можете просмотреть все вкладки и протестировать возможности:\n\n    - Вкладка \"Привет\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Изображение, на котором показана вкладка &quot;Hello&quot; в локальной среде\" border=\"true\":::\n\n    - Чат-бот:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Изображение бота приложения в локальной среде\" border=\"true\":::\n\n        Вы можете отправить сообщение с помощью чата.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Изображение чата в локальной среде\" border=\"true\":::\n\n    - Расширение сообщения:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Изображение расширения сообщения в локальной среде\" border=\"true\":::\n\n        Поиск можно выполнить с помощью расширения сообщения.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Изображение, показывающее поиск с помощью расширения сообщения в локальной среде\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - Вкладка \"О программе\":\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Изображение, на котором показана вкладка &quot;О программе&quot; в локальной среде\" border=\"true\":::"
