### YamlMime:Tutorial
title: Создание первого приложения вкладки с помощью JavaScript
metadata:
  title: Hello World с JavaScript
  description: В этом учебном модуле вы узнаете, как создать приложение Hello World с помощью JavaScript, настроив новый проект с помощью Teams Toolkit, создав и разверните приложение вкладки.
  audience: Developer
  level: Beginner
  ms.date: 05/26/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Общие сведения о начало работы
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 502e5398553f59c008ca99b18427f4a7e14a7852
  ms.sourcegitcommit: ca84b5fe5d3b97f377ce5cca41c48afa95496e28
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 06/17/2022
  ms.locfileid: "66143062"
items:
- durationInMinutes: 1
  content: "Начните Microsoft Teams разработку приложения с помощью первого Teams приложения. Вы создадите приложение табуляции с Teams. \n\nВаше приложение будет иметь возможность, которая поставляется с собственным пользовательским интерфейсом и пользовательским интерфейсом:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции.\" border=\"false\":::\n\n> [!NOTE]\n> В этом руководстве вы создадите приложение табуляции с помощью JavaScript.\n\nВ этом руководстве вы узнаете:\n\n- Настройка нового проекта с помощью Teams Toolkit.\n- Создание приложения табуляции.\n- Структура приложения:\n    - Часть вкладки с JavaScript с React.\n    - Остальные функции с Node.js.\n- Развертывание приложения.\n"
- title: Предварительные условия
  durationInMinutes: 1
  content: "\nНиже приведен список средств, необходимых для создания и развертывания приложений.\n\n| &nbsp; | Установка | Для использования... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Набор средств Teams](#install-the-teams-toolkit) | Расширение Microsoft Visual Studio Code, которое создает шаблон проекта для вашего приложения. Используйте версию 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams для взаимодействия в одном месте со всеми пользователями, с которыми вы работаете, с помощью приложений для чата, собраний и звонков.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Серверной среды выполнения JavaScript. Используйте последнюю версию версии 16 LTS.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузера со средствами разработчика. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download); | Сред сборки JavaScript, TypeScript или SharePoint Framework (SPFx). Используйте версию 1.55 или более позднюю. |\n| **Необязательное** | &nbsp; | &nbsp; |\n| &nbsp; | [Средства Azure для Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [и Azure CLI](/cli/azure/install-azure-cli) | Средства Azure для доступа к хранимых данных или развертывания облачной серверной части для Teams в Azure. |\n| &nbsp; | [React средств разработчика для Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) [или React средств разработчика для Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Расширение DevTools браузера для библиотеки JavaScript React с открытым кодом. |\n| &nbsp; | [Песочница Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer — это браузерное средство, которое позволяет выполнять запросы из microsoft Graph данных. |\n| &nbsp; | [Портал разработчика Teams](https://dev.teams.microsoft.com/) | Веб-портала для настройки, управления и распространения приложений Teams, в том числе в вашей организации или магазине Teams. |\n\n\n> [!TIP]\n> Если вы работаете с данными Microsoft Graph, вам следует изучить и закладки Microsoft Graph Explorer. Это средство на основе браузера позволяет запрашивать microsoft Graph за пределами приложения.\n\n\n## <a name=\"prepare-development-environment\"></a>Подготовка среды разработки\n\nПосле установки необходимых средств настроите среду разработки.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Установка Teams Toolkit\n\nНабор Teams помогает упростить процесс разработки с помощью средств для подготовки и развертывания облачных ресурсов для приложения, публикации в хранилище Teams и т. д. \n \nНабор средств можно использовать с Visual Studio Code интерфейсом командной строки или интерфейсом командной строки`TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Откройте Visual Studio Code и выберите представление расширений  (**CTRL+SHIFT+X** / **⌘⇧-X** или расширения **> представлений**).\n1. В поле поиска введите **Teams Toolkit**.\n1. Выберите **\"Установить**\" рядом с Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"Иллюстрация установки Teams Toolkit.\" border=\"false\":::\n\n Значок Teams Toolkit отображается на Visual Studio Code боковой панели после установки.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Иллюстрация: значок Teams Toolkit на Visual Studio Code боковой панели.\" border=\"false\":::\n\nНабор средств Teams также можно найти [на Visual Studio Code Marketplace.](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension)\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nЧтобы установить CLI TeamsFx, используйте диспетчер `npm` пакетов:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nВ зависимости от конфигурации может `sudo` потребоваться установить интерфейс командной строки:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nЭто условие чаще используется в Linux и macOS системах.\n\nУбедитесь, что вы npm глобальный кэш в PATH. Этот шаг обычно выполняется как часть Node.js установщика.  \n\nС командой можно использовать интерфейс командной строки `teamsfx` . Убедитесь, что команда работает, выполнив команду `teamsfx -h`.\n\n> [!CAUTION]\n> Перед запуском TeamsFx в терминалах PowerShell необходимо включить политику удаленного подписанного выполнения для PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента Teams разработки\n\nКлиент **—** это пространство или контейнер для вашей организации в Teams, где вы беседируете, делитесь файлами и выполняете собрания. В этом пространстве также можно загрузить неопубликованное приложение и протестировать его. Давайте посмотрим, готовы ли вы к разработке с клиентом.\n\n### <a name=\"check-for-sideloading-option\"></a>Проверка параметра загрузки неопубликованных приложений\n\nПосле создания приложения необходимо загрузить это приложение в Teams, не распространяя его. Этот процесс называется загрузкой без публикации. Войдите в учетную запись Microsoft 365, чтобы просмотреть этот параметр.\n\n > [!NOTE]\n > Загрузка неопубликованных приложений необходима для предварительного просмотра и тестирования приложений в Teams локальной среде. Если он не включен, вы не сможете просмотреть и протестировать приложение в Teams локально.\n\nУ вас уже есть клиент и у вас есть доступ администратора? Давайте посмотрим, действительно ли вы работаете!\n\nПроверьте, можно ли загрузить неопубликованные приложения в Teams:\n\n 1. В клиенте Teams выберите значок **Магазина**.\n 1. Выберите **Управление приложениями**\n 1. Выберите **Опубликовать приложение**.\n 1. Найдите параметр для **отправки пользовательского приложения**. Если вы видите этот параметр, загрузка неопубликованных приложений включена.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показан параметр для отправки пользовательского приложения в Teams.\":::\n\n     > [!NOTE]\n     > Если у вас нет возможности отправить пользовательское приложение, обратитесь к Teams администратору.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Создание бесплатного клиента Teams разработчика (необязательно)\n\nЕсли у вас нет учетной записи Teams разработчика, ее можно получить бесплатно. Присоединяйтесь к Microsoft 365 разработчика!\n\n1. Перейдите в [программу для разработчиков Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Нажмите **кнопку \"Присоединиться сейчас** \" и следуйте инструкциям на экране.\n1. На экране приветствия выберите **\"Настройка подписки E5\"**.\n1. Настройте свою учетную запись администратора. После завершения отобразится следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Корпорация Майкрософт\" border=\"true\":::\n\n1. Войдите в Teams учетную запись администратора, которую вы только что настроили. Убедитесь, что у вас есть **параметр \"Отправить** пользовательское приложение\" в Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Получение бесплатной учетной записи Azure\n\nЕсли вы хотите разместить приложение или получить доступ к ресурсам в Azure, у вас должна быть подписка Azure. [Создайте бесплатную учетную запись](https://azure.microsoft.com/free/) перед началом работы.\n\nТеперь у вас есть все средства и настроена учетная запись. Теперь давайте настроим среду разработки и приступим к созданию. Выберите приложение, которое вы хотите сделать в первую очередь.\n"
- title: Создание рабочей области проекта для приложения вкладки
  durationInMinutes: 1
  content: "\nНачните Microsoft Teams разработки приложения, создав свое первое приложение. Это приложение использует возможность вкладки.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции. Выделена вкладка.\" border=\"false\":::\n\nНа этой странице вы узнаете:\n1. [Настройка нового проекта вкладки с помощью Teams Toolkit](#create-your-tab-project-workspace)\n1. [Сведения о структуре каталогов приложения](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Создание рабочей области проекта вкладки\n\nЕсли необходимые условия уже выполнены, начнем!\n\n> [!NOTE]\n> Отображаемый Visual Studio Code пользовательского интерфейса — mac. Он может отличаться в зависимости от операционной системы, Teams версии набора средств и среды.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Набор инструментов Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели Visual Studio Code.\n\n1. Выберите **Создать приложение Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\" border=\"false\":::.\n\n1. Выберите **\"Создать новое Teams,** чтобы создать приложение с помощью Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Мастер начинает создание нового проекта\" border=\"false\":::\n\n1. Убедитесь **, что** вкладка выбрана в качестве возможности, которую вы хотите создать в приложении. Нажмите кнопку **ОК**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tabapp.png\" alt-text=\"Выбор возможности приложения\" border=\"false\":::\n\n1. Выберите **JavaScript** в качестве языка.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"false\":::\n\n1. Выберите **папку рабочей области** , выбрав необходимую папку.  \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-folder.png\" alt-text=\"select-folder\" border=\"false\":::\n\n1. Введите `helloworld` имя приложения. Убедитесь, что используются только буквенно-цифровые символы. Выберите **ВВОД**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab.png\" alt-text=\"Снимок экрана, показывающий, где ввести имя приложения.\" border=\"false\":::\n\n    Приложение Teams вкладки создается через несколько секунд.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tap-app-created1.png\" alt-text=\"Снимок экрана: созданное приложение.\" border=\"false\":::\n\n    После создания приложения Teams Toolkit отображает следующее сообщение:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/preview-project.png\" alt-text=\"Предварительный Project.\" border=\"false\":::\n    \n    Вы можете выбрать **локальную отладку для** предварительного просмотра проекта. \n    \n    <details>\n    <summary>Краткий обзор создания Teams приложения.</summary>\n    Просмотрите этот краткий обзор для создания Teams приложения.\n\n    ![Создание приложения Teams](~/assets/videos/javascript-tab-app1.gif) </details>\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nИспользуйте для создания первого проекта интерфейс командной строки `teamsfx`. Начните с папки, в которой будет создана папка проекта.\n\n``` bash\nteamsfx new\n```\nС помощью интерфейса командной строки можно создать новое Teams приложения. Интерфейс командной строки позволяет ответить на ряд вопросов. Каждый вопрос содержит инструкцию по ответу на него.\n\nНапример, используйте клавиши со стрелками для выбора параметра. После выбора нажмите клавишу **ВВОД** , чтобы подтвердить его.\n\n1. Выберите **Создать приложение Teams**.\n1. Выберите **вкладку** .\n1. В качестве размещения на клиенте выберите **Azure**.\n1. Не выделяйте облачные ресурсы.\n1. Выберите **JavaScript** в качестве языка.\n1. Нажмите клавишу **ВВОД**, чтобы выбрать папку рабочей области по умолчанию.\n1. Введите `helloworld` имя приложения. Имя приложения должно содержать только буквенно-цифровые символы.\n\n  После того как вы ответите на все вопросы, будет создан проект.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Обзор исходного кода приложения табуляции\n\nTeams Toolkit предоставляет все компоненты для создания приложения. После создания проекта можно просмотреть папки и файлы проекта в области **обозревателя** Visual Studio Code.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-folder-structure-tab12.png\" alt-text=\"вкладка &quot;Структура&quot;\" border=\"true\":::\n\n\nХотя вы можете выбрать любую платформу пользовательского интерфейса (или не использовать), этот пример кода шаблона предоставляет шаблоны с React компонентов.\n\nПомимо других элементов в этой структуре каталогов, набор средств поддерживает:\n\n| Имя папки | Содержание |\n| --- | --- |\n| `.fx/configs` | Файлы конфигурации, которые пользователь может настроить для Teams приложения. |\n| - `.fx/configs/config.<envName>.json` | Файл конфигурации для каждой среды. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Файл параметров для подготовки Azure BICEP для каждой среды. |\n| - `.fx/configs/projectSettings.json` | Глобальные параметры проекта, которые применяются ко всем средам. |\n| - `.fx/states` | Подготовьте выходные данные, созданные Teams Toolkit.  Набор средств создает эту папку после подготовки ресурсов для приложения. |\n| - `.fx/states/state.<envName>.json` | Подготовка выходного файла для каждой среды. |\n| - `.fx/states/<env>.userdata` | Конфиденциальные данные пользователя для выходных данных подготовки для каждой среды. |\n| `tabs` | Код для функции tab, необходимой во время выполнения, например уведомление о конфиденциальности, условия использования и вкладки конфигурации. |\n| - `tabs/src/index.jsx` | Точка входа для интерфейсного приложения, где основной компонент приложения отображается с помощью `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Код для обработки маршрутизации URL-адресов в приложении. Он вызывает [SDK JavaScript для Microsoft Teams](../msteams-platform/tabs/how-to/using-teams-client-sdk.md), чтобы реализовать обмен сообщениями между вашим приложением и Teams. |\n| - `tabs/src/components/Tab.jsx` | Код для реализации пользовательского интерфейса приложения. |\n| - `tabs/src/components/TabConfig.jsx` | Код для реализации пользовательского интерфейса, который настраивает приложение. |\n| `templates/appPackage` | Файлы шаблона манифеста приложения и значки приложения: color.png и outline.png. |\n| - `templates/appPackage/manifest.template.json` | Манифест приложения для запуска приложения в локальной или удаленной среде.  |\n| `templates/azure` | Файлы шаблонов BICEP |\n\nПри добавлении облачной функции Teams Toolkit добавляет необходимые папки в проект. В `api` папке содержится код для любого Функции Azure записи.\n"
- title: Создание и запуск первого приложения табуляции
  durationInMinutes: 1
  content: "\nПосле настройки рабочей области проекта с Teams Toolkit создайте проект вкладки. Вам потребуется войти в свою учетную запись Microsoft 365 учетной записи.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Вход в учетную запись Microsoft 365 учетной записи\n\nИспользуйте учетную запись Microsoft 365 для входа в Teams. Если вы используете клиент Microsoft 365 разработчика, учетная запись администратора, настроенная при регистрации, является Microsoft 365 учетной записью разработчика.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Откройте Visual Studio Code.\n1. Щелкните значок Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.\n1. Выберите **\"Войти в M365\"**.\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись.\n\n1. Войдите в свою учетную Microsoft 365 учетной записи, используя свои учетные данные.\n1. Закройте браузер при появлении запроса и вернитесь к Visual Studio Code.\n1. Вернитесь к Teams Toolkit в Visual Studio Code.\n\n    В **разделе ACCOUNTS** на боковой панели отображается Microsoft 365 учетной записи. Teams Toolkit отображает включенную загрузку неопубликованных приложений, если для учетной записи Microsoft 365 включена загрузка неопубликованных приложений.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Снимок экрана: вход в Microsoft 365 Azure.\" border=\"false\":::\n\n    Теперь вы готовы создать приложение и запустить его в локальной среде!\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Войдите в Microsoft 365 с помощью Командной строки TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись. Войдите в учетную запись Azure, используя свои учетные данные. Закройте браузер при появлении запроса.\n\n2. Войдите в Azure с помощью Командной строки TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись. Войдите в учетную запись Azure, используя свои учетные данные. Закройте браузер при появлении запроса.\n\n    Имена входа учетной записи совместно используются Visual Studio Code и Интерфейс командной строки TeamsFx.\n\n    Теперь, когда среда разработки настроена, вы можете создавать, создавать и развертывать Teams приложения.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Создайте и запустите приложение локально в Visual Studio Code\n\nЧтобы создать и запустить приложение локально, выполните следующие действия.\n\n1. В Visual Studio Code **нажмите клавишу F5**, чтобы запустить приложение в режиме отладки.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Узнайте, что происходит при локальном запуске приложения в отладчике.</summary>\n\n    Если вам интересно, при нажатии клавиши **F5** Teams Toolkit:\n\n    1. Проверяет наличие следующих предварительных условий:\n      * Вы вошли с помощью учетной записи Microsoft 365 учетной записи.\n      * Загрузка неопубликованных приложений включена для Microsoft 365 учетной записи.\n      * Поддерживается Node.js установлена версия.\n      * Устанавливаются пакеты NPM для приложения табуляции.\n      * Сертификат разработки для localhost установлен.           \n      * Порт доступен для приложения вкладки.\n\n      > [!NOTE]\n      > Если Teams toolkit не может проверить определенное необходимое условие, вам будет предложено проверить его.\n\n    2. Регистрирует приложение в Azure AD и настраивает приложение.\n    3. Регистрирует приложение на портале Teams разработчика и настраивает приложение.\n    4. Запускает приложение вкладки.\n    5. Запускает Teams в веб-браузере и загрузка неопубликованного приложения табуляции.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Снимок экрана: нажатие клавиши F5.\":::\n\n    > [!NOTE]\n    > При первом запуске приложения скачиваются все зависимости и создается приложение. После завершения сборки откроется окно браузера. Этот процесс может занять 3–5 минут.\n\n    При необходимости набор средств предложит установить локальный сертификат. Этот сертификат позволяет Teams загружать приложение из `https://localhost`.\n\n1. Выберите **Да**, если появится следующий диалог:\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-warning.png\" alt-text=\"microsoft\" border=\"true\":::\n\n    Или нажмите **кнопку \"Продолжить**\" в зависимости от операционной системы:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Снимок экрана: запрос на установку SSL-сертификата, Teams загрузить приложение с localhost на Mac.\":::\n\n    Teams веб-клиент открывается в окне браузера.\n\n1. При появлении запроса войдите с помощью Microsoft 365 учетной записи.\n\n1. Выберите **\"Добавить**\" при появлении запроса на загрузку неопубликованного приложения Teams на локальном компьютере.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Добавление приложения в Teams\":::\n\n1. Поздравляем! Ваше первое приложение работает на Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-localdebug.png\" alt-text=\"Снимок экрана: готовое приложение\":::\n\n   Вы можете добавить функцию единого входа для получения сведений о пользователе. Вы можете выполнять обычные действия отладки, такие как задание точек останова, как если бы это было любое другое веб-приложение. Приложение поддерживает горячую перезагрузку. Если вы измените какой-либо файл в составе проекта, страница будет перезагружена.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Узнайте, как устранять неполадки, если приложение не выполняется локально.</summary>\n\n  Чтобы успешно запустить приложение в Teams, убедитесь, что вы включили загрузку неопубликованных приложений в Teams учетной записи. Дополнительные сведения о загрузке неопубликованных приложений см. в разделе \"Предварительные требования\".\n\n  </details>\n\n \n"
- title: Развертывание первого Teams приложения
  durationInMinutes: 1
  content: "\nВы узнали, как создавать, создавать и запускать Teams с помощью приложения TAB. Последним шагом является развертывание приложения в Azure.\n\nДавайте развернем первое приложение с возможностью tab в Azure с помощью Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Вход в учетную запись Azure\n\nИспользуйте эту учетную запись для доступа к порталу Microsoft Azure и подготовки новых облачных ресурсов для поддержки приложения.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Откройте Visual Studio Code.\n1. Откройте папку проекта, в которой вы создали приложение вкладки.\n1. Щелкните значок Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.\n1. Выберите **\"Войти в Azure\"**.\n\n    > [!TIP]\n    > Если у вас установлено расширение учетной записи Azure и используется та же учетная запись, этот шаг можно пропустить. Используйте ту же учетную запись, что и в других расширениях.\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись.\n1. Войдите в учетную запись Azure, используя свои учетные данные.\n1. Закройте браузер при появлении запроса и вернитесь к Visual Studio Code.\n\n    В **разделе ACCOUNTS** на боковой панели две учетные записи отображаются отдельно. В нем также перечислены доступные для использования подписки Azure. Убедитесь, что у вас есть по крайней мере одна доступная подписка Azure. В противном случае выйдите из системы и используйте другую учетную запись.\n\n    Теперь вы готовы развернуть приложение в Azure!\n\n    Поздравляем! Вы создали Teams приложения! \n    Теперь давайте рассмотрим, как развернуть одно из приложений в Azure с помощью Teams Toolkit.\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Войдите в Microsoft 365 с помощью Командной строки TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись. Войдите в учетную запись Azure, используя свои учетные данные. Закройте браузер при появлении запроса.\n\n2. Войдите в Azure с помощью Командной строки TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Откроется веб-браузер по умолчанию, позволяющий войти в учетную запись. Войдите в учетную запись Azure, используя свои учетные данные. Закройте браузер при появлении запроса.\n\n    Имена входа учетной записи совместно используются Visual Studio Code и Интерфейс командной строки TeamsFx.\n\n    Поздравляем! Вы создали Teams приложения! \n    Теперь давайте рассмотрим, как развернуть одно из приложений в Azure с помощью Teams Toolkit.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions-tab.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Узнайте, что происходит после развертывания приложения в Azure</summary>\n\n  До развертывания приложение работает локально:\n\n  * Серверная часть работает с использованием **Azure Functions Core Tools**.\n  * Конечная точка HTTP приложения, в которую Microsoft Teams загружает приложение, работает локально.\n\n  Развертывание выполняется в два этапа. Вы подготавливаете ресурсы в активной подписке Azure, а затем развертываете или отправляете серверный и внешний код приложения в Azure.\n\n  * При настройке серверная часть использует различные службы Azure, включая Служба приложений Azure и служба хранилища Azure.\n  * Клиентское приложение будет развернуто под учетной записью хранилища Azure, настроенной для статического размещения веб-сайтов.\n\n  </details>\n"
- title: Поздравляем!
  durationInMinutes: 1
  content: "\nВы сделали это!\n\nВы создали приложение вкладки.\n\nТеперь, когда вы узнали, как создать базовое приложение, можно перейти к созданию более сложных приложений. Для начала попробуйте добавить возможности в существующие приложения.\n\nЧтобы добавить возможности в существующее приложение:\n\n1. Выберите **\"Добавить компоненты**\" в разделе **\"** Разработка\" на боковой панели Teams Toolkit.\n\n1. Выберите возможность, которую вы хотите добавить в приложение.\n\nВот и все! Teams Toolkit добавляет шаблон для новой возможности в структуру каталогов приложения. Выполните процедуры сборки и развертывания приложения, и ваше приложение будет иметь несколько возможностей. \n\nВы завершили работу с руководством по созданию приложения табуляции с помощью JavaScript."
