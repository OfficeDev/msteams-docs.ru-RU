### YamlMime:Tutorial
title: Создайте свое первое приложение с помощью JavaScript
metadata:
  title: Hello World с JavaScript
  description: В этом руководстве вы научитесь создавать приложение Hello World с помощью JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Обзор "Назад к началу работы"
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: e6b437170764e09f9e7e220aeceb2fec26f2f61b
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721903"
items:
- durationInMinutes: 1
  content: "Начните Microsoft Teams разработку приложения с помощью первого Teams приложения. Создадим три Teams: приложение вкладки, приложение-бот и приложение для расширения сообщений. \n\nКаждое ваше приложение будет иметь возможность, которая поставляется со своим собственным пользовательским интерфейсом и UX:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции.\" border=\"false\":::\n\nВ этом руководстве вы узнаете:\n\n- Настройка нового проекта с помощью Teams набор средств.\n- Создание трех приложений с различными возможностями для каждой вкладки, бота и расширения сообщений.\n- Структура приложения:\n    - Часть вкладки с JavaScript с React.\n    - Остальные функции с Node.js.\n- Развертывание приложения\n"
- title: Предварительные требования
  durationInMinutes: 1
  content: "\nВот список средств, необходимых для создания и развертывания приложений.\n\n\n| &nbsp; | Установка | Для использования... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Среда запуска JavaScript с задней среду. Используйте последний выпуск LTS v14.|\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (рекомендуется) или [Google Chrome](https://www.google.com/chrome/) | Браузер с средствами разработчика. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Среды сборки JavaScript, TypeScript или SharePoint Framework (SPFx) Используйте версию 1.55 или более поздней версии. |\n| **Необязательное** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools для Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [и Azure CLI](/cli/azure/install-azure-cli) | Средства Azure для доступа к хранимых данных или развертывания облачной Teams приложения в Azure. |\n| &nbsp; | [React средства разработчика для Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) Или [React средства разработчика для edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Расширение браузера DevTools для библиотеки JavaScript React с открытым исходным кодом. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer — средство на основе браузера, которое позволяет запускать запрос из microsoft Graph данных. |\n| &nbsp; | [Портал разработчиков Teams](https://dev.teams.microsoft.com/) | Веб-портал для настройки, управления и распространения Teams, в том числе в организации или Teams магазине. |\n| &nbsp; | **Visual Studio Code Расширения** | &nbsp; |\n| &nbsp; | [Основные средства Azure Functions](/azure/azure-functions/functions-run-local) | Компоненты backend локально во время локального отлаженного запуска. Он включает помощников проверки подлинности для запуска служб в Azure. Он установлен в каталоге проекта (с помощью `devDependencies` npm). |\n| &nbsp; | [SDK .NET](/dotnet/core/install/) | Настраиваемые привязки для локальных отладок и развертывания приложений Azure Functions. Если вы не установили SDK .NET 3.1 (или более поздней версии) глобально, портативная версия может быть установлена. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams функции приложения (беседные боты и расширения обмена сообщениями) требуют входящие подключения. Туннель соединяет систему разработки с Teams. Это не обязательно для приложений, которые включают только вкладки. Этот пакет устанавливается в каталоге проекта (с помощью `devDependencies` npm). |\n\n\n> [!TIP]\n> Если вы работаете с данными microsoft Graph, вы должны узнать о и закладки Microsoft Graph Explorer. Этот инструмент на основе браузера позволяет запрашивать microsoft Graph за пределами приложения.\n\n\n## <a name=\"prepare-development-environment\"></a>Подготовка среды разработки\n\nПосле установки необходимых средств установите среду разработки.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Установка Teams набор средств\n\nЭтот Teams набор средств упрощает процесс разработки с помощью средств для обеспечения и развертывания облачных ресурсов для приложения, публикации в Teams магазине и других. \n\nИнструментарий можно использовать с Visual Studio Code или CLI (интерфейс командной строки), называемый `TeamsFx` .\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Откройте Visual Studio Code и выберите представление **Расширения** **(Ctrl+Shift+X**  /  **⌘⇧-X** или **Расширение > View).**\n1. В поле поиска введите **Teams набор средств**.\n1. Выберите **Установите** рядом с Teams набор средств.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"На рисунке показана Teams набор средств расширения.\" border=\"false\":::\n\n    Значок Teams набор средств появится на Visual Studio Code панели после установки.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"На рисунке показан значок Teams набор средств на Visual Studio Code панели.\" border=\"false\":::\n\nВы также можете найти Teams набор средств на Visual Studio Code [Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nЧтобы установить CLI TeamsFx, используйте диспетчер `npm` пакетов:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nВ зависимости от конфигурации может потребоваться использовать для `sudo` установки CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nЭто условие чаще встречается в системах Linux и macOS.\n\nУбедитесь, что вы добавляете глобальный кэш npm в path. Этот шаг обычно делается как часть Node.js установки.  \n\nCLI можно использовать с `teamsfx` командой. Убедитесь, что команда работает с помощью `teamsfx -h` запуска .\n\n> [!CAUTION]\n> Прежде чем запустить TeamsFx в терминалах PowerShell, необходимо включить политику \"удаленного подписанного\" выполнения для PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Настройка клиента Teams разработки\n\nКлиент **—** это пространство или контейнер для организации в Teams, где вы общались, делитесь файлами и запускали собрания. Это пространство также является местом, где вы перегружаете и тестировать приложение. Проверьте, готовы ли вы к разработке с клиентом.\n\n### <a name=\"enable-sideloading-option\"></a>Включить параметр sideloading\n\nПосле создания приложения необходимо загрузить приложение в Teams без его распространения. Этот процесс называется боковой загрузкой. Во входе в Microsoft 365 учетную запись для просмотра этого параметра.\n  \nУ вас уже есть клиент и есть ли у вас доступ к администратору? Давайте проверим, действительно ли вы это делаете!\n\nПроверка возможности загрузки приложений в Teams:\n\n1. В клиенте Teams выберите **значок Store.**\n1. Выберите **Управление приложениями.**\n1. Найди возможность Upload **настраиваемого приложения.** Если вы видите вариант, включена загрузка приложений.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"На рисунке показана возможность загрузки настраиваемого приложения в Teams.\":::\n\n    > [!NOTE]\n    > Если у вас нет возможности загрузить настраиваемые приложения, поговорите с Teams администратором.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Создание бесплатного клиента Teams разработчика (необязательно)\n\nЕсли у вас нет учетной записи Teams разработчика, ее можно получить бесплатно. Присоединяйтесь к Microsoft 365 разработчику!\n\n1. Перейдите в [Microsoft 365 разработчика](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Выберите **Join Now** и следуйте инструкциям на экране.\n1. На экране приветствия выберите **настройка подписки E5.**\n1. Настройка учетной записи администратора. После завершения отображается следующий экран.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Пример того, что вы видите после регистрации на программу Microsoft 365 разработчика.\":::\n\n1. Вопишитесь Teams с помощью только что настроенной учетной записи администратора. Убедитесь, что **Upload настраиваемый** параметр приложения в Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Получить бесплатную учетную запись Azure\n\nЕсли вы хотите провести свое приложение или получить доступ к ресурсам в Azure, необходимо иметь подписку Azure. [Создайте бесплатную учетную запись](https://azure.microsoft.com/free/) перед началом работы.\n\nТеперь у вас есть все средства и настройка учетной записи. Далее давайте настроим среду разработки и начнем строить!\n"
- title: Создание рабочей области проекта для приложения вкладки
  durationInMinutes: 1
  content: "\nНачните Microsoft Teams разработку приложения, создав свое первое приложение. Это приложение использует возможность Tab.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции. Вкладка выделена.\" border=\"false\":::\n\nНа этой странице вы узнаете:\n1. [Настройка нового проекта Tab с помощью Teams набор средств](#create-your-tab-project-workspace)\n1. [О структуре каталога вашего приложения](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Создание рабочей области проекта вкладки\n\nЕсли необходимые условия на месте, давайте начнем!\n\n> [!NOTE]\n> Пользовательский Visual Studio Code отображается с Mac. Он может отличаться в зависимости от операционной системы, набор средств версии и среды.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на Visual Studio Code панели.\n\n1. Выберите **Создать приложение Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\" border=\"false\":::.\n\n1. Выберите **Создание нового Teams для** создания приложения с помощью Teams набор средств.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Запуск мастера для создания проекта\" border=\"false\":::\n\n1. **Убедитесь, что** приложение на основе пользовательского интерфейса tab выбрано в качестве возможности, которую необходимо создать в приложении. Нажмите кнопку **ОК**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tab.png\" alt-text=\"Выбор возможностей приложения\" border=\"false\":::\n\n1. Выберите **Azure** в качестве типа размещения Frontend.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-hosting.png\" alt-text=\"Выбор типа хостинга\" border=\"false\":::\n\n    Если вы хотите, чтобы ваше приложение SharePoint, вы можете выбрать SharePoint Framework (SPFx) в этом варианте.\n\n1. Выберите **ОК** для продолжения. Для этого руководства не нужны другие облачные ресурсы.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-cloud-resources.png\" alt-text=\"Облачные ресурсы\" border=\"false\":::\n\n1. Выберите **JavaScript** в качестве языка.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"false\":::\n\n1. Выберите папку рабочего пространства для приложения. Teams набор средств создает структуру каталога приложения в этом рабочем пространстве для проекта.\n\n1. Введите `helloworld` имя приложения. Убедитесь, что вы используете только буквы. Выберите **Ввод** для продолжения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-name.png\" alt-text=\"Снимок экрана, показывающий, где ввести имя приложения.\" border=\"false\":::\n\n    Приложение Teams создается за несколько секунд.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/app-created.png\" alt-text=\"Снимок экрана, показывающий созданное приложение.\" border=\"false\":::\n\n    <details>\n    <summary>Краткий обзор создания Teams приложения.</summary>\n    Просмотрите краткое резюме для создания Teams приложения.\n\n    ![Создание приложения Teams ](~/assets/videos/javascript-tab-app.gif) </details>\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nИспользуйте для создания первого проекта интерфейс командной строки `teamsfx`. Начните с папки, в которой будет создана папка проекта.\n\n``` bash\nteamsfx new\n```\n\nCLI можно использовать для создания нового Teams приложения. CLI приводит вас к ряду вопросов. Каждый вопрос содержит инструкцию по его ответу.\n\nНапример, для выбора параметра используйте клавиши со стрелками. После выбора выберите **Ввод,** чтобы подтвердить его.\n\n1. Выберите **Создать приложение Teams**.\n1. Выберите возможность **Tab.**\n1. В качестве размещения на клиенте выберите **Azure**.\n1. Не выбирайте облачные ресурсы.\n1. Выберите **JavaScript** в качестве языка.\n1. Нажмите клавишу **ВВОД**, чтобы выбрать папку рабочей области по умолчанию.\n1. Введите `helloworld` имя приложения. Имя приложения должно иметь только буквы.\n\n  После ответа на все вопросы создается проект.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Знакомство с исходным кодом\n\nTeams набор средств предоставляет все компоненты для создания приложения. После создания проекта можно просмотреть папки и файлы проекта в области Explorer Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hw-folder-structure.png\" alt-text=\"Project для приложения с возможностями Tab в Visual Studio Code.\":::\n\nХотя вы можете свободно выбирать какие-либо рамки пользовательского интерфейса (или не использовать их), в этом примере шаблонный код предоставляет леса с React компонентами.\n\nСреди других элементов в структуре каталога набор средств:\n\n- `.fx`Состояние приложения в этой папке.\n- `appPackage`: Значки приложения в `appPackage` папке. Значки `color.png` и `outline.png` .\n- `manifest.source.json`: Манифест приложения для публикации на портале разработчиков для Teams `manifest.source.json` в .\n- `settings.json`: Параметры приложения, выбранные во время создания проекта, в `settings.json` .\n- Код для функции Tab в `Tabs` папке. Некоторые важные файлы в этой папке:\n\n  - `tabs/src/index.jsx` — точка входа приложения на клиентской стороне, где проводится отрисовка основного компонента `App` с помощью `ReactDOM.render()`.\n  - `tabs/src/components/App.jsx` обрабатывает маршрутику URL-адресов в приложении. Он вызывает [Microsoft Teams Клиента JavaScript, чтобы](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) установить связь между приложением и Teams.\n  - `tabs/src/components/Tab.jsx` содержит код для реализации пользовательского интерфейса вашего приложения.\n  - `tabs/src/components/TabConfig.jsx` содержит код для реализации пользовательского интерфейса настройки вашего приложения.\n  - В этой папке также хранится код вкладок, необходимый во время работы. Некоторые из них — это уведомление о конфиденциальности, условия использования и вкладки конфигурации.\n\nПри добавлении облачной функциональности Teams набор средств в проект добавляются необходимые папки. Папка `api` содержит код для любых лазурных функций, которые вы пишете.\n"
- title: Создание и запуск первого приложения вкладки
  durationInMinutes: 1
  content: "\nПосле создания рабочей области проекта с помощью Teams набор средств создайте проект вкладки. Вам потребуется войти в свою Microsoft 365 учетную запись.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Во входе в Microsoft 365 учетную запись\n\nИспользуйте свою Microsoft 365 учетную запись, чтобы войти в Teams. Если вы используете клиента Microsoft 365 разработчика, учетная запись администратора, созданная при регистрации, Microsoft 365 учетная запись.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.  \n1. Выберите **вход в M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Снимок экрана, показывающий, где войти в Microsoft 365 Azure.\" border=\"false\":::\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись.\n\n1. Вопишитесь в свою Microsoft 365 учетную запись с помощью учетных данных.\n1. Закрой браузер при запросе и вернись в Visual Studio Code.\n1. Возвращайся Teams набор средств в Visual Studio Code.\n\n    В **разделе ACCOUNTS** боковой панели показано имя Microsoft 365 учетной записи.\n\n    Теперь вы готовы создать приложение и запустить его локально!\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Во входе Microsoft 365 с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n2. Во входе в Azure с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n    Логины учетных записей делятся между Visual Studio Code и CLI TeamsFx.\n\n    Теперь, когда среда разработки настроена, можно создать, создать и развернуть первое Teams приложение.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Создайте и запустите приложение локально в Visual Studio Code\n\nЧтобы создать и запустить приложение локально, выполните следующие действия.\n\n1. Из Visual Studio Code выберите **F5 для** запуска приложения в режиме отлаживания.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Узнайте, что происходит при локальном запуске приложения в отладчике.</summary>\n\n    Если вам интересно, при нажатии клавиши **F5** Teams набор средств:\n\n    - Регистрирует приложение с помощью Azure Active Directory. Это приложение имеет разрешения для расположения, которое загружается из приложения, и дополнительных ресурсов.\n    - *Sideloads* app in Teams.\n    - Запускает работу backend приложения локально с помощью основных средств [Azure Function.](/azure/azure-functions/functions-run-local?#start)\n    - Запускает переднюю часть приложения, локализованную на локальном уровне.\n    - Начинается Microsoft Teams в веб-браузере с командой, Teams в сторону загрузить приложение из `https://localhost:3000/tab` . Этот URL-адрес зарегистрирован в манифесте приложения.\n    - Манифест приложения создается и существует на портале разработчика для Teams. Teams использует манифест приложения, чтобы сообщить подключенным клиентам, откуда загружать приложение.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Снимок экрана, показывающий, когда клавиша F5 нажата.\":::\n\n    > При первом запуске приложения загружаются все зависимости, и приложение построено.  Окно браузера открывается после завершения сборки. Этот процесс может занять 3-5 минут.\n\n    В набор средств при необходимости вы можете установить локальный сертификат. Этот сертификат позволяет Teams загружать приложение из `https://localhost`.\n\n1. Выберите **Да,** если появится следующий диалог:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Снимок экрана, показывающий запрос на установку сертификата SSL, Teams загрузку приложения из localhost.\":::\n\n    Или выберите **Продолжить,** в зависимости от операционной системы:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Снимок экрана с указанием запроса на установку сертификата SSL для Teams загрузки приложения с локального сайта на Mac.\":::\n\n    Teams веб-клиент открывается в окне браузера.\n\n1. Впишитесь в Microsoft 365 учетную запись, если вам будет предложено.\n\n1. Выберите **Добавить** при запросе на загрузку приложения Teams локальной машине.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-add.png\" alt-text=\"Добавьте приложение в Teams\":::\n\n1. Выберите версию веб-приложения, если вам будет предложено перейти на Teams рабочего стола. Запустите приложение в Teams клиенте. Код HTML, CSS и JavaScript можно увидеть в стандартной среде веб-разработки.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-and-pick-webapp.png\" alt-text=\"Снимок экрана: выбор веб-версии Teams при запуске\":::\n\n1. Поздравляем, ваше первое приложение работает на Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-congratulations.png\" alt-text=\"Снимок экрана: готовое приложение\":::\n\n    Вы можете делать обычные действия отладки, такие как установка точек остановок, как если бы это было любое другое веб-приложение. Приложение поддерживает горячую перезагрузку. Если вы измените какой-либо файл в составе проекта, страница будет перезагружена.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Узнайте, как устранить неполадки, если приложение не работает локально.</summary>\n\n  Чтобы успешно запустить приложение в Teams, убедитесь, что вы включили Teams учетную запись. Дополнительные статьи о боковой загрузке можно узнать в разделе Необходимые условия.\n\n  </details>\n\n  Вы знаете, как использовать набор средств, чтобы настроить приложение вкладки и запустить его локально. Далее давайте научимся создавать чат-бот с набор средств!\n"
- title: Создание рабочей области проекта для приложения-бота
  durationInMinutes: 1
  content: "\nВы создали приложение вкладки. Теперь создадим первое бот-приложение.\n\nВозможность бота для Teams создает чат-бот или чат-бот. Он используется для выполнения простых и автоматизированных задач, например для предоставления обслуживания клиентов. Бот разговаривает с веб-службой и помогает использовать ее предложения. Вы можете получить прогноз погоды, сделать резервирование или любую другую службу, предложенную с помощью разговорного бота.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции. Бот выделен.\" border=\"false\":::\n\nКак вы уже подготовили для создания этих приложений, вы можете настроить новый проект Teams для создания приложения-бота.\n\nВ этом руководстве вы узнаете:\n\n1. [Настройка нового проекта Bot с помощью Teams набор средств.](#create-your-bot-project-workspace)\n1. [О структуре каталогов проекта приложения.](#take-a-tour-of-the-source-code)\n\n> [!IMPORTANT]\n> В настоящее время боты доступны в облако сообщества для государственных организаций (GCC), но недоступны в GCC-High и Министерстве обороны (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Создание рабочего пространства проекта-бота\n\nЕсли необходимые условия на месте, давайте начнем!\n\n> [!NOTE]\n> Пользовательский Visual Studio Code отображается с Mac. Он может отличаться в зависимости от операционной системы, набор средств версии и среды.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на Visual Studio Code панели.\n\n1. Выберите **Создать приложение Teams**. Пользовательский интерфейс может выглядеть иначе в зависимости от операционной системы.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\" border=\"false\":::.\n\n1. Выберите **Создание нового Teams для** создания приложения с помощью Teams набор средств.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Запуск мастера для создания проекта\" border=\"false\":::\n\n1. Выберите **Бот,** высекить **вкладку** и выберите **ОК.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-capabilities.png\" alt-text=\"Снимок экрана: добавление возможностей в новое приложение.\" border=\"false\":::\n\n1. Выберите **JavaScript** в разделе **Язык программирования.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"false\":::\n\n1. Выберите папку рабочей области. Teams набор средств создает папку в папке рабочего пространства для проекта приложения.\n\n1. Введите подходящее имя для приложения, например `hellobot`. Убедитесь, что имя вашего приложения является альфа-числом. Выберите **Ввод** для продолжения.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/enter-name.png\" alt-text=\"Снимок экрана, показывающий, где ввести имя приложения.\" border=\"false\":::\n\n    Ваше Teams приложение с функцией Bot создается за несколько секунд.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-created-bot.png\" alt-text=\"Снимок экрана, показывающий созданное приложение.\" border=\"false\":::\n\n\n<details>\n<summary>Краткий обзор создания Teams приложения.</summary>\nПросмотрите краткое резюме для создания Teams приложения.\n\n![Создание приложения Teams](~/assets/videos/javascript-bot-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nИспользуйте для создания первого проекта интерфейс командной строки `teamsfx`.  Начните с папки, в которой будет создана папка проекта.\n\n``` bash\nteamsfx new\n```\n\nCLI можно использовать для создания нового Teams приложения. CLI приводит вас к ряду вопросов. Каждый вопрос содержит инструкцию по его ответу.\n\nНапример, для выбора параметра используйте клавиши со стрелками. После выбора выберите **Ввод,** чтобы подтвердить его.\n\n1. Выберите **Создать приложение Teams**.\n1. Выберите **вкладку Bot** и deselect. \n1. Выберите **JavaScript** в качестве языка.\n1. Выберите **Ввод,** чтобы выбрать папку рабочего пространства по умолчанию.\n1. Введите подходящее имя для приложения, например `HelloBot`.  Имя приложения должно состоять только из букв и цифр.\n\nПосле ответа на все вопросы создается проект.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Знакомство с исходным кодом\n\nПосле окончания строительных лесов просмотреть каталоги и файлы проектов в области Explorer Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-code-tree.png\" alt-text=\"Project для бота в Visual Studio Code.\" border=\"false\":::\n\nСреди других элементов в структуре каталога набор средств:\n- `bot`Код бота хранится в `bot` каталоге.\n- Основная `bot/teamsBot.js` точка входа для бота.\n\n> [!Tip]\n> Перед интеграцией своего первого бота в Teams ознакомьтесь с ботами за пределами Teams.\n"
- title: Создание и запуск первого приложения-бота
  durationInMinutes: 1
  content: "\nПосле создания рабочей области проекта с помощью Teams набор средств создайте бот-проект. Убедитесь, что вы вписались в свою Microsoft 365 учетную запись.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Во входе в Microsoft 365 учетную запись\n\nИспользуйте эту учетную запись для регистрации Teams. Если вы используете клиента Microsoft 365 разработчика, учетная запись администратора, созданная при регистрации, Microsoft 365 учетная запись.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.  \n1. Выберите **вход в M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Снимок экрана, показывающий, где войти в Microsoft 365 Azure.\" border=\"false\":::\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись.\n\n1. Вопишитесь в свою Microsoft 365 учетную запись с помощью учетных данных.\n1. Закрой браузер при запросе и вернись в Visual Studio Code.\n1. Возвращайся Teams набор средств в Visual Studio Code.\n\n    В **разделе ACCOUNTS** боковой панели показано имя Microsoft 365 учетной записи.\n\n    Теперь вы готовы создать приложение и запустить его локально!\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Во входе Microsoft 365 с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n2. Во входе в Azure с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n    Логины учетных записей делятся между Visual Studio Code и CLI TeamsFx.\n\n    Теперь, когда среда разработки настроена, можно создать, создать и развернуть первое Teams приложение.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Сборка и локальное запуск первого приложения-бота\n\nСоздание и запуск приложения в локальной среде:\n\n1. Выберите **F5** в Visual Studio Code для запуска приложения в режиме отлаживания.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Узнайте, что происходит при локальном запуске приложения в отладчике.</summary>\n\n    Если вам интересно, при нажатии **клавиши F5** Teams набор средств:\n\n    - Регистрирует приложение с помощью Azure Active Directory. Это приложение имеет разрешения для расположения, которое загружается из приложения, и дополнительных ресурсов.\n    - *Sideloads* app in Teams.\n    - Запускает работу backend приложения локально с помощью основных средств [Azure Function.](/azure/azure-functions/functions-run-local?#start)\n    - Запускает переднюю часть приложения, локализованную на локальном уровне.\n    - Начинается Microsoft Teams в веб-браузере с командой, Teams в сторону загрузить приложение из `https://localhost:3000/tab` . Этот URL-адрес зарегистрирован в манифесте приложения.\n    - Манифест приложения создается и существует на портале разработчика для Teams. Teams использует манифест приложения, чтобы сообщить подключенным клиентам, откуда загружать приложение.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Снимок экрана, показывающий, когда клавиша F5 нажата.\":::\n\n    > При первом запуске приложения загружаются все зависимости, и приложение построено. По завершении сборки автоматически откроется окно браузера. Этот процесс может занять 3-5 минут.\n\n    Веб-браузер начинает запускать приложение.\n\n1. Впишитесь в Microsoft 365 учетную запись, если вам будет предложено.\n\n    > Вам может потребоваться открыть Teams, выберите **Отмена,** чтобы оставаться в браузере.\n\n1. Выберите **Добавить** при запросе на загрузку приложения Teams локальной машине.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/install-bot.png\" alt-text=\"Снимок экрана, показывающий, что бот добавляется в Teams клиенте.\":::\n\n    Теперь бот успешно работает на Teams! После загрузки приложения открывается сеанс чата с ботом.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/run-bot.png\" alt-text=\"Снимок экрана, показывающий, как бот работает на Teams клиенте.\":::\n\n    Вы можете ввести, чтобы показать карточку введения, и введите, чтобы перейти к адаптивной документации командной карты `welcome` `learn` и бота.\n\n    Вы можете делать обычные действия отладки, такие как установка точек разрыва, как и в любом другом веб-приложении. Откройте файл `bot/teamsBot.js` и найдите метод `onMessage()`. Установите точку разлома в любом случае. Затем введите какой-нибудь текст.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Узнайте, как устранить неполадки, если приложение не работает локально.</summary>\n\n  Чтобы успешно запустить приложение в Teams, убедитесь, что вы включили Teams учетную запись. Дополнительные статьи о боковой загрузке можно узнать в разделе Необходимые условия.\n\n  > [!IMPORTANT]\n  > В настоящее время приложения для облако сообщества для государственных организаций (GCC), GCC High и DOD.\n\n  > [!TIP]\n  > Проверьте, есть ли проблемы перед боковой загрузкой приложения с помощью средства [проверки приложения.](https://dev.teams.microsoft.com/appvalidation.html) Этот инструмент включен в набор инструментов. Исправление ошибок для боковой загрузки приложения.\n  </details> \n"
- title: Создание рабочей области проекта для приложения расширения сообщений
  durationInMinutes: 1
  content: "\nВы создали бот-приложение. Давайте создадим первое приложение для расширения сообщений.\n\nВозможности расширения сообщений позволяют взаимодействовать с веб-службой. Используйте область композиции, командное поле или сообщение в Teams клиенте для поиска и инициировать действия во внешней системе.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"Схема, показывающая, что это приложение имеет три функции. Расширение сообщений выделено.\" border=\"false\":::\n\nСуществует два типа **расширений для сообщений** Teams.\n\n- [Команды поиска.](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md)Вы можете искать внешние системы. Затем вы можете вставить его результаты в сообщение в виде карточки.\n- [Команды действий.](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md)Вы можете представить пользователям модальные всплывающие данные для сбора или отображения сведений. Затем можно обработать их взаимодействие и отправить сведения в Teams.\n\nСоздадим приложение расширения сообщения с командой *поиска.* Используйте его для поиска внешних данных и вставки результатов в сообщение в Teams клиенте.\n\nКак вы уже подготовили для создания этих приложений, вы можете настроить новый проект Teams для создания приложения расширения сообщений.\n\n> [!NOTE]\n> Расширения для сообщений используют боты для диалога между пользователем и кодом.\n\n\nВ этом руководстве вы узнаете:\n\n1. [Настройка нового проекта расширения сообщений с помощью Teams набор средств.](#create-your-message-extension-project-workspace)\n1. [О структуре каталогов проекта приложения.](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-message-extension-project-workspace\"></a>Создание рабочей области проекта расширения сообщений\n\nЕсли необходимые условия на месте, давайте начнем!\n\n> [!NOTE]\n> Пользовательский Visual Studio Code отображается с Mac. Он может отличаться в зависимости от операционной системы, набор средств версии и среды.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на Visual Studio Code панели.\n\n1. Выберите **Создание Project** с левой стороны набор средств.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Расположение ссылки &quot;Создать проект&quot; на боковой панели набора средств Teams\" border=\"false\":::.\n\n1. Выберите **создание Project,** чтобы создать приложение с помощью Teams набор средств.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Запуск мастера для создания проекта\" border=\"false\":::\n\n1. Выберите **расширение сообщений,** отсеять **вкладку** и выбрать **ОК.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-msgext.png\" alt-text=\"Снимок экрана: добавление возможностей в новое приложение.\" border=\"false\":::\n\n1. Выберите **JavaScript** в качестве языка.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Снимок экрана: выбор языка.\" border=\"false\":::\n\n1. Выберите папку рабочей области. Папка создается в папке рабочего пространства для проекта.\n\n1. Введите подходящее имя для приложения. Убедитесь, что имя приложения является альфа-числом. Выберите **Ввод** для продолжения.\n\n    Teams набор средств создает приложение за несколько секунд.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created.png\" alt-text=\"Снимок экрана, показывающий созданное приложение.\" border=\"false\":::\n\n  <details>\n  <summary>Краткий обзор создания Teams приложения.</summary>\n  Просмотрите краткое резюме для создания Teams приложения.\n\n  ![Создание приложения Teams](~/assets/videos/javascript-msg-ext-app.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cli)\n\nИспользуйте для создания первого проекта интерфейс командной строки `teamsfx`.  Начните с папки, в которой будет создана папка проекта.\n\n``` bash\nteamsfx new\n```\n\nCLI можно использовать для создания нового Teams приложения. CLI приводит вас к ряду вопросов. Каждый вопрос содержит инструкцию по его ответу.\n\nНапример, для выбора параметра используйте клавиши со стрелками. После выбора выберите **Ввод,** чтобы подтвердить его.\n\n\n1. Выберите **Создать приложение Teams**.\n1. Выберите **вкладку Расширение сообщений** **и** выселку.\n1. Выберите **JavaScript** в качестве языка.\n1. Выберите **Ввод,** чтобы выбрать папку рабочего пространства по умолчанию.\n1. Введите подходящее имя для приложения, например `HelloMsgExtn`.  Имя приложения должно состоять только из букв и цифр.\n\n  После ответа на все вопросы создается проект.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Знакомство с исходным кодом\n\nВ расширении сообщения используется Bot Framework. Он используется для взаимодействия со службой с помощью беседы. После окончания строительных лесов просмотреть каталоги и файлы проектов в области Explorer Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/code-tree.png\" alt-text=\"Макет файла проекта бота\" border=\"false\":::\n\n- `bot`Код бота хранится в `bot` каталоге.\n- `bot/messageExtensionBot.js` — это главная точка входа для расширения для сообщений.\n\n> [!Tip]\n> Ознакомьтесь с ботами и расширением сообщений за пределами Teams перед интеграцией бота в Teams.\n"
- title: Создание и запуск первого приложения расширения сообщений
  durationInMinutes: 1
  content: "\nПосле создания рабочей области проекта с помощью Teams набор средств создайте проект вкладки. Вам потребуется войти в свою Microsoft 365 учетную запись.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Во входе в Microsoft 365 учетную запись\n\nИспользуйте эту учетную запись для регистрации Teams. Если вы используете клиента Microsoft 365 разработчика, учетная запись администратора, созданная при регистрации, Microsoft 365 учетная запись.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Откройте Visual Studio Code.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.  \n1. Выберите **вход в M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Снимок экрана, показывающий, где войти в Microsoft 365 Azure.\" border=\"false\":::\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись.\n\n1. Вопишите в свою Microsoft 365 учетную запись.\n1. Закрой браузер при запросе и вернись в Visual Studio Code.\n1. Возвращайся Teams набор средств в Visual Studio Code.\n\n    В **разделе ACCOUNTS** боковой панели показано имя Microsoft 365 учетной записи.\n\n    Теперь вы готовы создать приложение и запустить его локально!\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Во входе Microsoft 365 с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n2. Во входе в Azure с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n    Логины учетных записей делятся между Visual Studio Code и CLI TeamsFx.\n\n    Теперь, когда среда разработки настроена, можно создать, создать и развернуть первое Teams приложение.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Создайте и запустите приложение локально в Visual Studio Code\n\nЧтобы создать и запустить приложение локально, выполните следующие действия.\n\n1. Выберите **F5** в Visual Studio Code для запуска приложения в режиме отлаживания.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Узнайте, что происходит при локальном запуске приложения в отладчике.</summary>\n\n    При выборе **F5** Teams набор средств:\n\n    1. Регистрирует приложение с помощью Azure Active Directory.\n    1. Регистрирует приложение для \"боковой загрузки\" в Microsoft Teams.\n    1. Запускает локализованную работу backend приложения с помощью основных средств [Azure Function.](/azure/azure-functions/functions-run-local?#start)\n    1. Запускает туннель ngrok, чтобы Teams взаимодействовать с приложением.\n    1. Начинается Microsoft Teams с командой Teams для загрузки приложения.\n\n    </details>\n\n    > При первом запуске приложения загружаются все зависимости, и приложение построено. Окно браузера открывается после завершения сборки. Для завершения может потребоваться от 3 до 5 минут.\n\n      Teams открывается в веб-браузере.\n    1. Выберите **Отмена,** чтобы оставаться в браузере, если вам предложено открыть Microsoft Teams.\n    1. Впишитесь в Microsoft 365 учетную запись, если вам будет предложено.\n    1. Выберите **Добавить,** чтобы добавить приложение в свою учетную запись.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/launch-web-browser-add.png\" alt-text=\"Снимок экрана, который показывает подтверждение того, что приложение добавлено\" border=\"false\":::\n\n        Приложение добавляется в Teams и загружается.\n\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Узнайте, как устранить неполадки, если приложение не работает локально.</summary>\n\n    Чтобы запустить приложение в Teams, необходимо иметь учетную запись Microsoft 365 разработки, которая позволяет загрузку приложения в сторону. Дополнительные статьи о боковой загрузке можно узнать в разделе Необходимые условия.\n\n### <a name=\"try-your-message-extension\"></a>Попробуйте расширение сообщения \n\nВыполните следующие действия в Teams клиенте, чтобы включить добавленную функцию расширения сообщений:\n\n1. Запустите расширение сообщения с трех точек в области составления.\n1. Перейдите в **чат** или **Teams** канал и вйдите в область составить сообщение.\n1. Запустите расширение сообщения из трех точек в нижней части области составления.\n1. Выберите установленное приложение расширения сообщений.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-open.png\" alt-text=\"Снимок экрана, на который показано, как открыть приложение расширения обмена сообщениями\" border=\"false\":::\n\n    В этом примере приложение позволяет искать пакеты npm с открытым исходным кодом из реестра программного обеспечения.\n\n1. Введите строку поиска в поле поиска, например \"cli\". Вы получите список совпадающих элементов:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-search.png\" alt-text=\"Снимок экрана, на который показано, как использовать пример приложения\" border=\"false\":::\n\n1. Выберите один из результатов поиска. Он будет отображаться в области составить, чтобы вы могли отправить результат на канал.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-result.png\" alt-text=\"Снимок экрана, отображает результат поиска\" border=\"false\":::\n\n    Теперь вы научились создавать и запускать базовое расширение сообщений!\n"
- title: Развертывание первого Teams приложения
  durationInMinutes: 1
  content: "\nВы научились создавать, создавать и запускать Teams с возможностями расширения вкладок, ботов и сообщений. Последний шаг — развертывание приложения в Azure.\n\nДавайте развернем первое приложение с возможностью Tab в Azure с помощью Teams набор средств.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Вход в учетную запись Azure\n\nИспользуйте эту учетную запись для доступа к порталу Azure и предоставления новых облачных ресурсов для поддержки приложения.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Откройте Visual Studio Code.\n1. Откройте папку проекта, в которой создано приложение вкладки.\n1. Выберите значок Teams набор средств :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: на боковой панели.  \n1. Выберите **вход в Azure.**\n\n    > [!TIP]\n    > Если у вас установлено расширение учетной записи Azure и используется та же учетная запись, вы можете пропустить этот шаг. Используйте ту же учетную запись, что и в других расширениях.\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись.\n1. Вопишите в свою учетную запись Azure с помощью учетных данных.\n1. Закрой браузер при запросе и вернись в Visual Studio Code.\n\n    Раздел **ACCOUNTS** боковой панели отображает две учетные записи отдельно. В нем также перечислены доступные для использования подписки Azure. Убедитесь, что у вас есть по крайней мере одна доступная подписка Azure. Если нет, выпишитесь и используйте другую учетную запись.\n\n    Теперь вы готовы развернуть приложение в Azure!\n\n    Поздравляем, вы создали три типа Teams приложений! \n    Теперь давайте рассмотрим, как развернуть одно из приложений в Azure с помощью Teams набор средств.\n\n# <a name=\"command-line\"></a>[Командная строка](#tab/cline)\n\n1. Во входе Microsoft 365 с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n2. Во входе в Azure с CLI TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Веб-браузер по умолчанию открывается, чтобы позволить вам войти в учетную запись. Вопишите в свою учетную запись Azure с помощью учетных данных. Закрой браузер, когда вам будет предложено.\n\n    Логины учетных записей делятся между Visual Studio Code и CLI TeamsFx.\n\n    Поздравляем, вы создали три типа Teams приложений! \n    Теперь давайте рассмотрим, как развернуть одно из приложений в Azure с помощью Teams набор средств.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Узнайте, что происходит после развертывания приложения в Azure</summary>\n\n  До развертывания приложение работает локально:\n\n  * Серверная часть работает с использованием **Azure Functions Core Tools**.\n  * Конечная точка HTTP приложения, в которую Microsoft Teams загружает приложение, работает локально.\n\n  Развертывание — это двухшаговая процедура. Вы задаете ресурсы на активную подписку Azure, а затем развернете или загрузите исходный код приложения в Azure.\n\n  * При настройке в приложении используются различные службы Azure, в том числе Служба приложений Azure и служба хранилища Azure.\n  * Клиентское приложение будет развернуто под учетной записью хранилища Azure, настроенной для статического размещения веб-сайтов.\n\n  </details>"
