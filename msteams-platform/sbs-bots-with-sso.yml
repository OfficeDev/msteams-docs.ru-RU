### YamlMime:Tutorial
title: Бот Teams с единым входом
metadata:
  title: Teams с SSO
  description: В этом руководстве вы узнаете, как настроить SSO в боте для Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Подробнее о проверке подлинности ботов
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a005f1123507e2f4f4d7e255b39a42a0eea233cb
  ms.sourcegitcommit: a36760750ff4f510c374a4c956be57f7c1b4a0db
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/20/2022
  ms.locfileid: "63674945"
items:
- durationInMinutes: 1
  content: "Teams боты — это диалоговые боты, которые запускают повторяющиеся автоматические задачи, которые делают пользователи, например служба поддержки клиентов. Пользователю необходимо несколько раз войти с учетными данными для выполнения повторяющихся задач. Метод проверки подлинности единой регистрации (SSO) в Azure Active Directory тихо обновляет маркер проверки подлинности. Это приводит к сокращению числа случаев, когда пользователям необходимо вводить учетные данные входа. \n\nБот ведет себя по-разному в зависимости от разговора, в который он вовлечен:\n\n* Боты в беседах с каналами и групповыми чатами требуют от пользователя @mention бота.\n* Ботам в личной беседе не требуют @упоминания. Все сообщения, отправленные пользователем, отправляются в бот.\n\nЭто пошаговое руководство по созданию бота с включенной проверкой подлинности SSO. Вы увидите следующий вывод:\n\n![Mobile, вписався в бот](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Предварительные условия
  durationInMinutes: 1
  content: "Убедитесь, что вы установите следующие средства и настроите среду разработки:  \n\n* Активная Microsoft Teams учетная запись с изображением профиля\n\n  > [!TIP]\n  > Убедитесь, Microsoft Teams учетная запись не является гостевой учетной записью.\n\n* [ngrok или](https://ngrok.com/) эквивалентное решение тоннелей\n\n  > [!NOTE]\n  > После скачивания ngrok зарегистриройте и установите [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 или последней версии\n* [Microsoft 365 учетной](concepts/build-and-test/prepare-your-o365-tenant.md) записи разработчика или Teams учетной записи с соответствующими разрешениями на установку приложения\n"
- title: Настройка бота в службе Azure Bot
  durationInMinutes: 5
  content: "Чтобы проверить подлинность бота с помощью SSO, можно настроить бот в службе Azure Bot. Зарегистрируйте бота в службе Azure Bot Service при разработке и его хозяйской службе в Azure. Выполните следующие действия:\n\n* Для создания туннеля к конечным точкам веб-сервера используйте ngrok.\n* Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n* Создание секрета клиента, который позволяет SSO-проверку подлинности бота.\n* Добавьте Microsoft Teams канал, чтобы развернуть бот в Teams канал.\n* Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\nИспользуйте ngrok для создания туннеля для общедоступных конечных точек HTTPS локального запуска веб-сервера. Запустите следующую команду в ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Создание ресурса Azure Bot**\n\n1. Перейдите [на Microsoft Azure портал.](https://portal.azure.com/)\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **бот Azure и** выберите ключ Enter.\n1. Выберите **Azure Bot**.\n\n    ![Создание карты-бота Azure](~/assets/images/bots/createazurebot.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя ручки бота в **ручке Bot**.\n1. Из списка **выпаданий** подписки выберите подписку.\n1. Из списка **выпаданий** группы Ресурсов выберите группу ресурсов.\n    \n    Чтобы создать новый ресурс, выберите **Создание** нового, введите имя ресурса, выберите **ОК и выберите** необходимое расположение из списка  выпаданий расположения группы новых ресурсов.\n\n    > [!NOTE]\n    > В разделе Microsoft App ID уже выбран **новый ID** приложения Майкрософт. Вы можете выбрать **использование существующей регистрации приложений**, ввести **существующий код приложения** и ввести **пароль существующего приложения**.\n\n1. Выберите **Проверить и создать**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Если проверка пройдет, выберите **Создать**.\n\n    Подготовка службы бота занимает несколько минут.\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы перечислены в группе ресурсов.\n\n    Теперь создан бот Azure.\n\n    ![Созданный ресурс бота Azure](~/assets/images/bots/Azurebotresource.png)\n\n**Создание секрета клиента**\n\n1. В **Параметры** выберите **Конфигурация**.\n\n   > [!TIP]\n   > Сохраните **microsoft App ID** или **client ID** для будущих ссылок.\n\n1. Выберите **multiTenant под** **типом бота**.\n\n     ![Тип бота](~/assets/images/bots/bot-type.png)\n\n1. Рядом с **microsoft App ID** выберите **Управление**.\n\n     ![Microsoft App ID](~/assets/images/bots/MicrosoftAppID.png)\n\n1. В разделе **Секреты клиента** выберите **новый секрет клиента**. **Появится окно \"Добавление секрета клиента**\".  \n\n1. **Введите Описание** и выберите **Добавить**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. В **столбце Значение** выберите **Копию для буфера обмена** данными и сохраните секретный ИД клиента для будущей ссылки.\n\n     ![Значение секрета клиента](~/assets/images/bots/valueclientsecret.png)\n   \n**Добавление канала Microsoft Teams**\n\n1. Перейдите к **дому**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Откройте бот, который указан в разделе **Последние ресурсы** .\n1. Выберите **каналы в** левой области и выберите **Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Откройте Teams из каналов](~/assets/images/bots/channel-teams.png)    \n      ![Выберите Teams](~/assets/images/bots/select-teams.png)    \n1. Нажмите **Сохранить**.\n1. Выберите почтовый ящик, чтобы принять условия службы и выбрать **Согласование**.</br>\n      ![Условия обслуживания](~/assets/images/bots/select-terms-of-service.png)\n\n**Добавление конечной точки обмена сообщениями**\n\n1. В **Параметры** для созданного вами бота Azure выберите **Конфигурация**.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io), как показано на следующем изображении:\n\n    ![URL-адрес https ngrok](~/assets/images/bots/ngrokURL.png)\n\n1. В **конечной точке** обмена сообщениями используйте URL-адрес HTTPS, доступный в ngrok, а в конце **URL-адреса добавьте /api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Нажмите **Применить**.\n\n    Вы успешно создали бот в службе Azure Bot Service, и теперь необходимо настроить подключение к службе ботов.\n"
- title: Настройка SSO для бота
  durationInMinutes: 5
  content: "Чтобы служба ботов позволила пользователю войти и получить доступ к боту, необходимо настроить SSO для бота. Для этого выполните следующие действия:\n\n* Добавьте URI перенаправления в ресурс бота Azure.\n* Обнародуйте конечную точку API, чтобы указать расположение, откуда можно получить доступ к ресурсам.\n* Авторизировать клиентские приложения.\n* Добавьте все необходимые разрешения API для вызовов вниз по течению.\n* Включить неявный грант.\n* Манифест обновления.\n* Настройка подключения к службе bot.\n\n**Добавление URI перенаправления в ресурс бота Azure**\n\n1. Рядом с **microsoft App ID** выберите **Управление**.</br>\n    ![Управление ID приложения](~/assets/images/bots/select-manage.png)\n1. На левой стороне ресурса бота выберите **проверку подлинности**.\n1. В **конфигурациях платформы** выберите **Добавить платформу**.\n1. Выберите платформу **Веб**.\n\n1. **Введите URL-адреса перенаправления** как **https://token.botframework.com/.auth/web/redirect** и выберите **Настройка**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    URI перенаправления добавляется в ресурс бота Azure.\n\n    ![Перенаправление URI, добавленного в бот-ресурс](~/assets/images/bots/redirectURIadded.png)\n\n**Для разоблачения конечной точки API**\n\n1. На левой области выберите **Expose API**.\n1. Выберите **set** for the Application ID URI.\n1. Используйте показанный URI ID приложения и **api://botid в** начале URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Нажмите **Сохранить**. Сохраните **URI ID приложения для** будущей ссылки.\n1. Нажмите **Добавить область**.\n1. В **имя Scope** введите **access_as_user**.\n1. В **Кто может согласиться?**, переключиться на **администраторов и пользователей**.\n1. Введите следующие значения в полях:\n\n    | Поле | Значение |\n    | ----- | ----- |\n    | Имя отображения согласия администратора | Teams может получить доступ к профилю пользователя |\n    | Описание согласия администратора | Позволяет Teams веб-API приложения в качестве текущего пользователя. |\n    | Имя отображения согласия пользователя | Teams получить доступ к вашему профиле пользователя и сделать запросы от вашего имени |\n    | Описание согласия пользователя | Включить Teams для вызова API этого приложения с тем же правам, что и у вас. |\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Нажмите кнопку **Добавить область**. Имя области автоматически совпадает с URI приложения, access_as_user **добавлен** до конца.\n\n    ![API, выставленный и добавленный объем](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Авторизации клиентских приложений**\n\nДобавьте следующие ID в качестве **авторизованного клиентского** приложения, а также выберите поле для **разрешенных областей**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams или настольного приложения)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams веб-приложение)</br>     \n    ![Добавление клиентского приложения в приложение](~/assets/images/bots/addclientapplication1.png)        \n\n**Добавление необходимых разрешений API для вызовов вниз по течению**\n\n1. Выберите **разрешения API с** левой области.\n1. Добавьте все разрешения, делегированные пользователем для API вниз по течению, например User.Read.</br>\n    ![Разрешения пользователей API](~/assets/images/bots/APIpermissions.png)\n\n**Включить неявный грант**\n\n1. Выберите **проверку подлинности** с левой области.\n1. Выберите **контрольные ящики** маркеров Доступа и маркеров **ID** .</br>\n    ![Флажки проверки подлинности для приложения](~/assets/images/bots/authenticationcheckboxes.png)\n1. Выберите **Сохранить** , чтобы сохранить изменения.\n\n**Обновление манифеста**\n\n1. Выберите **Манифест** с левой области.\n1. Убедитесь, что для элемента config **установлено \"accessTokenAcceptedVersion\": 2**. Если нет, измените его значение на **2 и** выберите **Сохранить**. (Если вы уже тестируете бота в Teams, необходимо подписать это приложение и Teams. Затем снова зарегистрився, чтобы увидеть это изменение).</br>\n    ![Изменение манифеста](~/assets/images/bots/update-manifest.png)</br>\n\n**Настройка подключения к службе bot**\n\n1. Перейдите **на страницу** >  **ConfigurationAdd OAuth Connection Параметры**.\n1. Выберите **Добавить подключение OAuth Параметры**.\n1. В **новом параметре подключения** введите следующие сведения:\n\n    | Поле | Значение или описание |\n    | ----- | ----- |\n    | Имя | Введите имя для нового параметра подключения. Имя можно использовать в настройках кода службы бота. |\n    | Service Provider | Выберите **Azure Active Directory V2**. |\n    | ID клиента | Сохранено ранее в **качестве ID приложения Майкрософт**. |\n    | Секрет клиента | Сохранено ранее **в качестве значения** секретного ID клиента. |\n    | URL-Exchange маркера | Используйте **URL-адрес ID приложения,** полученный ранее при разоблачении конечной точки API. |\n    | Идентификатор клиента | **Введите общие**. |\n    | Scopes | **Введите User.Read** и добавьте все области, необходимые при указании разрешений для API ниже по течению. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Нажмите **Сохранить**.\n1. Нажмите **Применить**.\n"
- title: Настройка и запуск образца бота
  durationInMinutes: 1
  content: >
    Настройте образец бота, чтобы понять, как проверить подлинность разговорного бота в Microsoft Teams.


    **Настройка и запуск образца бота**


    1. Откройте Visual Studio.

    1. В Visual Studio выберите **клон репозиторий**.

    1. В **расположении Репозиторий** введите **https://github.com/OfficeDev/Microsoft-Teams-Samples.git**. Убедитесь, что вы **обратите внимание на путь** , на котором клонирован репозиторий.

    1. Выберите **файл > open > Project/solution**.

    1. Перейдите **в microsoft-Teams-Samples > примеры >-bot-conversation-sso-quickstart > csharp_dotnetcore** папке.

    1. Откройте **файл BotSSOCSharp.csproj** .

    1. Откройте **файл appsettings.json** .

    1. Обновление **конфигурации appsettings.json** для бота для использования `MicrosoftAppId` и `MicrosoftAppPassword`. Используйте имя подключения OAuth в качестве **имени подключения**.

        > [!NOTE]
        > Вы можете получить страницу `MicrosoftAppId` конфигурации бота. Это `MicrosoftAppPassword` ИД секрета клиента, сохраненный ранее.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Выберите **клавишу F5** для запуска этого проекта.

        <br>

        <details>

        <summary><b>Устранение неполадок</b></summary>

        Если вы не можете найти **ошибку** пакета, выполните следующие действия:

        1.  Перейдите **в** >  **инструменты** >  NuGet диспетчер пакетов диспетчер пакетов Параметры.
        1.  В **отображемом** окне **Параметры выберите NuGet диспетчер пакетов** >  **Package Sources**.
        1.  Нажмите **Добавить**.
        1.  В **Name** введите **nuget.org** и в **Источник** введите **https://api.nuget.org/v3/index.json**.
        1.  Выберите **Обновление** и **ОК**.
        1.  Перестройка проекта.
        <br>

        </details>
- title: Настройка и запуск Teams приложения
  durationInMinutes: 2
  content: >
    Наиболее полный способ тестирования бота — создание пакета приложений и его загрузка в Teams. Этот метод является единственным способом проверки всех функциональных возможностей, доступных вашему боту, во всех сферах. Вы можете настроить и запустить приложение Teams, загрузив **manifest.zipфайл**.


    **Чтобы запустить Teams, загрузив manifest.zip файл**


    1. В Visual Studio перейдите в **папку appPackage/**.

    1. Откройте **файл manifest.json** .

    1. В **файле manifest.json** найдите **{TODO: MicrosoftAppId}** и замените его на microsoft App ID.

    1. В Windows Explorer перейдите в папку **Microsoft-Teams-Samples > образцы >-bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage**.

    1. Zip содержимое **appPackage /** папки для **созданияmanifest.zip**.

    1. Перейдите в Teams.

    1. Чтобы загрузить **manifest.zip**, выберите **Store > Управление** приложениями > Upload настраиваемом приложении и **откройтеmanifest.zip**.

    1. Выберите **Добавить** , чтобы добавить бот беседы в чат.

        Вы можете взаимодействовать с этим ботом, отправив ему сообщение. Бот обменивается маркером SSO и делает вызов Graph API от вашего имени и возвращает результаты. Он сохраняет вход, если вы не отправляете сообщение в **систему входа**.

    1. Отправьте сообщение боту. Бот беседы просит разрешения в первый раз.

        ![Разрешения на бот](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Выберите **Продолжить** прием разрешений.


    1. Выберите **Accept** for **Permissions requested**.

        ![Mobile, вписався в бот](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Полная задача
  durationInMinutes: 1
  content: >
    Вы придумали что-то подобное?


    ![Mobile, вписався в бот](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Вы завершили руководство по началу работы с SSO в боте для Microsoft Teams с помощью bot Framework.
