### YamlMime:Tutorial
title: Бот Teams с единым входом
metadata:
  title: Бот Teams с единым входом
  description: В этом руководстве описано, как настроить единый вход в боте для Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Дополнительные сведения о проверке подлинности бота
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1fb468c8b9cc3ce1a8f8d407ea957d579632847c
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887816"
items:
- durationInMinutes: 1
  content: "Боты Teams — это боты для общения, которые выполняют повторяющиеся автоматизированные задачи, выполняемые пользователями, например службу поддержки клиентов. Пользователь должен выполнить вход с учетными данными несколько раз для выполнения повторяющихся задач. Метод проверки подлинности единого входа (SSO) в Azure Active Directory автоматически обновляет маркер проверки подлинности, что приводит к сокращению количества раз, когда пользователям необходимо вводить свои учетные данные для входа. \n\nБот ведет себя по-разному в зависимости от беседы, в которых он участвует:\n\n* Боты в чатах каналов и групп требуют, чтобы пользователь @mention бота.\n* Ботам в личной беседе не требуют @упоминания. Все сообщения, отправленные пользователем, направляются в бот.\n\nЭто пошаговое руководство поможет вам создать бот с включенной проверкой подлинности единого входа. Вы увидите следующие выходные данные:\n\n![Мобильный вход в бот](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Предварительные условия
  durationInMinutes: 1
  content: "Убедитесь, что вы установите следующие средства и настроите среду разработки:  \n\n* Активная учетная запись Microsoft Teams с изображением профиля\n\n  > [!TIP]\n  > Убедитесь, что учетная запись Microsoft Teams не является гостевой.\n\n* [ngrok или](https://ngrok.com/) эквивалентное решение для туннелирования\n\n  > [!NOTE]\n  > После скачивания ngrok зарегистрируйтесь и установите [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 или последняя версия\n* [Учетная запись разработчика Microsoft 365](concepts/build-and-test/prepare-your-o365-tenant.md) или доступ к учетной записи Teams с соответствующими разрешениями на установку приложения\n"
- title: Настройка бота в службе Azure Bot
  durationInMinutes: 5
  content: "Чтобы проверить подлинность бота с помощью единого входа, можно настроить бот в службе Azure Bot. Зарегистрируйте бота в службе Azure Bot при разработке и размещении в Azure. Выполните следующие действия:\n\n* Используйте ngrok для создания туннеля к конечным точкам веб-сервера.\n* Создайте ресурс Azure Bot для регистрации бота в службе Azure Bot.\n* Создайте секрет клиента, который включает проверку подлинности единого входа бота.\n* Добавьте канал Microsoft Teams для развертывания бота в канале Teams.\n* Добавьте конечную точку обмена сообщениями в созданный туннель ngrok.\n\nИспользуйте ngrok для создания туннеля к общедоступным конечным точкам HTTPS локального веб-сервера. Выполните следующую команду в ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Создание ресурса Azure Bot**\n\n1. Перейдите на [портал Microsoft Azure](https://portal.azure.com/).\n1. Выберите **Создать ресурс**.\n1. В поле поиска введите **бот Azure** и нажмите клавишу ВВОД.\n1. Выберите **Azure Bot**.\n\n    ![Создание карточки бота Azure](~/assets/images/bots/createazurebot.png)\n\n1. Нажмите **Создать**.\n1. Введите необходимое имя дескриптора бота в **дескрипторах бота**.\n1. В **раскрывающемся** списке \"Подписка\" выберите подписку.\n1. В **раскрывающемся списке** \"Группа ресурсов\" выберите группу ресурсов.\n    \n    Чтобы создать ресурс, выберите \"Создать **\",** введите имя ресурса, нажмите кнопку **\"** ОК\" и выберите необходимое расположение в раскрывающемся списке \"Новое расположение группы ресурсов\".\n\n    > [!NOTE]\n    > В разделе \"Идентификатор приложения Майкрософт\" уже выбран **параметр \"Создать новый** идентификатор приложения Майкрософт\". Вы можете выбрать **\"Использовать существующую регистрацию приложения**\" **, ввести** идентификатор существующего приложения и ввести **пароль существующего приложения**.\n\n1. Выберите **Проверить и создать**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Если проверка пройдена, нажмите **Создать**.\n\n    Подготовка службы бота займет несколько секунд.\n\n1. Выберите пункт **Перейти к ресурсу**. Бот и связанные ресурсы указаны в группе ресурсов.\n\n    Теперь бот Azure создан.\n\n    ![Созданный ресурс бота Azure](~/assets/images/bots/Azurebotresource.png)\n\n**Создание секрета клиента**\n\n1. В разделе **Параметры** выберите **Конфигурация**.\n\n   > [!TIP]\n   > Сохраните **идентификатор приложения Майкрософт или** **идентификатор клиента для** дальнейшей справки.\n\n1. Выберите **\"Мультитенантный\" в** **разделе \"Тип бота\"**.\n\n     ![Тип бота](~/assets/images/bots/bot-type.png)\n\n1. Рядом с **идентификатором приложения Майкрософт** выберите \" **Управление\"**.\n\n     ![Идентификатор приложения Майкрософт](~/assets/images/bots/MicrosoftAppID.png)\n\n1. В разделе **\"Секреты клиента** \" выберите \" **Новый секрет клиента\"**. **Появится окно \"Добавление секрета** клиента\".  \n\n1. Введите **описание** и нажмите **Добавить**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. В столбце **Значение** выберите **Копировать в буфер обмена** и сохраните идентификатор секрета клиента для дальнейшего использования.\n\n     ![Значение секрета клиента](~/assets/images/bots/valueclientsecret.png)\n   \n**Добавление канала Microsoft Teams**\n\n1. Перейдите на **домашнюю страницу**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Откройте бот, который указан в разделе **Последние ресурсы**.\n1. Выберите **\"Каналы\"** в левой области и выберите **Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Открытие Teams из каналов](~/assets/images/bots/channel-teams.png)    \n      ![Выбор Teams](~/assets/images/bots/select-teams.png)    \n1. Нажмите **Сохранить**.\n1. Установите флажок, чтобы принять условия обслуживания, и выберите **Принять**.</br>\n      ![Условия обслуживания](~/assets/images/bots/select-terms-of-service.png)\n\n**Добавление конечной точки обмена сообщениями**\n\n1. В **разделе \"Параметры** \" для созданного бота Azure выберите \" **Конфигурация\"**.\n1. Перейдите в ngrok.\n1. Скопируйте URL-адрес HTTPS (https to io), как показано на следующем рисунке:\n\n    ![URL-адрес HTTPS ngrok](~/assets/images/bots/ngrokURL.png)\n\n1. В **конечной точке обмена** сообщениями используйте URL-адрес HTTPS, доступный в ngrok, и в конце URL-адреса добавьте **/api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Нажмите **Применить**.\n\n    Вы успешно настроили бот в службе Azure Bot, и теперь необходимо настроить подключение к службе ботов.\n"
- title: Настройка единого входа для бота
  durationInMinutes: 5
  content: "Чтобы служба Ботов разрешла пользователю входить в бот и получать к нему доступ, необходимо настроить единый вход для бота. Для этого выполните следующие действия:\n\n* Добавьте URI перенаправления в ресурс бота Azure.\n* Предоставление конечной точки API для указания расположения, из которого можно получить доступ к ресурсам.\n* Авторизация клиентских приложений.\n* Добавьте все необходимые разрешения API для подчиненных вызовов.\n* Включите неявное предоставление.\n* Обновление манифеста.\n* Настройка подключения к службе Bot.\n\n**Добавление URI перенаправления в ресурс бота Azure**\n\n1. Рядом с **идентификатором приложения Майкрософт** выберите \" **Управление\"**.</br>\n    ![Управление идентификатором приложения](~/assets/images/bots/select-manage.png)\n1. В левой области ресурса бота выберите \" **Проверка подлинности\"**.\n1. В разделе **Конфигурации платформы** выберите **Добавить платформу**.\n1. Выберите платформу **Веб**.\n\n1. **Введите URI перенаправления** и `https://token.botframework.com/.auth/web/redirect` выберите **\"Настроить\"**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    URI перенаправления добавляется в ресурс бота Azure.\n\n    ![URI перенаправления, добавленный в ресурс бота](~/assets/images/bots/redirectURIadded.png)\n\n**Предоставление конечной точки API**\n\n1. В левой области выберите \" **Предоставить API\"**.\n1. Выберите **\"Задать** \" для URI идентификатора приложения.\n1. Используйте отображаемый URI идентификатора приложения и **добавьте api://botid в** начале URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Нажмите **Сохранить**. Сохраните **URI идентификатора приложения** для дальнейшей ссылки.\n1. Нажмите **Добавить область**.\n1. В **поле \"Имя области****\" введите access_as_user**.\n1. В **поле \"Кто может дать согласие?\"**, перейдите к **администраторам и пользователям**.\n1. Введите следующие значения в поля:\n\n    | Поле | Значение |\n    | ----- | ----- |\n    | Отображаемое имя согласия администратора | Teams может получить доступ к профилю пользователя |\n    | Описание согласия администратора | Позволяет Teams вызывать веб-API приложения в качестве текущего пользователя. |\n    | Отображаемое имя согласия пользователя | Teams может получить доступ к вашему профилю пользователя и выполнять запросы от вашего имени |\n    | Описание согласия пользователя | Разрешите Teams вызывать API этого приложения с тем же правами, что и у вас. |\n\n1. Убедитесь, что параметру **Состояние** присвоено значение **Включено**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Нажмите кнопку **Добавить область**. Имя области автоматически совпадает с универсальным кодом ресурса (URI) идентификатора приложения, а **/access_as_user** добавляется в конец.\n\n    ![API exposed and scope added](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Авторизация клиентских приложений**\n\nДобавьте следующие идентификаторы **в качестве** авторизованных клиентских приложений, а также установите флажок для **авторизованных областей**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (мобильное или настольное приложение Teams)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (веб-приложение Teams)</br>     \n    ![Добавление клиентского приложения в приложение](~/assets/images/bots/addclientapplication1.png)        \n\n**Добавление необходимых разрешений API для нижестоящих вызовов**\n\n1. Выберите **разрешения API** на панели слева.\n1. Добавьте все делегированные пользователем разрешения, необходимые приложению для подчиненных API, например User.Read.</br>\n    ![Разрешения пользователя API](~/assets/images/bots/APIpermissions.png)\n\n**Включение неявного предоставления**\n\n1. Выберите **Приложения** на панели слева.\n1. Установите флажки **Маркеры доступа** и **Маркеры идентификаторов**.</br>\n    ![Флажки проверки подлинности для приложения](~/assets/images/bots/authenticationcheckboxes.png)\n1. Нажмите кнопку **Сохранить**, чтобы сохранить изменения.\n\n**Обновление манифеста**\n\n1. Выберите **Манифест** на панели слева.\n1. Убедитесь, что для элемента конфигурации задано значение **\"accessTokenAcceptedVersion\": 2**. В противном случае измените его значение на **2** и нажмите кнопку **\"Сохранить\"**. (Если вы уже тестируете бот в Teams, необходимо выйти из этого приложения и выйти из Teams. Затем снова войдите в систему, чтобы увидеть это изменение.</br>\n    ![Изменение манифеста](~/assets/images/bots/update-manifest.png)</br>\n\n**Настройка подключения к службе Bot**\n\n1. Перейдите **на страницу \"Конфигурация** > **\" \"Добавить параметры подключения OAuth\"**.\n1. Нажмите кнопку **Добавить параметры подключения OAuth** на экране Конфигурация.\n1. В **поле \"Новый параметр подключения**\" введите следующие сведения:\n\n    | Поле | Значение или описание |\n    | ----- | ----- |\n    | Имя | Введите имя нового параметра подключения. Имя можно использовать в параметрах кода службы бота. |\n    | Service Provider | Выберите **Azure Active Directory версии 2**. |\n    | Идентификатор клиента | Сохранено ранее в качестве **идентификатора приложения Майкрософт**. |\n    | Секрет клиента | Сохранено ранее **в качестве значения** идентификатора секрета клиента. |\n    | URL-адрес exchange маркеров | Используйте **URL-адрес идентификатора приложения, полученный** ранее при раскрытии конечной точки API. |\n    | Идентификатор клиента | Введите **общее**. |\n    | Scopes | **Введите User.Read**, а также добавьте  все области, необходимые при указании разрешений для подчиненных API. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Нажмите кнопку **Сохранить**.\n1. Нажмите **Применить**.\n"
- title: Настройка и запуск примера бота
  durationInMinutes: 1
  content: >
    Настройте пример бота, чтобы понять, как аутентификация чат-бота в Microsoft Teams.


    **Настройка и запуск примера бота**


    1. Откройте Visual Studio.

    1. В Visual Studio выберите **"Клонировать репозиторий"**.

    1. В **расположении репозитория** введите `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Запишите путь **,** по которому клонирован репозиторий.

    1. Выберите **файл "** > **Открыть** > **проект или решение"**.

    1. Перейдите **в раздел Microsoft-Teams-Samples > примеры > bot-conversation-sso-quickstart > csharp_dotnetcore** папке.

    1. Откройте файл **BotSSOCSharp.csproj** .

    1. Откройте файл **appsettings.json** .

    1. **Обновите конфигурацию appsettings.json** для бота, чтобы использовать и `MicrosoftAppId` `MicrosoftAppPassword`. Используйте имя подключения OAuth в качестве **имени подключения**.

        > [!NOTE]
        > Вы можете получить эту страницу `MicrosoftAppId` на странице конфигурации бота. Значение `MicrosoftAppPassword` для идентификатора секрета клиента, сохраненного ранее.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Нажмите **клавишу F5** , чтобы запустить этот проект.

        <br>

        <details>

        <summary><b>Устранение неполадок</b></summary>

        Если вы получаете сообщение **об ошибке "Не удается найти пакет** ", выполните следующие действия.

        1.  Перейдите к **параметрам диспетчера** >  пакетов **Диспетчера пакетов NuGet** > **tools.**
        1.  В **отобразимом** окне "Параметры" выберите источники пакетов **диспетчера пакетов** >  **NuGet**.
        1.  Нажмите **Добавить**.
        1.  В **поле "Имя**" введите `nuget.org` и **введите "Источник**" `https://api.nuget.org/v3/index.json`.
        1.  Нажмите **кнопку "Обновить** " и " **ОК"**.
        1.  Перестройте проект.
        <br>

        </details>
- title: Настройка и запуск приложения Teams
  durationInMinutes: 2
  content: >
    Самый полный способ тестирования бота — создание пакета приложения и отправка его в Teams. Этот метод является единственным способом проверки всех функциональных возможностей, доступных боту, во всех областях. Вы можете настроить и запустить приложение Teams, передав `manifest.zip` файл.


    **Запуск приложения Teams путем отправки manifest.zip файла**


    1. В Visual Studio перейдите к папке `appPackage/` .

    1. Откройте файл `manifest.json`.

    1. В файле `manifest.json` найдите **{TODO: MicrosoftAppId}** и замените его идентификатором приложения Майкрософт.

    1. В проводнике Windows перейдите к примерам **microsoft-Teams-Samples > > bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage** .

    1. Заархивируйте содержимое создаемой `appPackage/` папки `manifest.zip`.

    1. Перейдите в Teams.

    1. Для отправки `manifest.zip`выберите **Store > Manage your apps > Upload a custom app** and open `manifest.zip`.

    1. Нажмите **кнопку "** Добавить", чтобы добавить бот беседы в чат.

        Вы можете взаимодействовать с этим ботом, отправляя сообщение. Бот обменивает маркер единого входа и вызывает API Graph от вашего имени и возвращает результаты. При этом вы войдете в систему, если не отправите сообщение для **выхода**.

    1. Отправьте сообщение боту. Бот беседы запрашивает разрешения в первый раз.

        ![Разрешения для бота](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Нажмите **кнопку "** Продолжить", чтобы принять разрешения.


    1. Выберите **"Принять** **для запрашиваемых разрешений"**.

        ![Мобильный вход в бот](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Полный запрос
  durationInMinutes: 1
  content: >
    У вас возникла такая проблема?


    ![Мобильный вход в бот](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Вы завершили работу с руководством по началу работы с единым входом в боте для Microsoft Teams с помощью Bot Framework.
